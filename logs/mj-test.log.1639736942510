INFO  11:06:57,250 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  11:06:57,528 - #2 program
INFO  11:06:57,528 - #51 p
INFO  11:06:57,528 - #7 const
INFO  11:06:57,530 - #51 int
INFO  11:06:57,530 - #51 size
INFO  11:06:57,532 - #35 =
INFO  11:06:57,532 - #48 10
INFO  11:06:57,532 - #38 ;
INFO  11:06:57,536 - #4 class
INFO  11:06:57,536 - #51 Table
INFO  11:06:57,536 - #46 {
INFO  11:06:57,538 - #51 int
INFO  11:06:57,540 - #51 pos
INFO  11:06:57,540 - #44 [
INFO  11:06:57,540 - #45 ]
INFO  11:06:57,540 - #40 ,
INFO  11:06:57,544 - #51 neg
INFO  11:06:57,544 - #44 [
INFO  11:06:57,544 - #45 ]
INFO  11:06:57,544 - #38 ;
INFO  11:06:57,545 - #46 {
INFO  11:06:57,547 - #15 void
INFO  11:06:57,547 - #51 putp
INFO  11:06:57,547 - #42 (
INFO  11:06:57,547 - #51 int
INFO  11:06:57,547 - #51 a
INFO  11:06:57,547 - #40 ,
INFO  11:06:57,549 - #51 int
INFO  11:06:57,549 - #51 idx
INFO  11:06:57,549 - #43 )
INFO  11:06:57,549 - #46 {
INFO  11:06:57,550 - #51 thi
INFO  11:06:57,551 - #41 .
INFO  11:06:57,553 - #51 pos
INFO  11:06:57,554 - #44 [
INFO  11:06:57,554 - #51 idx
INFO  11:06:57,554 - #45 ]
INFO  11:06:57,554 - #35 =
INFO  11:06:57,554 - #51 a
INFO  11:06:57,556 - #38 ;
INFO  11:06:57,559 - #47 }
INFO  11:06:57,559 - #15 void
INFO  11:06:57,560 - #51 putn
INFO  11:06:57,562 - #42 (
INFO  11:06:57,562 - #51 int
INFO  11:06:57,562 - #51 a
INFO  11:06:57,562 - #40 ,
INFO  11:06:57,562 - #51 int
INFO  11:06:57,563 - #51 idx
INFO  11:06:57,563 - #43 )
INFO  11:06:57,563 - #46 {
INFO  11:06:57,563 - #51 thi
INFO  11:06:57,563 - #41 .
INFO  11:06:57,563 - #51 neg
INFO  11:06:57,563 - #44 [
INFO  11:06:57,563 - #51 idx
INFO  11:06:57,563 - #45 ]
INFO  11:06:57,563 - #35 =
INFO  11:06:57,563 - #51 a
INFO  11:06:57,563 - #38 ;
INFO  11:06:57,563 - #47 }
INFO  11:06:57,564 - #51 int
INFO  11:06:57,564 - #51 getp
INFO  11:06:57,564 - #42 (
INFO  11:06:57,564 - #51 int
INFO  11:06:57,564 - #51 idx
INFO  11:06:57,564 - #43 )
INFO  11:06:57,564 - #46 {
INFO  11:06:57,564 - #14 return
INFO  11:06:57,564 - #51 pos
INFO  11:06:57,564 - #44 [
INFO  11:06:57,564 - #51 idx
INFO  11:06:57,564 - #45 ]
INFO  11:06:57,565 - #38 ;
INFO  11:06:57,565 - #47 }
INFO  11:06:57,565 - #51 int
INFO  11:06:57,565 - #51 getn
INFO  11:06:57,565 - #42 (
INFO  11:06:57,565 - #51 int
INFO  11:06:57,565 - #51 idx
INFO  11:06:57,565 - #43 )
INFO  11:06:57,565 - #46 {
INFO  11:06:57,565 - #14 return
INFO  11:06:57,565 - #51 neg
INFO  11:06:57,565 - #44 [
INFO  11:06:57,566 - #51 idx
INFO  11:06:57,566 - #45 ]
INFO  11:06:57,566 - #38 ;
INFO  11:06:57,566 - #47 }
INFO  11:06:57,566 - #47 }
INFO  11:06:57,566 - #47 }
INFO  11:06:57,566 - #21 record
INFO  11:06:57,566 - #51 Board
INFO  11:06:57,566 - #46 {
INFO  11:06:57,566 - #51 int
INFO  11:06:57,567 - #51 rows
INFO  11:06:57,567 - #40 ,
INFO  11:06:57,567 - #51 columns
INFO  11:06:57,567 - #38 ;
INFO  11:06:57,567 - #47 }
INFO  11:06:57,567 - #51 Table
INFO  11:06:57,570 - #51 val
INFO  11:06:57,570 - #38 ;
INFO  11:06:57,570 - #51 Board
INFO  11:06:57,570 - #51 board
INFO  11:06:57,570 - #38 ;
INFO  11:06:57,570 - #46 {
INFO  11:06:57,570 - #15 void
INFO  11:06:57,573 - #51 f
INFO  11:06:57,573 - #42 (
INFO  11:06:57,573 - #51 char
INFO  11:06:57,573 - #51 ch
INFO  11:06:57,573 - #40 ,
INFO  11:06:57,573 - #51 int
INFO  11:06:57,573 - #51 a
INFO  11:06:57,573 - #40 ,
INFO  11:06:57,573 - #51 int
INFO  11:06:57,574 - #51 arg
INFO  11:06:57,574 - #43 )
INFO  11:06:57,574 - #51 int
INFO  11:06:57,574 - #51 x
INFO  11:06:57,574 - #38 ;
INFO  11:06:57,574 - #46 {
INFO  11:06:57,574 - #51 x
INFO  11:06:57,574 - #35 =
INFO  11:06:57,574 - #51 arg
INFO  11:06:57,574 - #38 ;
INFO  11:06:57,574 - #47 }
INFO  11:06:57,574 - #15 void
INFO  11:06:57,574 - #51 main
INFO  11:06:57,575 - #42 (
INFO  11:06:57,575 - #43 )
INFO  11:06:57,577 - #51 int
INFO  11:06:57,577 - #51 x
INFO  11:06:57,577 - #40 ,
INFO  11:06:57,578 - #51 i
INFO  11:06:57,578 - #38 ;
INFO  11:06:57,578 - #51 char
INFO  11:06:57,578 - #51 c
INFO  11:06:57,578 - #38 ;
INFO  11:06:57,578 - #46 {
INFO  11:06:57,578 - #51 val
INFO  11:06:57,578 - #35 =
INFO  11:06:57,578 - #11 new
INFO  11:06:57,578 - #51 Table
INFO  11:06:57,578 - #38 ;
INFO  11:06:57,581 - #51 val
INFO  11:06:57,581 - #41 .
INFO  11:06:57,581 - #51 pos
INFO  11:06:57,581 - #35 =
INFO  11:06:57,581 - #11 new
INFO  11:06:57,581 - #51 int
INFO  11:06:57,581 - #44 [
INFO  11:06:57,581 - #51 size
INFO  11:06:57,581 - #45 ]
INFO  11:06:57,581 - #38 ;
INFO  11:06:57,582 - #51 val
INFO  11:06:57,582 - #41 .
INFO  11:06:57,582 - #51 neg
INFO  11:06:57,582 - #35 =
INFO  11:06:57,582 - #11 new
INFO  11:06:57,582 - #51 int
INFO  11:06:57,582 - #44 [
INFO  11:06:57,582 - #51 size
INFO  11:06:57,584 - #45 ]
INFO  11:06:57,584 - #38 ;
INFO  11:06:57,584 - #13 read
INFO  11:06:57,584 - #42 (
INFO  11:06:57,584 - #51 x
INFO  11:06:57,584 - #43 )
INFO  11:06:57,584 - #38 ;
INFO  11:06:57,584 - #8 if
INFO  11:06:57,584 - #42 (
INFO  11:06:57,584 - #51 x
INFO  11:06:57,584 - #29 >
INFO  11:06:57,584 - #48 5
INFO  11:06:57,590 - #43 )
INFO  11:06:57,593 - #46 {
INFO  11:06:57,593 - #20 goto
INFO  11:06:57,593 - #51 skip
INFO  11:06:57,593 - #38 ;
INFO  11:06:57,595 - #47 }
INFO  11:06:57,595 - #51 i
INFO  11:06:57,596 - #35 =
INFO  11:06:57,596 - #48 0
INFO  11:06:57,596 - #38 ;
INFO  11:06:57,596 - #9 do
INFO  11:06:57,596 - #46 {
INFO  11:06:57,596 - #51 val
INFO  11:06:57,596 - #41 .
INFO  11:06:57,596 - #51 putp
INFO  11:06:57,596 - #42 (
INFO  11:06:57,596 - #48 0
INFO  11:06:57,596 - #40 ,
INFO  11:06:57,596 - #51 i
INFO  11:06:57,596 - #43 )
INFO  11:06:57,596 - #38 ;
INFO  11:06:57,597 - #51 val
INFO  11:06:57,597 - #41 .
INFO  11:06:57,597 - #51 putn
INFO  11:06:57,597 - #42 (
INFO  11:06:57,597 - #48 0
INFO  11:06:57,597 - #40 ,
INFO  11:06:57,597 - #51 i
INFO  11:06:57,597 - #43 )
INFO  11:06:57,597 - #38 ;
INFO  11:06:57,597 - #51 i
INFO  11:06:57,597 - #36 ++
INFO  11:06:57,597 - #38 ;
INFO  11:06:57,599 - #47 }
INFO  11:06:57,599 - #10 while
INFO  11:06:57,599 - #42 (
INFO  11:06:57,599 - #51 i
INFO  11:06:57,599 - #31 <
INFO  11:06:57,600 - #51 size
INFO  11:06:57,602 - #43 )
INFO  11:06:57,602 - #38 ;
INFO  11:06:57,602 - #51 skip
INFO  11:06:57,602 - #39 :
INFO  11:06:57,602 - #51 f
INFO  11:06:57,602 - #42 (
INFO  11:06:57,602 - #51 c
INFO  11:06:57,602 - #40 ,
INFO  11:06:57,602 - #51 x
INFO  11:06:57,602 - #40 ,
INFO  11:06:57,602 - #51 i
INFO  11:06:57,602 - #43 )
INFO  11:06:57,602 - #38 ;
INFO  11:06:57,602 - #51 board
INFO  11:06:57,602 - #35 =
INFO  11:06:57,602 - #11 new
INFO  11:06:57,603 - #51 Board
INFO  11:06:57,603 - #38 ;
INFO  11:06:57,603 - #13 read
INFO  11:06:57,603 - #42 (
INFO  11:06:57,603 - #51 board
INFO  11:06:57,603 - #41 .
INFO  11:06:57,603 - #51 rows
INFO  11:06:57,603 - #43 )
INFO  11:06:57,603 - #38 ;
INFO  11:06:57,603 - #51 x
INFO  11:06:57,603 - #35 =
INFO  11:06:57,603 - #51 board
INFO  11:06:57,603 - #41 .
INFO  11:06:57,603 - #51 rows
INFO  11:06:57,603 - #38 ;
INFO  11:06:57,603 - #9 do
INFO  11:06:57,603 - #46 {
INFO  11:06:57,603 - #8 if
INFO  11:06:57,603 - #42 (
INFO  11:06:57,603 - #51 x
INFO  11:06:57,603 - #32 <=
INFO  11:06:57,603 - #48 0
INFO  11:06:57,606 - #43 )
INFO  11:06:57,606 - #3 break
INFO  11:06:57,606 - #38 ;
INFO  11:06:57,606 - #8 if
INFO  11:06:57,609 - #42 (
INFO  11:06:57,609 - #48 0
INFO  11:06:57,609 - #32 <=
INFO  11:06:57,609 - #51 x
INFO  11:06:57,609 - #33 &&
INFO  11:06:57,609 - #51 x
INFO  11:06:57,609 - #31 <
INFO  11:06:57,609 - #51 size
INFO  11:06:57,609 - #43 )
INFO  11:06:57,609 - #46 {
INFO  11:06:57,610 - #51 val
INFO  11:06:57,610 - #41 .
INFO  11:06:57,610 - #51 putp
INFO  11:06:57,610 - #42 (
INFO  11:06:57,610 - #51 val
INFO  11:06:57,610 - #41 .
INFO  11:06:57,610 - #51 getp
INFO  11:06:57,610 - #42 (
INFO  11:06:57,610 - #51 x
INFO  11:06:57,610 - #43 )
INFO  11:06:57,610 - #22 +
INFO  11:06:57,610 - #48 1
INFO  11:06:57,615 - #43 )
INFO  11:06:57,615 - #38 ;
INFO  11:06:57,615 - #47 }
INFO  11:06:57,615 - #6 else
ERROR 11:06:57,616 - 
Sintaksna greska na liniji 49
ERROR 11:06:57,616 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 49
