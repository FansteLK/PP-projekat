INFO  18:38:00,921 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  18:38:00,977 - #2 program
INFO  18:38:00,978 - #51 p
INFO  18:38:00,978 - #7 const
INFO  18:38:00,978 - #51 int
INFO  18:38:00,978 - #51 size
INFO  18:38:00,979 - #35 =
INFO  18:38:00,979 - #48 10
INFO  18:38:00,979 - #38 ;
INFO  18:38:00,980 - #4 class
INFO  18:38:00,981 - #51 Table
INFO  18:38:00,981 - #46 {
INFO  18:38:00,982 - #51 int
INFO  18:38:00,982 - #51 pos
INFO  18:38:00,982 - #44 [
INFO  18:38:00,982 - #45 ]
INFO  18:38:00,982 - #40 ,
INFO  18:38:00,983 - #51 neg
INFO  18:38:00,984 - #44 [
INFO  18:38:00,984 - #45 ]
INFO  18:38:00,984 - #38 ;
INFO  18:38:00,984 - #46 {
INFO  18:38:00,984 - #15 void
INFO  18:38:00,984 - #51 putp
INFO  18:38:00,984 - #42 (
INFO  18:38:00,984 - #51 int
INFO  18:38:00,985 - #51 a
INFO  18:38:00,985 - #40 ,
INFO  18:38:00,985 - #51 int
INFO  18:38:00,985 - #51 idx
INFO  18:38:00,985 - #43 )
INFO  18:38:00,985 - #46 {
INFO  18:38:00,986 - #51 thi
INFO  18:38:00,986 - #41 .
INFO  18:38:00,986 - #51 pos
INFO  18:38:00,986 - #44 [
INFO  18:38:00,986 - #51 idx
INFO  18:38:00,986 - #45 ]
INFO  18:38:00,987 - #35 =
INFO  18:38:00,987 - #51 a
INFO  18:38:00,987 - #38 ;
INFO  18:38:00,988 - #47 }
INFO  18:38:00,988 - #15 void
INFO  18:38:00,988 - #51 putn
INFO  18:38:00,989 - #42 (
INFO  18:38:00,989 - #51 int
INFO  18:38:00,989 - #51 a
INFO  18:38:00,989 - #40 ,
INFO  18:38:00,989 - #51 int
INFO  18:38:00,989 - #51 idx
INFO  18:38:00,989 - #43 )
INFO  18:38:00,989 - #46 {
INFO  18:38:00,989 - #51 thi
INFO  18:38:00,989 - #41 .
INFO  18:38:00,990 - #51 neg
INFO  18:38:00,990 - #44 [
INFO  18:38:00,990 - #51 idx
INFO  18:38:00,990 - #45 ]
INFO  18:38:00,990 - #35 =
INFO  18:38:00,990 - #51 a
INFO  18:38:00,990 - #38 ;
INFO  18:38:00,990 - #47 }
INFO  18:38:00,990 - #51 int
INFO  18:38:00,990 - #51 getp
INFO  18:38:00,990 - #42 (
INFO  18:38:00,990 - #51 int
INFO  18:38:00,991 - #51 idx
INFO  18:38:00,991 - #43 )
INFO  18:38:00,991 - #46 {
INFO  18:38:00,991 - #14 return
INFO  18:38:00,991 - #51 pos
INFO  18:38:00,991 - #44 [
INFO  18:38:00,991 - #51 idx
INFO  18:38:00,991 - #45 ]
INFO  18:38:00,991 - #38 ;
INFO  18:38:00,991 - #47 }
INFO  18:38:00,991 - #51 int
INFO  18:38:00,991 - #51 getn
INFO  18:38:00,991 - #42 (
INFO  18:38:00,991 - #51 int
INFO  18:38:00,991 - #51 idx
INFO  18:38:00,991 - #43 )
INFO  18:38:00,992 - #46 {
INFO  18:38:00,992 - #14 return
INFO  18:38:00,992 - #51 neg
INFO  18:38:00,992 - #44 [
INFO  18:38:00,992 - #51 idx
INFO  18:38:00,992 - #45 ]
INFO  18:38:00,992 - #38 ;
INFO  18:38:00,992 - #47 }
INFO  18:38:00,992 - #47 }
INFO  18:38:00,992 - #47 }
INFO  18:38:00,992 - #21 record
INFO  18:38:00,993 - #51 Board
INFO  18:38:00,993 - #46 {
INFO  18:38:00,993 - #51 int
INFO  18:38:00,993 - #51 rows
INFO  18:38:00,993 - #40 ,
INFO  18:38:00,993 - #51 columns
INFO  18:38:00,993 - #38 ;
INFO  18:38:00,993 - #47 }
INFO  18:38:00,993 - #51 Table
INFO  18:38:00,994 - #51 val
INFO  18:38:00,994 - #38 ;
INFO  18:38:00,994 - #51 Table
INFO  18:38:00,994 - #51 x
INFO  18:38:00,994 - #40 ,
INFO  18:38:00,994 - #40 ,
ERROR 18:38:00,994 - 
Sintaksna greska na liniji 16
INFO  18:38:00,994 - #51 y
INFO  18:38:00,994 - #38 ;
INFO  18:38:00,994 - #51 Board
INFO  18:38:00,995 - #51 board
INFO  18:38:00,995 - #38 ;
INFO  18:38:00,995 - #46 {
INFO  18:38:00,995 - #15 void
INFO  18:38:00,995 - #51 f
INFO  18:38:00,995 - #42 (
INFO  18:38:00,995 - #51 char
INFO  18:38:00,995 - #51 ch
INFO  18:38:00,995 - #40 ,
INFO  18:38:00,995 - #51 int
INFO  18:38:00,995 - #51 a
INFO  18:38:00,995 - #40 ,
INFO  18:38:00,995 - #51 int
INFO  18:38:00,996 - #51 arg
INFO  18:38:00,996 - #43 )
INFO  18:38:00,996 - #51 int
INFO  18:38:00,996 - #51 x
INFO  18:38:00,996 - #38 ;
INFO  18:38:00,996 - #46 {
INFO  18:38:00,996 - #51 x
INFO  18:38:00,996 - #35 =
INFO  18:38:00,996 - #51 arg
INFO  18:38:00,996 - #38 ;
INFO  18:38:00,996 - #47 }
INFO  18:38:00,996 - #15 void
INFO  18:38:00,996 - #51 main
INFO  18:38:00,996 - #42 (
INFO  18:38:00,996 - #43 )
INFO  18:38:00,996 - #51 int
INFO  18:38:00,996 - #51 x
INFO  18:38:00,996 - #40 ,
INFO  18:38:00,996 - #51 i
INFO  18:38:00,996 - #38 ;
INFO  18:38:00,997 - #51 char
INFO  18:38:00,997 - #51 c
INFO  18:38:00,997 - #38 ;
INFO  18:38:00,997 - #46 {
INFO  18:38:00,997 - #51 val
INFO  18:38:00,997 - #35 =
INFO  18:38:00,997 - #11 new
INFO  18:38:00,997 - #51 Table
INFO  18:38:00,997 - #38 ;
INFO  18:38:00,997 - #51 val
INFO  18:38:00,997 - #41 .
INFO  18:38:00,997 - #51 pos
INFO  18:38:00,997 - #35 =
INFO  18:38:00,997 - #11 new
INFO  18:38:00,997 - #51 int
INFO  18:38:00,997 - #44 [
INFO  18:38:00,997 - #51 size
INFO  18:38:00,997 - #45 ]
INFO  18:38:00,997 - #38 ;
INFO  18:38:00,997 - #51 val
INFO  18:38:00,999 - #41 .
INFO  18:38:00,999 - #51 neg
INFO  18:38:00,999 - #35 =
INFO  18:38:00,999 - #11 new
INFO  18:38:00,999 - #51 int
INFO  18:38:00,999 - #44 [
INFO  18:38:00,999 - #51 size
INFO  18:38:00,999 - #45 ]
INFO  18:38:00,999 - #38 ;
INFO  18:38:00,999 - #13 read
INFO  18:38:00,999 - #42 (
INFO  18:38:00,999 - #51 x
INFO  18:38:01,000 - #43 )
INFO  18:38:01,000 - #38 ;
INFO  18:38:01,000 - #8 if
INFO  18:38:01,000 - #42 (
INFO  18:38:01,000 - #51 x
INFO  18:38:01,000 - #29 >
INFO  18:38:01,000 - #48 5
INFO  18:38:01,000 - #43 )
INFO  18:38:01,000 - #46 {
INFO  18:38:01,000 - #20 goto
INFO  18:38:01,000 - #51 skip
INFO  18:38:01,000 - #38 ;
INFO  18:38:01,000 - #47 }
INFO  18:38:01,000 - #51 i
INFO  18:38:01,000 - #35 =
INFO  18:38:01,000 - #48 0
INFO  18:38:01,000 - #38 ;
INFO  18:38:01,000 - #9 do
INFO  18:38:01,000 - #46 {
INFO  18:38:01,000 - #51 val
INFO  18:38:01,000 - #41 .
INFO  18:38:01,000 - #51 putp
INFO  18:38:01,001 - #42 (
INFO  18:38:01,001 - #48 0
INFO  18:38:01,001 - #40 ,
INFO  18:38:01,001 - #51 i
INFO  18:38:01,001 - #43 )
INFO  18:38:01,001 - #38 ;
INFO  18:38:01,001 - #51 val
INFO  18:38:01,001 - #41 .
INFO  18:38:01,001 - #51 putn
INFO  18:38:01,001 - #42 (
INFO  18:38:01,001 - #48 0
INFO  18:38:01,001 - #40 ,
INFO  18:38:01,001 - #51 i
INFO  18:38:01,001 - #43 )
INFO  18:38:01,001 - #38 ;
INFO  18:38:01,001 - #51 i
INFO  18:38:01,001 - #36 ++
INFO  18:38:01,001 - #38 ;
INFO  18:38:01,001 - #47 }
INFO  18:38:01,001 - #10 while
INFO  18:38:01,001 - #42 (
INFO  18:38:01,001 - #51 i
INFO  18:38:01,001 - #31 <
INFO  18:38:01,001 - #51 size
INFO  18:38:01,001 - #43 )
INFO  18:38:01,001 - #38 ;
INFO  18:38:01,001 - #51 skip
INFO  18:38:01,002 - #39 :
INFO  18:38:01,002 - #51 f
INFO  18:38:01,002 - #42 (
INFO  18:38:01,002 - #51 c
INFO  18:38:01,002 - #40 ,
INFO  18:38:01,002 - #51 x
INFO  18:38:01,002 - #40 ,
INFO  18:38:01,002 - #51 i
INFO  18:38:01,002 - #43 )
INFO  18:38:01,002 - #38 ;
INFO  18:38:01,002 - #51 board
INFO  18:38:01,002 - #35 =
INFO  18:38:01,002 - #11 new
INFO  18:38:01,002 - #51 Board
INFO  18:38:01,002 - #38 ;
INFO  18:38:01,002 - #13 read
INFO  18:38:01,002 - #42 (
INFO  18:38:01,002 - #51 board
INFO  18:38:01,002 - #41 .
INFO  18:38:01,002 - #51 rows
INFO  18:38:01,002 - #43 )
INFO  18:38:01,002 - #38 ;
INFO  18:38:01,002 - #51 x
INFO  18:38:01,002 - #35 =
INFO  18:38:01,002 - #51 board
INFO  18:38:01,002 - #41 .
INFO  18:38:01,002 - #51 rows
INFO  18:38:01,003 - #38 ;
INFO  18:38:01,003 - #9 do
INFO  18:38:01,003 - #46 {
INFO  18:38:01,003 - #8 if
INFO  18:38:01,003 - #42 (
INFO  18:38:01,003 - #51 x
INFO  18:38:01,003 - #32 <=
INFO  18:38:01,003 - #48 0
INFO  18:38:01,003 - #43 )
INFO  18:38:01,003 - #3 break
INFO  18:38:01,003 - #38 ;
INFO  18:38:01,003 - #8 if
INFO  18:38:01,003 - #42 (
INFO  18:38:01,003 - #48 0
INFO  18:38:01,003 - #32 <=
INFO  18:38:01,003 - #51 x
INFO  18:38:01,003 - #33 &&
INFO  18:38:01,003 - #51 x
INFO  18:38:01,003 - #31 <
INFO  18:38:01,003 - #51 size
INFO  18:38:01,003 - #43 )
INFO  18:38:01,003 - #46 {
INFO  18:38:01,003 - #51 val
INFO  18:38:01,003 - #41 .
INFO  18:38:01,004 - #51 putp
INFO  18:38:01,004 - #42 (
INFO  18:38:01,004 - #51 val
INFO  18:38:01,004 - #41 .
INFO  18:38:01,004 - #51 getp
INFO  18:38:01,004 - #42 (
INFO  18:38:01,004 - #51 x
INFO  18:38:01,004 - #43 )
INFO  18:38:01,004 - #22 +
INFO  18:38:01,004 - #48 1
INFO  18:38:01,004 - #43 )
INFO  18:38:01,004 - #38 ;
INFO  18:38:01,004 - #47 }
INFO  18:38:01,004 - #6 else
INFO  18:38:01,004 - #8 if
INFO  18:38:01,004 - #42 (
INFO  18:38:01,004 - #23 -
INFO  18:38:01,004 - #51 size
INFO  18:38:01,004 - #31 <
INFO  18:38:01,004 - #51 c
INFO  18:38:01,004 - #33 &&
INFO  18:38:01,004 - #51 x
INFO  18:38:01,004 - #31 <
INFO  18:38:01,004 - #48 0
INFO  18:38:01,004 - #43 )
INFO  18:38:01,004 - #46 {
INFO  18:38:01,004 - #51 val
INFO  18:38:01,004 - #41 .
INFO  18:38:01,004 - #51 putn
INFO  18:38:01,005 - #42 (
INFO  18:38:01,005 - #51 val
INFO  18:38:01,005 - #41 .
INFO  18:38:01,005 - #51 getn
INFO  18:38:01,005 - #42 (
INFO  18:38:01,005 - #23 -
INFO  18:38:01,005 - #51 x
INFO  18:38:01,005 - #43 )
INFO  18:38:01,005 - #22 +
INFO  18:38:01,005 - #48 1
INFO  18:38:01,005 - #43 )
INFO  18:38:01,005 - #38 ;
INFO  18:38:01,005 - #47 }
INFO  18:38:01,005 - #13 read
INFO  18:38:01,005 - #42 (
INFO  18:38:01,005 - #51 x
INFO  18:38:01,005 - #43 )
INFO  18:38:01,005 - #38 ;
INFO  18:38:01,005 - #47 }
INFO  18:38:01,005 - #10 while
INFO  18:38:01,005 - #42 (
INFO  18:38:01,005 - #50 true
INFO  18:38:01,005 - #43 )
INFO  18:38:01,005 - #38 ;
INFO  18:38:01,005 - #47 }
INFO  18:38:01,005 - #47 }
ERROR 18:38:01,006 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 57
