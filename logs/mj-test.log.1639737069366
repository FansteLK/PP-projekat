INFO  11:29:02,514 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  11:29:02,577 - #2 program
INFO  11:29:02,577 - #51 p
INFO  11:29:02,577 - #7 const
INFO  11:29:02,578 - #51 int
INFO  11:29:02,578 - #51 size
INFO  11:29:02,579 - #35 =
INFO  11:29:02,579 - #48 10
INFO  11:29:02,579 - #38 ;
INFO  11:29:02,580 - #4 class
INFO  11:29:02,580 - #51 Table
INFO  11:29:02,580 - #46 {
INFO  11:29:02,581 - #51 int
INFO  11:29:02,581 - #51 pos
INFO  11:29:02,582 - #44 [
INFO  11:29:02,582 - #45 ]
INFO  11:29:02,582 - #40 ,
INFO  11:29:02,583 - #51 neg
INFO  11:29:02,583 - #44 [
INFO  11:29:02,583 - #45 ]
INFO  11:29:02,583 - #38 ;
INFO  11:29:02,583 - #46 {
INFO  11:29:02,584 - #15 void
INFO  11:29:02,586 - #51 putp
INFO  11:29:02,586 - #42 (
INFO  11:29:02,586 - #51 int
INFO  11:29:02,586 - #51 a
INFO  11:29:02,586 - #40 ,
INFO  11:29:02,587 - #51 int
INFO  11:29:02,587 - #51 idx
INFO  11:29:02,587 - #43 )
INFO  11:29:02,587 - #46 {
INFO  11:29:02,587 - #51 thi
INFO  11:29:02,588 - #41 .
INFO  11:29:02,588 - #51 pos
INFO  11:29:02,588 - #44 [
INFO  11:29:02,588 - #51 idx
INFO  11:29:02,588 - #45 ]
INFO  11:29:02,588 - #35 =
INFO  11:29:02,589 - #51 a
INFO  11:29:02,589 - #38 ;
INFO  11:29:02,590 - #47 }
INFO  11:29:02,590 - #15 void
INFO  11:29:02,590 - #51 putn
INFO  11:29:02,591 - #42 (
INFO  11:29:02,591 - #51 int
INFO  11:29:02,591 - #51 a
INFO  11:29:02,591 - #40 ,
INFO  11:29:02,591 - #51 int
INFO  11:29:02,591 - #51 idx
INFO  11:29:02,591 - #43 )
INFO  11:29:02,592 - #46 {
INFO  11:29:02,592 - #51 thi
INFO  11:29:02,592 - #41 .
INFO  11:29:02,592 - #51 neg
INFO  11:29:02,592 - #44 [
INFO  11:29:02,592 - #51 idx
INFO  11:29:02,592 - #45 ]
INFO  11:29:02,592 - #35 =
INFO  11:29:02,592 - #51 a
INFO  11:29:02,592 - #38 ;
INFO  11:29:02,592 - #47 }
INFO  11:29:02,592 - #51 int
INFO  11:29:02,593 - #51 getp
INFO  11:29:02,593 - #42 (
INFO  11:29:02,593 - #51 int
INFO  11:29:02,593 - #51 idx
INFO  11:29:02,593 - #43 )
INFO  11:29:02,593 - #46 {
INFO  11:29:02,593 - #14 return
INFO  11:29:02,593 - #51 pos
INFO  11:29:02,593 - #44 [
INFO  11:29:02,593 - #51 idx
INFO  11:29:02,593 - #45 ]
INFO  11:29:02,593 - #38 ;
INFO  11:29:02,594 - #47 }
INFO  11:29:02,594 - #51 int
INFO  11:29:02,594 - #51 getn
INFO  11:29:02,594 - #42 (
INFO  11:29:02,594 - #51 int
INFO  11:29:02,594 - #51 idx
INFO  11:29:02,594 - #43 )
INFO  11:29:02,594 - #46 {
INFO  11:29:02,594 - #14 return
INFO  11:29:02,594 - #51 neg
INFO  11:29:02,594 - #44 [
INFO  11:29:02,594 - #51 idx
INFO  11:29:02,595 - #45 ]
INFO  11:29:02,595 - #38 ;
INFO  11:29:02,595 - #47 }
INFO  11:29:02,595 - #47 }
INFO  11:29:02,595 - #47 }
INFO  11:29:02,595 - #21 record
INFO  11:29:02,595 - #51 Board
INFO  11:29:02,595 - #46 {
INFO  11:29:02,595 - #51 int
INFO  11:29:02,595 - #51 rows
INFO  11:29:02,595 - #40 ,
INFO  11:29:02,596 - #51 columns
INFO  11:29:02,596 - #38 ;
INFO  11:29:02,596 - #47 }
INFO  11:29:02,596 - #51 Table
INFO  11:29:02,596 - #51 val
INFO  11:29:02,596 - #38 ;
INFO  11:29:02,597 - #51 Board
INFO  11:29:02,597 - #51 board
INFO  11:29:02,597 - #38 ;
INFO  11:29:02,597 - #46 {
INFO  11:29:02,597 - #15 void
INFO  11:29:02,597 - #51 f
INFO  11:29:02,597 - #42 (
INFO  11:29:02,597 - #51 char
INFO  11:29:02,597 - #51 ch
INFO  11:29:02,598 - #40 ,
INFO  11:29:02,598 - #51 int
INFO  11:29:02,598 - #51 a
INFO  11:29:02,598 - #40 ,
INFO  11:29:02,598 - #51 int
INFO  11:29:02,598 - #51 arg
INFO  11:29:02,598 - #43 )
INFO  11:29:02,598 - #51 int
INFO  11:29:02,598 - #51 x
INFO  11:29:02,598 - #38 ;
INFO  11:29:02,598 - #46 {
INFO  11:29:02,598 - #51 x
INFO  11:29:02,598 - #35 =
INFO  11:29:02,598 - #51 arg
INFO  11:29:02,598 - #38 ;
INFO  11:29:02,599 - #47 }
INFO  11:29:02,599 - #15 void
INFO  11:29:02,599 - #51 main
INFO  11:29:02,599 - #42 (
INFO  11:29:02,599 - #43 )
INFO  11:29:02,599 - #51 int
INFO  11:29:02,599 - #51 x
INFO  11:29:02,600 - #40 ,
INFO  11:29:02,600 - #51 i
INFO  11:29:02,600 - #38 ;
INFO  11:29:02,600 - #51 char
INFO  11:29:02,600 - #51 c
INFO  11:29:02,600 - #38 ;
INFO  11:29:02,600 - #46 {
INFO  11:29:02,600 - #51 val
INFO  11:29:02,600 - #35 =
INFO  11:29:02,600 - #11 new
INFO  11:29:02,600 - #51 Table
INFO  11:29:02,600 - #38 ;
INFO  11:29:02,601 - #51 val
INFO  11:29:02,601 - #41 .
INFO  11:29:02,601 - #51 pos
INFO  11:29:02,601 - #35 =
INFO  11:29:02,601 - #11 new
INFO  11:29:02,601 - #51 int
INFO  11:29:02,601 - #44 [
INFO  11:29:02,601 - #51 size
INFO  11:29:02,601 - #45 ]
INFO  11:29:02,601 - #38 ;
INFO  11:29:02,601 - #51 val
INFO  11:29:02,601 - #41 .
INFO  11:29:02,601 - #51 neg
INFO  11:29:02,601 - #35 =
INFO  11:29:02,601 - #11 new
INFO  11:29:02,601 - #51 int
INFO  11:29:02,602 - #44 [
INFO  11:29:02,602 - #51 size
INFO  11:29:02,603 - #45 ]
INFO  11:29:02,603 - #38 ;
INFO  11:29:02,603 - #13 read
INFO  11:29:02,603 - #42 (
INFO  11:29:02,603 - #51 x
INFO  11:29:02,603 - #43 )
INFO  11:29:02,604 - #38 ;
INFO  11:29:02,604 - #8 if
INFO  11:29:02,604 - #42 (
INFO  11:29:02,604 - #51 x
INFO  11:29:02,604 - #29 >
INFO  11:29:02,604 - #48 5
INFO  11:29:02,605 - #43 )
INFO  11:29:02,606 - #46 {
INFO  11:29:02,606 - #20 goto
INFO  11:29:02,606 - #51 skip
INFO  11:29:02,606 - #38 ;
INFO  11:29:02,606 - #47 }
INFO  11:29:02,606 - #51 i
INFO  11:29:02,606 - #35 =
INFO  11:29:02,607 - #48 0
INFO  11:29:02,607 - #38 ;
INFO  11:29:02,607 - #9 do
INFO  11:29:02,607 - #46 {
INFO  11:29:02,607 - #51 val
INFO  11:29:02,607 - #41 .
INFO  11:29:02,607 - #51 putp
INFO  11:29:02,607 - #42 (
INFO  11:29:02,607 - #48 0
INFO  11:29:02,607 - #40 ,
INFO  11:29:02,607 - #51 i
INFO  11:29:02,607 - #43 )
INFO  11:29:02,607 - #38 ;
INFO  11:29:02,607 - #51 val
INFO  11:29:02,607 - #41 .
INFO  11:29:02,607 - #51 putn
INFO  11:29:02,607 - #42 (
INFO  11:29:02,607 - #48 0
INFO  11:29:02,608 - #40 ,
INFO  11:29:02,608 - #51 i
INFO  11:29:02,608 - #43 )
INFO  11:29:02,608 - #38 ;
INFO  11:29:02,608 - #51 i
INFO  11:29:02,608 - #36 ++
INFO  11:29:02,608 - #38 ;
INFO  11:29:02,608 - #47 }
INFO  11:29:02,608 - #10 while
INFO  11:29:02,608 - #42 (
INFO  11:29:02,608 - #51 i
INFO  11:29:02,608 - #31 <
INFO  11:29:02,608 - #51 size
INFO  11:29:02,609 - #43 )
INFO  11:29:02,609 - #38 ;
INFO  11:29:02,609 - #51 skip
INFO  11:29:02,609 - #39 :
INFO  11:29:02,609 - #51 f
INFO  11:29:02,609 - #42 (
INFO  11:29:02,609 - #51 c
INFO  11:29:02,609 - #40 ,
INFO  11:29:02,609 - #51 x
INFO  11:29:02,609 - #40 ,
INFO  11:29:02,609 - #51 i
INFO  11:29:02,609 - #43 )
INFO  11:29:02,609 - #38 ;
INFO  11:29:02,610 - #51 board
INFO  11:29:02,610 - #35 =
INFO  11:29:02,610 - #11 new
INFO  11:29:02,610 - #51 Board
INFO  11:29:02,610 - #38 ;
INFO  11:29:02,610 - #13 read
INFO  11:29:02,610 - #42 (
INFO  11:29:02,610 - #51 board
INFO  11:29:02,610 - #41 .
INFO  11:29:02,610 - #51 rows
INFO  11:29:02,610 - #43 )
INFO  11:29:02,610 - #38 ;
INFO  11:29:02,610 - #51 x
INFO  11:29:02,610 - #35 =
INFO  11:29:02,610 - #51 board
INFO  11:29:02,610 - #41 .
INFO  11:29:02,610 - #51 rows
INFO  11:29:02,610 - #38 ;
INFO  11:29:02,610 - #9 do
INFO  11:29:02,610 - #46 {
INFO  11:29:02,610 - #8 if
INFO  11:29:02,610 - #42 (
INFO  11:29:02,610 - #51 x
INFO  11:29:02,610 - #32 <=
INFO  11:29:02,611 - #48 0
INFO  11:29:02,611 - #43 )
INFO  11:29:02,611 - #3 break
INFO  11:29:02,611 - #38 ;
INFO  11:29:02,611 - #8 if
INFO  11:29:02,612 - #42 (
INFO  11:29:02,612 - #48 0
INFO  11:29:02,612 - #32 <=
INFO  11:29:02,612 - #51 x
INFO  11:29:02,612 - #33 &&
INFO  11:29:02,612 - #51 x
INFO  11:29:02,612 - #31 <
INFO  11:29:02,612 - #51 size
INFO  11:29:02,612 - #43 )
INFO  11:29:02,612 - #46 {
INFO  11:29:02,612 - #51 val
INFO  11:29:02,612 - #41 .
INFO  11:29:02,612 - #51 putp
INFO  11:29:02,612 - #42 (
INFO  11:29:02,612 - #51 val
INFO  11:29:02,612 - #41 .
INFO  11:29:02,612 - #51 getp
INFO  11:29:02,612 - #42 (
INFO  11:29:02,612 - #51 x
INFO  11:29:02,612 - #43 )
INFO  11:29:02,612 - #22 +
INFO  11:29:02,613 - #48 1
INFO  11:29:02,613 - #43 )
INFO  11:29:02,614 - #38 ;
INFO  11:29:02,614 - #47 }
INFO  11:29:02,614 - #6 else
ERROR 11:29:02,614 - 
Sintaksna greska na liniji 49
ERROR 11:29:02,614 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 49
