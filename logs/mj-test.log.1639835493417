INFO  12:23:22,783 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  12:23:22,989 - #2 program
INFO  12:23:22,989 - #51 p
INFO  12:23:22,989 - #7 const
INFO  12:23:22,991 - #51 int
INFO  12:23:22,991 - #51 size
INFO  12:23:22,993 - #35 =
INFO  12:23:22,993 - #48 10
INFO  12:23:22,994 - #38 ;
INFO  12:23:22,997 - #4 class
INFO  12:23:22,999 - #51 Table
INFO  12:23:22,999 - #46 {
INFO  12:23:23,001 - #51 int
INFO  12:23:23,003 - #51 pos
INFO  12:23:23,003 - #44 [
INFO  12:23:23,003 - #45 ]
INFO  12:23:23,003 - #40 ,
INFO  12:23:23,006 - #38 ;
ERROR 12:23:23,006 - 
Sintaksna greska na liniji 4
INFO  12:23:23,007 - #46 {
INFO  12:23:23,007 - #15 void
INFO  12:23:23,007 - #51 putp
INFO  12:23:23,007 - #42 (
INFO  12:23:23,008 - #51 int
INFO  12:23:23,008 - #51 a
INFO  12:23:23,008 - #40 ,
INFO  12:23:23,008 - #51 int
INFO  12:23:23,008 - #51 idx
INFO  12:23:23,008 - #43 )
INFO  12:23:23,008 - #46 {
INFO  12:23:23,008 - #51 ths
INFO  12:23:23,008 - #41 .
INFO  12:23:23,008 - #51 pos
INFO  12:23:23,008 - #44 [
INFO  12:23:23,009 - #51 idx
INFO  12:23:23,009 - #45 ]
INFO  12:23:23,009 - #35 =
INFO  12:23:23,009 - #51 a
INFO  12:23:23,009 - #38 ;
INFO  12:23:23,009 - #47 }
INFO  12:23:23,009 - #15 void
INFO  12:23:23,009 - #51 putn
INFO  12:23:23,009 - #42 (
INFO  12:23:23,009 - #51 int
INFO  12:23:23,009 - #51 a
INFO  12:23:23,009 - #40 ,
INFO  12:23:23,010 - #51 int
INFO  12:23:23,010 - #51 idx
INFO  12:23:23,010 - #43 )
INFO  12:23:23,010 - #46 {
INFO  12:23:23,010 - #51 ths
INFO  12:23:23,010 - #41 .
INFO  12:23:23,010 - #51 neg
INFO  12:23:23,010 - #44 [
INFO  12:23:23,010 - #51 idx
INFO  12:23:23,010 - #45 ]
INFO  12:23:23,011 - #35 =
INFO  12:23:23,011 - #51 a
INFO  12:23:23,011 - #38 ;
INFO  12:23:23,011 - #47 }
INFO  12:23:23,011 - #51 int
INFO  12:23:23,011 - #51 getp
INFO  12:23:23,011 - #42 (
INFO  12:23:23,011 - #51 int
INFO  12:23:23,011 - #51 idx
INFO  12:23:23,011 - #43 )
INFO  12:23:23,011 - #46 {
INFO  12:23:23,011 - #14 return
INFO  12:23:23,011 - #51 pos
INFO  12:23:23,011 - #44 [
INFO  12:23:23,012 - #51 idx
INFO  12:23:23,012 - #45 ]
INFO  12:23:23,012 - #38 ;
INFO  12:23:23,012 - #47 }
INFO  12:23:23,012 - #51 int
INFO  12:23:23,012 - #51 getn
INFO  12:23:23,012 - #42 (
INFO  12:23:23,012 - #51 int
INFO  12:23:23,012 - #51 idx
INFO  12:23:23,012 - #43 )
INFO  12:23:23,012 - #46 {
INFO  12:23:23,012 - #14 return
INFO  12:23:23,012 - #51 neg
INFO  12:23:23,012 - #44 [
INFO  12:23:23,012 - #51 idx
INFO  12:23:23,013 - #45 ]
INFO  12:23:23,013 - #38 ;
INFO  12:23:23,013 - #47 }
INFO  12:23:23,013 - #47 }
INFO  12:23:23,013 - #47 }
INFO  12:23:23,013 - #21 record
INFO  12:23:23,013 - #51 Board
INFO  12:23:23,013 - #46 {
INFO  12:23:23,013 - #51 int
INFO  12:23:23,013 - #51 rows
INFO  12:23:23,013 - #40 ,
INFO  12:23:23,013 - #51 columns
INFO  12:23:23,013 - #38 ;
INFO  12:23:23,013 - #47 }
ERROR 12:23:23,013 - Izvrsen oporavak globalne promenljive u liniji 4
ERROR 12:23:23,017 - 
Sintaksna greska na liniji 14
INFO  12:23:23,019 - #51 Table
INFO  12:23:23,019 - #51 val
INFO  12:23:23,019 - #38 ;
INFO  12:23:23,019 - #51 Board
INFO  12:23:23,019 - #51 board
INFO  12:23:23,020 - #38 ;
INFO  12:23:23,020 - #46 {
INFO  12:23:23,020 - #15 void
INFO  12:23:23,020 - #51 f
INFO  12:23:23,020 - #42 (
INFO  12:23:23,020 - #51 char
INFO  12:23:23,020 - #51 ch
INFO  12:23:23,020 - #40 ,
INFO  12:23:23,020 - #51 int
INFO  12:23:23,020 - #51 a
INFO  12:23:23,020 - #40 ,
INFO  12:23:23,020 - #51 int
INFO  12:23:23,020 - #51 arg
INFO  12:23:23,020 - #43 )
INFO  12:23:23,020 - #51 int
INFO  12:23:23,021 - #51 x
INFO  12:23:23,021 - #38 ;
INFO  12:23:23,021 - #46 {
INFO  12:23:23,021 - #51 x
INFO  12:23:23,021 - #35 =
ERROR 12:23:23,021 - Izvrsen oporavak globalne promenljive u liniji 4
ERROR 12:23:23,021 - 
Sintaksna greska na liniji 21
INFO  12:23:23,021 - #51 arg
INFO  12:23:23,021 - #38 ;
INFO  12:23:23,021 - #47 }
INFO  12:23:23,021 - #15 void
INFO  12:23:23,021 - #51 main
INFO  12:23:23,022 - #42 (
INFO  12:23:23,022 - #43 )
INFO  12:23:23,022 - #51 int
INFO  12:23:23,022 - #51 x
INFO  12:23:23,022 - #40 ,
INFO  12:23:23,022 - #51 i
INFO  12:23:23,022 - #38 ;
INFO  12:23:23,022 - #51 char
INFO  12:23:23,022 - #51 c
INFO  12:23:23,022 - #38 ;
INFO  12:23:23,022 - #46 {
INFO  12:23:23,022 - #51 val
INFO  12:23:23,022 - #35 =
INFO  12:23:23,022 - #11 new
INFO  12:23:23,022 - #51 Table
INFO  12:23:23,022 - #38 ;
INFO  12:23:23,022 - #51 val
INFO  12:23:23,022 - #41 .
INFO  12:23:23,022 - #51 pos
INFO  12:23:23,022 - #35 =
INFO  12:23:23,022 - #11 new
INFO  12:23:23,022 - #51 int
INFO  12:23:23,023 - #44 [
INFO  12:23:23,023 - #51 size
INFO  12:23:23,023 - #45 ]
INFO  12:23:23,023 - #38 ;
INFO  12:23:23,023 - #51 val
INFO  12:23:23,023 - #41 .
INFO  12:23:23,023 - #51 neg
INFO  12:23:23,023 - #35 =
INFO  12:23:23,023 - #11 new
INFO  12:23:23,023 - #51 int
INFO  12:23:23,023 - #44 [
INFO  12:23:23,023 - #51 size
INFO  12:23:23,023 - #45 ]
INFO  12:23:23,023 - #38 ;
INFO  12:23:23,023 - #13 read
INFO  12:23:23,023 - #42 (
INFO  12:23:23,023 - #51 x
INFO  12:23:23,023 - #43 )
INFO  12:23:23,024 - #38 ;
INFO  12:23:23,024 - #8 if
INFO  12:23:23,024 - #42 (
INFO  12:23:23,024 - #51 x
INFO  12:23:23,024 - #29 >
INFO  12:23:23,024 - #48 5
INFO  12:23:23,024 - #43 )
INFO  12:23:23,024 - #46 {
INFO  12:23:23,024 - #20 goto
INFO  12:23:23,024 - #51 skip
INFO  12:23:23,024 - #38 ;
INFO  12:23:23,024 - #47 }
INFO  12:23:23,024 - #51 i
INFO  12:23:23,024 - #35 =
INFO  12:23:23,024 - #48 0
INFO  12:23:23,024 - #38 ;
INFO  12:23:23,024 - #9 do
INFO  12:23:23,024 - #46 {
INFO  12:23:23,024 - #51 val
INFO  12:23:23,024 - #41 .
INFO  12:23:23,024 - #51 putp
INFO  12:23:23,025 - #42 (
INFO  12:23:23,025 - #48 0
INFO  12:23:23,025 - #40 ,
INFO  12:23:23,025 - #51 i
INFO  12:23:23,025 - #43 )
INFO  12:23:23,025 - #38 ;
INFO  12:23:23,025 - #51 val
INFO  12:23:23,025 - #41 .
INFO  12:23:23,025 - #51 putn
INFO  12:23:23,025 - #42 (
INFO  12:23:23,025 - #48 0
INFO  12:23:23,025 - #40 ,
INFO  12:23:23,025 - #51 i
INFO  12:23:23,025 - #43 )
INFO  12:23:23,025 - #38 ;
INFO  12:23:23,025 - #51 i
INFO  12:23:23,025 - #36 ++
INFO  12:23:23,025 - #38 ;
INFO  12:23:23,025 - #47 }
INFO  12:23:23,025 - #10 while
INFO  12:23:23,025 - #42 (
INFO  12:23:23,025 - #51 i
INFO  12:23:23,025 - #31 <
INFO  12:23:23,025 - #51 size
INFO  12:23:23,025 - #43 )
INFO  12:23:23,025 - #38 ;
INFO  12:23:23,026 - #51 skip
INFO  12:23:23,026 - #39 :
INFO  12:23:23,026 - #51 f
INFO  12:23:23,026 - #42 (
INFO  12:23:23,026 - #51 c
INFO  12:23:23,026 - #40 ,
INFO  12:23:23,026 - #51 x
INFO  12:23:23,026 - #40 ,
INFO  12:23:23,026 - #51 i
INFO  12:23:23,026 - #43 )
INFO  12:23:23,026 - #38 ;
INFO  12:23:23,026 - #51 board
INFO  12:23:23,026 - #35 =
INFO  12:23:23,026 - #11 new
INFO  12:23:23,026 - #51 Board
INFO  12:23:23,026 - #38 ;
INFO  12:23:23,027 - #13 read
INFO  12:23:23,027 - #42 (
INFO  12:23:23,027 - #51 board
INFO  12:23:23,027 - #41 .
INFO  12:23:23,027 - #51 rows
INFO  12:23:23,027 - #43 )
INFO  12:23:23,027 - #38 ;
INFO  12:23:23,027 - #51 x
INFO  12:23:23,027 - #35 =
INFO  12:23:23,027 - #51 board
INFO  12:23:23,027 - #41 .
INFO  12:23:23,027 - #51 rows
INFO  12:23:23,027 - #38 ;
INFO  12:23:23,027 - #9 do
INFO  12:23:23,027 - #46 {
INFO  12:23:23,027 - #8 if
INFO  12:23:23,027 - #42 (
INFO  12:23:23,027 - #51 x
INFO  12:23:23,027 - #32 <=
INFO  12:23:23,027 - #48 0
INFO  12:23:23,027 - #43 )
INFO  12:23:23,028 - #3 break
INFO  12:23:23,028 - #38 ;
INFO  12:23:23,028 - #8 if
INFO  12:23:23,028 - #42 (
INFO  12:23:23,028 - #48 0
INFO  12:23:23,028 - #32 <=
INFO  12:23:23,028 - #51 x
INFO  12:23:23,028 - #33 &&
INFO  12:23:23,028 - #51 x
INFO  12:23:23,028 - #31 <
INFO  12:23:23,028 - #51 size
INFO  12:23:23,028 - #43 )
INFO  12:23:23,028 - #46 {
INFO  12:23:23,028 - #51 val
INFO  12:23:23,028 - #41 .
INFO  12:23:23,028 - #51 putp
INFO  12:23:23,028 - #42 (
INFO  12:23:23,028 - #51 val
INFO  12:23:23,028 - #41 .
INFO  12:23:23,028 - #51 getp
INFO  12:23:23,028 - #42 (
INFO  12:23:23,028 - #51 x
INFO  12:23:23,029 - #43 )
INFO  12:23:23,029 - #22 +
INFO  12:23:23,029 - #48 1
INFO  12:23:23,029 - #43 )
INFO  12:23:23,029 - #38 ;
INFO  12:23:23,029 - #47 }
INFO  12:23:23,029 - #6 else
INFO  12:23:23,029 - #8 if
INFO  12:23:23,029 - #42 (
INFO  12:23:23,029 - #23 -
INFO  12:23:23,029 - #51 size
INFO  12:23:23,029 - #31 <
INFO  12:23:23,029 - #51 x
INFO  12:23:23,029 - #33 &&
INFO  12:23:23,029 - #51 x
INFO  12:23:23,029 - #31 <
INFO  12:23:23,029 - #48 0
INFO  12:23:23,029 - #43 )
INFO  12:23:23,029 - #46 {
INFO  12:23:23,029 - #51 val
INFO  12:23:23,029 - #41 .
INFO  12:23:23,029 - #51 putn
INFO  12:23:23,029 - #42 (
INFO  12:23:23,029 - #51 val
INFO  12:23:23,029 - #41 .
INFO  12:23:23,030 - #51 getn
INFO  12:23:23,030 - #42 (
INFO  12:23:23,030 - #23 -
INFO  12:23:23,030 - #51 x
INFO  12:23:23,030 - #43 )
INFO  12:23:23,030 - #22 +
INFO  12:23:23,030 - #48 1
INFO  12:23:23,030 - #43 )
INFO  12:23:23,030 - #38 ;
INFO  12:23:23,030 - #47 }
INFO  12:23:23,030 - #13 read
INFO  12:23:23,030 - #42 (
INFO  12:23:23,030 - #51 x
INFO  12:23:23,030 - #43 )
INFO  12:23:23,030 - #38 ;
INFO  12:23:23,030 - #47 }
INFO  12:23:23,030 - #10 while
INFO  12:23:23,030 - #42 (
INFO  12:23:23,030 - #50 true
INFO  12:23:23,030 - #43 )
INFO  12:23:23,030 - #38 ;
INFO  12:23:23,030 - #47 }
INFO  12:23:23,030 - #47 }
ERROR 12:23:23,030 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 56
