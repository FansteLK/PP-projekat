INFO  13:22:26,290 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  13:22:26,539 - #2 program
INFO  13:22:26,539 - #51 p
INFO  13:22:26,539 - #7 const
INFO  13:22:26,541 - #51 int
INFO  13:22:26,541 - #51 size
INFO  13:22:26,543 - #35 =
INFO  13:22:26,543 - #48 10
INFO  13:22:26,543 - #38 ;
INFO  13:22:26,547 - #4 class
INFO  13:22:26,550 - #51 Table
INFO  13:22:26,550 - #46 {
INFO  13:22:26,552 - #51 int
INFO  13:22:26,554 - #51 pos
INFO  13:22:26,555 - #44 [
INFO  13:22:26,555 - #45 ]
INFO  13:22:26,555 - #40 ,
INFO  13:22:26,559 - #51 neg
INFO  13:22:26,559 - #44 [
INFO  13:22:26,559 - #45 ]
INFO  13:22:26,559 - #38 ;
INFO  13:22:26,559 - #46 {
INFO  13:22:26,560 - #15 void
INFO  13:22:26,560 - #51 putp
INFO  13:22:26,560 - #42 (
INFO  13:22:26,560 - #51 int
INFO  13:22:26,560 - #51 a
INFO  13:22:26,560 - #40 ,
INFO  13:22:26,563 - #51 int
INFO  13:22:26,563 - #51 idx
INFO  13:22:26,563 - #43 )
INFO  13:22:26,564 - #46 {
INFO  13:22:26,564 - #51 thi
INFO  13:22:26,566 - #41 .
INFO  13:22:26,567 - #51 pos
INFO  13:22:26,567 - #44 [
INFO  13:22:26,567 - #51 idx
INFO  13:22:26,567 - #45 ]
INFO  13:22:26,567 - #35 =
INFO  13:22:26,567 - #51 a
INFO  13:22:26,570 - #38 ;
INFO  13:22:26,573 - #47 }
INFO  13:22:26,573 - #15 void
INFO  13:22:26,573 - #51 putn
INFO  13:22:26,576 - #42 (
INFO  13:22:26,576 - #51 int
INFO  13:22:26,576 - #51 a
INFO  13:22:26,576 - #40 ,
INFO  13:22:26,576 - #51 int
INFO  13:22:26,576 - #51 idx
INFO  13:22:26,576 - #43 )
INFO  13:22:26,576 - #46 {
INFO  13:22:26,577 - #51 thi
INFO  13:22:26,577 - #41 .
INFO  13:22:26,577 - #51 neg
INFO  13:22:26,577 - #44 [
INFO  13:22:26,577 - #51 idx
INFO  13:22:26,577 - #45 ]
INFO  13:22:26,577 - #35 =
INFO  13:22:26,577 - #51 a
INFO  13:22:26,577 - #38 ;
INFO  13:22:26,577 - #47 }
INFO  13:22:26,577 - #51 int
INFO  13:22:26,578 - #51 getp
INFO  13:22:26,578 - #42 (
INFO  13:22:26,578 - #51 int
INFO  13:22:26,578 - #51 idx
INFO  13:22:26,578 - #43 )
INFO  13:22:26,578 - #46 {
INFO  13:22:26,578 - #14 return
INFO  13:22:26,578 - #51 pos
INFO  13:22:26,578 - #44 [
INFO  13:22:26,578 - #51 idx
INFO  13:22:26,578 - #45 ]
INFO  13:22:26,578 - #38 ;
INFO  13:22:26,578 - #47 }
INFO  13:22:26,579 - #51 int
INFO  13:22:26,579 - #51 getn
INFO  13:22:26,579 - #42 (
INFO  13:22:26,579 - #51 int
INFO  13:22:26,579 - #51 idx
INFO  13:22:26,579 - #43 )
INFO  13:22:26,579 - #46 {
INFO  13:22:26,579 - #14 return
INFO  13:22:26,579 - #51 neg
INFO  13:22:26,579 - #44 [
INFO  13:22:26,579 - #51 idx
INFO  13:22:26,579 - #45 ]
INFO  13:22:26,579 - #38 ;
INFO  13:22:26,580 - #47 }
INFO  13:22:26,580 - #47 }
INFO  13:22:26,580 - #47 }
INFO  13:22:26,580 - #21 record
INFO  13:22:26,583 - #51 Board
INFO  13:22:26,583 - #46 {
INFO  13:22:26,583 - #51 int
INFO  13:22:26,583 - #51 rows
INFO  13:22:26,583 - #40 ,
INFO  13:22:26,583 - #51 columns
INFO  13:22:26,583 - #38 ;
INFO  13:22:26,583 - #47 }
INFO  13:22:26,583 - #51 Table
INFO  13:22:26,586 - #51 val
INFO  13:22:26,586 - #38 ;
INFO  13:22:26,586 - #51 Table
INFO  13:22:26,586 - #51 x
INFO  13:22:26,587 - #40 ,
INFO  13:22:26,587 - #40 ,
ERROR 13:22:26,587 - 
Sintaksna greska na liniji 16
INFO  13:22:26,587 - #51 y
INFO  13:22:26,587 - #38 ;
INFO  13:22:26,587 - #51 Board
INFO  13:22:26,588 - #51 board
INFO  13:22:26,588 - #38 ;
INFO  13:22:26,588 - #46 {
INFO  13:22:26,588 - #15 void
INFO  13:22:26,588 - #51 f
INFO  13:22:26,588 - #42 (
INFO  13:22:26,588 - #51 char
INFO  13:22:26,588 - #51 ch
INFO  13:22:26,588 - #40 ,
INFO  13:22:26,588 - #51 int
INFO  13:22:26,588 - #51 a
INFO  13:22:26,588 - #40 ,
INFO  13:22:26,589 - #51 int
INFO  13:22:26,589 - #51 arg
INFO  13:22:26,589 - #43 )
INFO  13:22:26,589 - #51 int
INFO  13:22:26,589 - #51 x
INFO  13:22:26,589 - #38 ;
INFO  13:22:26,589 - #46 {
INFO  13:22:26,589 - #51 x
INFO  13:22:26,589 - #35 =
INFO  13:22:26,589 - #51 arg
INFO  13:22:26,589 - #38 ;
INFO  13:22:26,589 - #47 }
INFO  13:22:26,589 - #15 void
INFO  13:22:26,589 - #51 main
INFO  13:22:26,589 - #42 (
INFO  13:22:26,589 - #43 )
INFO  13:22:26,589 - #51 int
INFO  13:22:26,589 - #51 x
INFO  13:22:26,589 - #40 ,
INFO  13:22:26,590 - #51 i
INFO  13:22:26,590 - #38 ;
INFO  13:22:26,590 - #51 char
INFO  13:22:26,590 - #51 c
INFO  13:22:26,590 - #38 ;
INFO  13:22:26,590 - #46 {
INFO  13:22:26,590 - #51 val
INFO  13:22:26,590 - #35 =
INFO  13:22:26,590 - #11 new
INFO  13:22:26,590 - #51 Table
INFO  13:22:26,590 - #38 ;
INFO  13:22:26,590 - #51 val
INFO  13:22:26,590 - #41 .
INFO  13:22:26,590 - #51 pos
INFO  13:22:26,591 - #35 =
INFO  13:22:26,591 - #11 new
INFO  13:22:26,591 - #51 int
INFO  13:22:26,591 - #44 [
INFO  13:22:26,591 - #51 size
INFO  13:22:26,591 - #45 ]
INFO  13:22:26,591 - #38 ;
INFO  13:22:26,591 - #51 val
INFO  13:22:26,594 - #41 .
INFO  13:22:26,594 - #51 neg
INFO  13:22:26,594 - #35 =
INFO  13:22:26,594 - #11 new
INFO  13:22:26,594 - #51 int
INFO  13:22:26,594 - #44 [
INFO  13:22:26,594 - #51 size
INFO  13:22:26,595 - #45 ]
INFO  13:22:26,595 - #38 ;
INFO  13:22:26,595 - #13 read
INFO  13:22:26,595 - #42 (
INFO  13:22:26,595 - #51 x
INFO  13:22:26,595 - #43 )
INFO  13:22:26,595 - #38 ;
INFO  13:22:26,595 - #8 if
INFO  13:22:26,595 - #42 (
INFO  13:22:26,595 - #51 x
INFO  13:22:26,595 - #29 >
INFO  13:22:26,595 - #48 5
INFO  13:22:26,596 - #43 )
INFO  13:22:26,596 - #46 {
INFO  13:22:26,596 - #20 goto
INFO  13:22:26,596 - #51 skip
INFO  13:22:26,596 - #38 ;
INFO  13:22:26,596 - #47 }
INFO  13:22:26,596 - #51 i
INFO  13:22:26,596 - #35 =
INFO  13:22:26,596 - #48 0
INFO  13:22:26,597 - #38 ;
INFO  13:22:26,597 - #9 do
INFO  13:22:26,597 - #46 {
INFO  13:22:26,597 - #51 val
INFO  13:22:26,597 - #41 .
INFO  13:22:26,597 - #51 putp
INFO  13:22:26,597 - #42 (
INFO  13:22:26,597 - #48 0
INFO  13:22:26,597 - #40 ,
INFO  13:22:26,597 - #51 i
INFO  13:22:26,597 - #43 )
INFO  13:22:26,597 - #38 ;
INFO  13:22:26,597 - #51 val
INFO  13:22:26,597 - #41 .
INFO  13:22:26,597 - #51 putn
INFO  13:22:26,597 - #42 (
INFO  13:22:26,598 - #48 0
INFO  13:22:26,598 - #40 ,
INFO  13:22:26,598 - #51 i
INFO  13:22:26,598 - #43 )
INFO  13:22:26,598 - #38 ;
INFO  13:22:26,598 - #51 i
INFO  13:22:26,598 - #36 ++
INFO  13:22:26,598 - #38 ;
INFO  13:22:26,598 - #47 }
INFO  13:22:26,598 - #10 while
INFO  13:22:26,598 - #42 (
INFO  13:22:26,598 - #51 i
INFO  13:22:26,598 - #31 <
INFO  13:22:26,598 - #51 size
INFO  13:22:26,598 - #43 )
INFO  13:22:26,598 - #38 ;
INFO  13:22:26,598 - #51 skip
INFO  13:22:26,598 - #39 :
INFO  13:22:26,598 - #51 f
INFO  13:22:26,599 - #42 (
INFO  13:22:26,599 - #51 c
INFO  13:22:26,599 - #40 ,
INFO  13:22:26,599 - #51 x
INFO  13:22:26,599 - #40 ,
INFO  13:22:26,599 - #51 i
INFO  13:22:26,599 - #43 )
INFO  13:22:26,599 - #38 ;
INFO  13:22:26,599 - #51 board
INFO  13:22:26,599 - #35 =
INFO  13:22:26,599 - #11 new
INFO  13:22:26,599 - #51 Board
INFO  13:22:26,599 - #38 ;
INFO  13:22:26,599 - #13 read
INFO  13:22:26,599 - #42 (
INFO  13:22:26,599 - #51 board
INFO  13:22:26,599 - #41 .
INFO  13:22:26,599 - #51 rows
INFO  13:22:26,599 - #43 )
INFO  13:22:26,599 - #38 ;
INFO  13:22:26,599 - #51 x
INFO  13:22:26,599 - #35 =
INFO  13:22:26,599 - #51 board
INFO  13:22:26,600 - #41 .
INFO  13:22:26,600 - #51 rows
INFO  13:22:26,600 - #38 ;
INFO  13:22:26,600 - #9 do
INFO  13:22:26,600 - #46 {
INFO  13:22:26,600 - #8 if
INFO  13:22:26,600 - #42 (
INFO  13:22:26,600 - #51 x
INFO  13:22:26,600 - #32 <=
INFO  13:22:26,600 - #48 0
INFO  13:22:26,600 - #43 )
INFO  13:22:26,600 - #3 break
INFO  13:22:26,600 - #38 ;
INFO  13:22:26,600 - #8 if
INFO  13:22:26,600 - #42 (
INFO  13:22:26,600 - #48 0
INFO  13:22:26,600 - #32 <=
INFO  13:22:26,600 - #51 x
INFO  13:22:26,600 - #33 &&
INFO  13:22:26,600 - #51 x
INFO  13:22:26,600 - #31 <
INFO  13:22:26,600 - #51 size
INFO  13:22:26,601 - #43 )
INFO  13:22:26,601 - #46 {
INFO  13:22:26,601 - #51 val
INFO  13:22:26,601 - #41 .
INFO  13:22:26,601 - #51 putp
INFO  13:22:26,601 - #42 (
INFO  13:22:26,601 - #51 val
INFO  13:22:26,601 - #41 .
INFO  13:22:26,601 - #51 getp
INFO  13:22:26,601 - #42 (
INFO  13:22:26,601 - #51 x
INFO  13:22:26,601 - #43 )
INFO  13:22:26,601 - #22 +
INFO  13:22:26,601 - #48 1
INFO  13:22:26,601 - #43 )
INFO  13:22:26,601 - #38 ;
INFO  13:22:26,601 - #47 }
INFO  13:22:26,601 - #6 else
INFO  13:22:26,602 - #8 if
INFO  13:22:26,602 - #42 (
INFO  13:22:26,602 - #23 -
INFO  13:22:26,602 - #51 size
INFO  13:22:26,602 - #31 <
INFO  13:22:26,602 - #51 c
INFO  13:22:26,602 - #33 &&
INFO  13:22:26,602 - #51 x
INFO  13:22:26,602 - #31 <
INFO  13:22:26,602 - #48 0
INFO  13:22:26,602 - #43 )
INFO  13:22:26,602 - #46 {
INFO  13:22:26,602 - #51 val
INFO  13:22:26,602 - #41 .
INFO  13:22:26,602 - #51 putn
INFO  13:22:26,602 - #42 (
INFO  13:22:26,602 - #51 val
INFO  13:22:26,602 - #41 .
INFO  13:22:26,602 - #51 getn
INFO  13:22:26,602 - #42 (
INFO  13:22:26,602 - #23 -
INFO  13:22:26,602 - #51 x
INFO  13:22:26,602 - #43 )
INFO  13:22:26,602 - #22 +
INFO  13:22:26,602 - #48 1
INFO  13:22:26,602 - #43 )
INFO  13:22:26,602 - #38 ;
INFO  13:22:26,603 - #47 }
INFO  13:22:26,603 - #13 read
INFO  13:22:26,603 - #42 (
INFO  13:22:26,603 - #51 x
INFO  13:22:26,603 - #43 )
INFO  13:22:26,603 - #38 ;
INFO  13:22:26,603 - #47 }
INFO  13:22:26,603 - #10 while
INFO  13:22:26,603 - #42 (
INFO  13:22:26,603 - #50 true
INFO  13:22:26,603 - #43 )
INFO  13:22:26,603 - #38 ;
INFO  13:22:26,603 - #47 }
INFO  13:22:26,603 - #47 }
ERROR 13:22:26,603 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 57
