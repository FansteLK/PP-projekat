INFO  21:50:48,434 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  21:50:48,485 - #2 program
INFO  21:50:48,485 - #51 p
INFO  21:50:48,485 - #8 const
INFO  21:50:48,486 - #51 int
INFO  21:50:48,486 - #51 size
INFO  21:50:48,487 - #35 =
INFO  21:50:48,487 - #48 10
INFO  21:50:48,487 - #38 ;
INFO  21:50:48,489 - #5 class
INFO  21:50:48,490 - #51 Table
INFO  21:50:48,490 - #46 {
INFO  21:50:48,491 - #51 int
INFO  21:50:48,492 - #51 pos
INFO  21:50:48,492 - #44 [
INFO  21:50:48,492 - #45 ]
INFO  21:50:48,492 - #40 ,
INFO  21:50:48,493 - #51 neg
INFO  21:50:48,493 - #44 [
INFO  21:50:48,494 - #45 ]
INFO  21:50:48,494 - #38 ;
INFO  21:50:48,494 - #46 {
INFO  21:50:48,494 - #51 Table
INFO  21:50:48,502 - #42 (
INFO  21:50:48,502 - #43 )
INFO  21:50:48,502 - #46 {
INFO  21:50:48,503 - #47 }
ERROR 21:50:48,503 - 
Sintaksna greska na liniji 6
INFO  21:50:48,503 - #38 ;
INFO  21:50:48,503 - #3 void
INFO  21:50:48,503 - #51 putp
INFO  21:50:48,503 - #42 (
INFO  21:50:48,504 - #51 int
INFO  21:50:48,504 - #51 a
INFO  21:50:48,504 - #40 ,
INFO  21:50:48,504 - #51 int
INFO  21:50:48,504 - #51 idx
INFO  21:50:48,504 - #43 )
INFO  21:50:48,504 - #46 {
INFO  21:50:48,504 - #51 thi
INFO  21:50:48,504 - #41 .
INFO  21:50:48,504 - #51 pos
INFO  21:50:48,505 - #44 [
INFO  21:50:48,505 - #51 idx
INFO  21:50:48,505 - #45 ]
INFO  21:50:48,505 - #35 =
INFO  21:50:48,505 - #51 a
INFO  21:50:48,505 - #38 ;
INFO  21:50:48,505 - #47 }
INFO  21:50:48,505 - #3 void
INFO  21:50:48,505 - #51 putn
INFO  21:50:48,505 - #42 (
INFO  21:50:48,506 - #51 int
INFO  21:50:48,506 - #51 a
INFO  21:50:48,506 - #40 ,
INFO  21:50:48,506 - #51 int
INFO  21:50:48,506 - #51 idx
INFO  21:50:48,506 - #43 )
INFO  21:50:48,506 - #46 {
INFO  21:50:48,506 - #51 thi
INFO  21:50:48,506 - #41 .
INFO  21:50:48,506 - #51 neg
INFO  21:50:48,506 - #44 [
INFO  21:50:48,506 - #51 idx
INFO  21:50:48,507 - #45 ]
INFO  21:50:48,507 - #35 =
INFO  21:50:48,507 - #51 a
INFO  21:50:48,507 - #38 ;
INFO  21:50:48,507 - #47 }
INFO  21:50:48,507 - #51 int
INFO  21:50:48,507 - #51 getp
INFO  21:50:48,507 - #42 (
INFO  21:50:48,507 - #51 int
INFO  21:50:48,507 - #51 idx
INFO  21:50:48,508 - #43 )
INFO  21:50:48,508 - #46 {
INFO  21:50:48,508 - #15 return
INFO  21:50:48,508 - #51 pos
INFO  21:50:48,508 - #44 [
INFO  21:50:48,508 - #51 idx
INFO  21:50:48,508 - #45 ]
INFO  21:50:48,508 - #38 ;
INFO  21:50:48,508 - #47 }
INFO  21:50:48,508 - #51 int
INFO  21:50:48,508 - #51 getn
INFO  21:50:48,508 - #42 (
INFO  21:50:48,509 - #51 int
INFO  21:50:48,509 - #51 idx
INFO  21:50:48,509 - #43 )
INFO  21:50:48,509 - #46 {
INFO  21:50:48,509 - #15 return
INFO  21:50:48,509 - #51 neg
INFO  21:50:48,509 - #44 [
INFO  21:50:48,509 - #51 idx
INFO  21:50:48,509 - #45 ]
INFO  21:50:48,509 - #38 ;
INFO  21:50:48,509 - #47 }
INFO  21:50:48,509 - #47 }
INFO  21:50:48,509 - #47 }
INFO  21:50:48,509 - #21 record
INFO  21:50:48,509 - #51 Board
INFO  21:50:48,511 - #46 {
INFO  21:50:48,511 - #51 int
INFO  21:50:48,511 - #51 rows
INFO  21:50:48,511 - #40 ,
ERROR 21:50:48,511 - Izvrsen oporavak klasne promenljive do { u liniji 4
ERROR 21:50:48,512 - 
Sintaksna greska na liniji 14
INFO  21:50:48,512 - #51 columns
INFO  21:50:48,512 - #38 ;
INFO  21:50:48,512 - #47 }
INFO  21:50:48,512 - #51 Table
INFO  21:50:48,512 - #51 val
INFO  21:50:48,512 - #38 ;
INFO  21:50:48,512 - #51 Board
INFO  21:50:48,512 - #51 board
INFO  21:50:48,513 - #38 ;
INFO  21:50:48,513 - #46 {
INFO  21:50:48,513 - #3 void
INFO  21:50:48,513 - #51 f
ERROR 21:50:48,513 - Izvrsen oporavak klasne promenljive do ; u liniji 4
INFO  21:50:48,513 - #42 (
INFO  21:50:48,514 - #51 char
INFO  21:50:48,514 - #51 ch
INFO  21:50:48,514 - #40 ,
INFO  21:50:48,515 - #51 int
INFO  21:50:48,515 - #51 a
INFO  21:50:48,515 - #40 ,
INFO  21:50:48,515 - #51 int
INFO  21:50:48,515 - #51 arg
INFO  21:50:48,515 - #43 )
INFO  21:50:48,515 - #51 int
INFO  21:50:48,515 - #51 x
INFO  21:50:48,515 - #38 ;
INFO  21:50:48,516 - #46 {
INFO  21:50:48,516 - #51 x
INFO  21:50:48,516 - #35 =
INFO  21:50:48,517 - #51 arg
INFO  21:50:48,518 - #38 ;
INFO  21:50:48,518 - #47 }
INFO  21:50:48,519 - #3 void
INFO  21:50:48,519 - #51 main
INFO  21:50:48,519 - #42 (
INFO  21:50:48,520 - #43 )
INFO  21:50:48,520 - #51 int
INFO  21:50:48,520 - #51 x
INFO  21:50:48,520 - #40 ,
INFO  21:50:48,520 - #51 i
INFO  21:50:48,520 - #38 ;
INFO  21:50:48,520 - #51 char
INFO  21:50:48,521 - #51 c
INFO  21:50:48,521 - #38 ;
INFO  21:50:48,521 - #46 {
INFO  21:50:48,521 - #51 val
INFO  21:50:48,521 - #35 =
INFO  21:50:48,521 - #12 new
INFO  21:50:48,521 - #51 Table
INFO  21:50:48,521 - #38 ;
INFO  21:50:48,522 - #51 val
INFO  21:50:48,522 - #41 .
INFO  21:50:48,522 - #51 pos
INFO  21:50:48,522 - #35 =
INFO  21:50:48,523 - #12 new
INFO  21:50:48,523 - #51 int
INFO  21:50:48,523 - #44 [
INFO  21:50:48,523 - #51 size
INFO  21:50:48,523 - #45 ]
INFO  21:50:48,523 - #38 ;
INFO  21:50:48,523 - #51 val
INFO  21:50:48,523 - #41 .
INFO  21:50:48,523 - #51 neg
INFO  21:50:48,523 - #35 =
INFO  21:50:48,523 - #12 new
INFO  21:50:48,524 - #51 int
INFO  21:50:48,524 - #44 [
INFO  21:50:48,524 - #51 size
INFO  21:50:48,524 - #45 ]
INFO  21:50:48,524 - #38 ;
INFO  21:50:48,524 - #14 read
INFO  21:50:48,524 - #42 (
INFO  21:50:48,524 - #51 x
INFO  21:50:48,524 - #43 )
INFO  21:50:48,524 - #38 ;
INFO  21:50:48,524 - #9 if
INFO  21:50:48,524 - #42 (
INFO  21:50:48,524 - #51 x
INFO  21:50:48,524 - #29 >
INFO  21:50:48,524 - #48 5
INFO  21:50:48,525 - #43 )
INFO  21:50:48,526 - #46 {
INFO  21:50:48,526 - #20 goto
INFO  21:50:48,526 - #51 skip
INFO  21:50:48,526 - #38 ;
INFO  21:50:48,527 - #47 }
INFO  21:50:48,527 - #51 i
INFO  21:50:48,527 - #35 =
INFO  21:50:48,527 - #48 0
INFO  21:50:48,527 - #38 ;
INFO  21:50:48,527 - #10 do
INFO  21:50:48,527 - #46 {
INFO  21:50:48,527 - #51 val
INFO  21:50:48,527 - #41 .
INFO  21:50:48,527 - #51 putp
INFO  21:50:48,527 - #42 (
INFO  21:50:48,527 - #48 0
INFO  21:50:48,527 - #40 ,
INFO  21:50:48,527 - #51 i
INFO  21:50:48,527 - #43 )
INFO  21:50:48,528 - #38 ;
INFO  21:50:48,528 - #51 val
INFO  21:50:48,528 - #41 .
INFO  21:50:48,528 - #51 putn
INFO  21:50:48,528 - #42 (
INFO  21:50:48,528 - #48 0
INFO  21:50:48,528 - #40 ,
INFO  21:50:48,528 - #51 i
INFO  21:50:48,528 - #43 )
INFO  21:50:48,528 - #38 ;
INFO  21:50:48,528 - #51 i
INFO  21:50:48,528 - #36 ++
INFO  21:50:48,528 - #38 ;
INFO  21:50:48,528 - #47 }
INFO  21:50:48,529 - #11 while
INFO  21:50:48,529 - #42 (
INFO  21:50:48,529 - #51 i
INFO  21:50:48,529 - #31 <
INFO  21:50:48,529 - #51 size
INFO  21:50:48,529 - #43 )
INFO  21:50:48,529 - #38 ;
INFO  21:50:48,529 - #51 skip
INFO  21:50:48,530 - #39 :
INFO  21:50:48,530 - #51 f
INFO  21:50:48,530 - #42 (
INFO  21:50:48,530 - #51 c
INFO  21:50:48,530 - #40 ,
INFO  21:50:48,530 - #51 x
INFO  21:50:48,530 - #40 ,
INFO  21:50:48,530 - #51 i
INFO  21:50:48,530 - #43 )
INFO  21:50:48,530 - #38 ;
INFO  21:50:48,530 - #51 board
INFO  21:50:48,530 - #35 =
INFO  21:50:48,530 - #12 new
INFO  21:50:48,530 - #51 Board
INFO  21:50:48,530 - #38 ;
INFO  21:50:48,530 - #14 read
INFO  21:50:48,530 - #42 (
INFO  21:50:48,530 - #51 board
INFO  21:50:48,530 - #41 .
INFO  21:50:48,530 - #51 rows
INFO  21:50:48,530 - #43 )
INFO  21:50:48,530 - #38 ;
INFO  21:50:48,530 - #51 x
INFO  21:50:48,531 - #35 =
INFO  21:50:48,531 - #51 board
INFO  21:50:48,531 - #41 .
INFO  21:50:48,531 - #51 rows
INFO  21:50:48,531 - #38 ;
INFO  21:50:48,531 - #10 do
INFO  21:50:48,531 - #46 {
INFO  21:50:48,531 - #9 if
INFO  21:50:48,531 - #42 (
INFO  21:50:48,531 - #51 x
INFO  21:50:48,531 - #32 <=
INFO  21:50:48,531 - #48 0
INFO  21:50:48,532 - #43 )
INFO  21:50:48,532 - #4 break
INFO  21:50:48,532 - #38 ;
INFO  21:50:48,532 - #9 if
INFO  21:50:48,532 - #42 (
INFO  21:50:48,532 - #48 0
INFO  21:50:48,532 - #32 <=
INFO  21:50:48,532 - #51 x
INFO  21:50:48,532 - #33 &&
INFO  21:50:48,532 - #51 x
INFO  21:50:48,533 - #31 <
INFO  21:50:48,533 - #51 size
INFO  21:50:48,533 - #43 )
INFO  21:50:48,533 - #46 {
INFO  21:50:48,533 - #51 val
INFO  21:50:48,533 - #41 .
INFO  21:50:48,533 - #51 putp
INFO  21:50:48,533 - #42 (
INFO  21:50:48,533 - #51 val
INFO  21:50:48,533 - #41 .
INFO  21:50:48,533 - #51 getp
INFO  21:50:48,533 - #42 (
INFO  21:50:48,533 - #51 x
INFO  21:50:48,533 - #43 )
INFO  21:50:48,533 - #22 +
INFO  21:50:48,533 - #48 1
INFO  21:50:48,534 - #43 )
INFO  21:50:48,534 - #38 ;
INFO  21:50:48,534 - #47 }
INFO  21:50:48,534 - #7 else
INFO  21:50:48,534 - #9 if
INFO  21:50:48,534 - #42 (
INFO  21:50:48,534 - #23 -
INFO  21:50:48,534 - #51 size
INFO  21:50:48,534 - #31 <
INFO  21:50:48,535 - #51 x
INFO  21:50:48,535 - #33 &&
INFO  21:50:48,535 - #51 x
INFO  21:50:48,535 - #31 <
INFO  21:50:48,535 - #48 0
INFO  21:50:48,535 - #43 )
INFO  21:50:48,535 - #46 {
INFO  21:50:48,535 - #51 val
INFO  21:50:48,535 - #41 .
INFO  21:50:48,535 - #51 putn
INFO  21:50:48,535 - #42 (
INFO  21:50:48,535 - #51 val
INFO  21:50:48,535 - #41 .
INFO  21:50:48,535 - #51 getn
INFO  21:50:48,535 - #42 (
INFO  21:50:48,535 - #23 -
INFO  21:50:48,535 - #51 x
INFO  21:50:48,535 - #43 )
INFO  21:50:48,535 - #22 +
INFO  21:50:48,535 - #48 1
INFO  21:50:48,535 - #43 )
INFO  21:50:48,535 - #38 ;
INFO  21:50:48,535 - #47 }
INFO  21:50:48,536 - #51 x
INFO  21:50:48,536 - #44 [
INFO  21:50:48,536 - #48 3
INFO  21:50:48,536 - #45 ]
INFO  21:50:48,539 - #35 =
INFO  21:50:48,539 - #48 5
INFO  21:50:48,539 - #38 ;
INFO  21:50:48,539 - #51 x
INFO  21:50:48,539 - #35 =
INFO  21:50:48,539 - #12 new
INFO  21:50:48,539 - #51 x
INFO  21:50:48,539 - #44 [
INFO  21:50:48,539 - #48 3
INFO  21:50:48,539 - #45 ]
INFO  21:50:48,539 - #38 ;
INFO  21:50:48,539 - #51 putp
INFO  21:50:48,539 - #42 (
INFO  21:50:48,539 - #43 )
INFO  21:50:48,540 - #38 ;
INFO  21:50:48,540 - #14 read
INFO  21:50:48,540 - #42 (
INFO  21:50:48,540 - #51 x
INFO  21:50:48,540 - #43 )
INFO  21:50:48,540 - #38 ;
INFO  21:50:48,540 - #47 }
INFO  21:50:48,540 - #11 while
INFO  21:50:48,540 - #42 (
INFO  21:50:48,540 - #50 true
INFO  21:50:48,540 - #43 )
INFO  21:50:48,541 - #38 ;
INFO  21:50:48,541 - #47 }
INFO  21:50:48,541 - #47 }
ERROR 21:50:48,541 - 
Sintaksna greska na liniji 61
ERROR 21:50:48,541 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 61
