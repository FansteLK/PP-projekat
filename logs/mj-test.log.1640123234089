INFO  22:46:43,709 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  22:46:43,761 - #2 program
INFO  22:46:43,761 - #51 p
INFO  22:46:43,761 - #8 const
INFO  22:46:43,762 - #51 int
INFO  22:46:43,762 - #51 size
INFO  22:46:43,763 - #35 =
INFO  22:46:43,763 - #48 10
INFO  22:46:43,763 - #38 ;
INFO  22:46:43,764 - #5 class
INFO  22:46:43,765 - #51 Table
INFO  22:46:43,765 - #46 {
INFO  22:46:43,766 - #51 int
INFO  22:46:43,766 - #51 pos
INFO  22:46:43,766 - #44 [
INFO  22:46:43,766 - #45 ]
INFO  22:46:43,766 - #40 ,
INFO  22:46:43,767 - #51 neg
INFO  22:46:43,767 - #44 [
INFO  22:46:43,767 - #45 ]
INFO  22:46:43,768 - #38 ;
INFO  22:46:43,768 - #46 {
INFO  22:46:43,768 - #51 Table
INFO  22:46:43,770 - #16 extends
ERROR 22:46:43,770 - 
Sintaksna greska na liniji 6
INFO  22:46:43,770 - #51 Nesto
INFO  22:46:43,770 - #42 (
INFO  22:46:43,770 - #43 )
INFO  22:46:43,771 - #46 {
INFO  22:46:43,771 - #19 super
INFO  22:46:43,771 - #42 (
INFO  22:46:43,771 - #43 )
INFO  22:46:43,771 - #38 ;
INFO  22:46:43,771 - #47 }
INFO  22:46:43,771 - #3 void
INFO  22:46:43,771 - #51 putp
INFO  22:46:43,771 - #42 (
INFO  22:46:43,772 - #51 int
INFO  22:46:43,772 - #51 a
INFO  22:46:43,772 - #40 ,
INFO  22:46:43,772 - #51 int
INFO  22:46:43,772 - #51 idx
INFO  22:46:43,772 - #43 )
INFO  22:46:43,772 - #46 {
INFO  22:46:43,772 - #51 thi
INFO  22:46:43,772 - #41 .
INFO  22:46:43,772 - #51 pos
INFO  22:46:43,772 - #44 [
INFO  22:46:43,772 - #51 idx
INFO  22:46:43,772 - #45 ]
INFO  22:46:43,772 - #35 =
INFO  22:46:43,772 - #51 a
INFO  22:46:43,772 - #38 ;
INFO  22:46:43,773 - #47 }
INFO  22:46:43,773 - #3 void
INFO  22:46:43,773 - #51 putn
INFO  22:46:43,773 - #42 (
INFO  22:46:43,773 - #51 int
INFO  22:46:43,773 - #51 a
INFO  22:46:43,773 - #40 ,
INFO  22:46:43,773 - #51 int
INFO  22:46:43,773 - #51 idx
INFO  22:46:43,773 - #43 )
INFO  22:46:43,773 - #46 {
INFO  22:46:43,773 - #51 thi
INFO  22:46:43,773 - #41 .
INFO  22:46:43,774 - #51 neg
INFO  22:46:43,774 - #44 [
INFO  22:46:43,774 - #51 idx
INFO  22:46:43,774 - #45 ]
INFO  22:46:43,774 - #35 =
INFO  22:46:43,774 - #51 a
INFO  22:46:43,774 - #38 ;
INFO  22:46:43,774 - #47 }
INFO  22:46:43,774 - #51 int
INFO  22:46:43,774 - #51 getp
INFO  22:46:43,774 - #42 (
INFO  22:46:43,774 - #51 int
INFO  22:46:43,774 - #51 idx
INFO  22:46:43,774 - #43 )
INFO  22:46:43,774 - #46 {
INFO  22:46:43,774 - #15 return
INFO  22:46:43,774 - #51 pos
INFO  22:46:43,775 - #44 [
INFO  22:46:43,775 - #51 idx
INFO  22:46:43,775 - #45 ]
INFO  22:46:43,775 - #38 ;
INFO  22:46:43,775 - #47 }
INFO  22:46:43,775 - #51 int
INFO  22:46:43,775 - #51 getn
INFO  22:46:43,775 - #42 (
INFO  22:46:43,775 - #51 int
INFO  22:46:43,775 - #51 idx
INFO  22:46:43,775 - #43 )
INFO  22:46:43,775 - #46 {
INFO  22:46:43,775 - #15 return
INFO  22:46:43,775 - #51 neg
INFO  22:46:43,775 - #44 [
INFO  22:46:43,776 - #51 idx
INFO  22:46:43,776 - #45 ]
INFO  22:46:43,776 - #38 ;
INFO  22:46:43,776 - #47 }
INFO  22:46:43,776 - #47 }
INFO  22:46:43,776 - #47 }
INFO  22:46:43,776 - #21 record
INFO  22:46:43,776 - #51 Board
INFO  22:46:43,776 - #46 {
INFO  22:46:43,776 - #51 int
INFO  22:46:43,776 - #51 rows
INFO  22:46:43,776 - #40 ,
INFO  22:46:43,776 - #51 columns
INFO  22:46:43,776 - #38 ;
INFO  22:46:43,777 - #47 }
INFO  22:46:43,777 - #51 Table
INFO  22:46:43,777 - #51 val
INFO  22:46:43,777 - #38 ;
INFO  22:46:43,777 - #51 Board
INFO  22:46:43,777 - #51 board
INFO  22:46:43,777 - #38 ;
INFO  22:46:43,777 - #46 {
INFO  22:46:43,777 - #3 void
INFO  22:46:43,777 - #51 f
ERROR 22:46:43,777 - Izvrsen oporavak klasne promenljive do ; u liniji 4
INFO  22:46:43,778 - #42 (
INFO  22:46:43,778 - #51 char
INFO  22:46:43,778 - #51 ch
INFO  22:46:43,778 - #40 ,
INFO  22:46:43,779 - #51 int
INFO  22:46:43,779 - #51 a
INFO  22:46:43,779 - #40 ,
INFO  22:46:43,779 - #51 int
INFO  22:46:43,779 - #51 arg
INFO  22:46:43,779 - #43 )
INFO  22:46:43,780 - #51 int
INFO  22:46:43,780 - #51 x
INFO  22:46:43,780 - #38 ;
INFO  22:46:43,780 - #46 {
INFO  22:46:43,781 - #51 x
INFO  22:46:43,781 - #35 =
INFO  22:46:43,782 - #51 arg
INFO  22:46:43,783 - #38 ;
INFO  22:46:43,783 - #47 }
INFO  22:46:43,784 - #3 void
INFO  22:46:43,784 - #51 main
INFO  22:46:43,785 - #42 (
INFO  22:46:43,785 - #43 )
INFO  22:46:43,785 - #51 int
INFO  22:46:43,785 - #51 x
INFO  22:46:43,785 - #40 ,
INFO  22:46:43,785 - #51 i
INFO  22:46:43,785 - #38 ;
INFO  22:46:43,785 - #51 char
INFO  22:46:43,785 - #51 c
INFO  22:46:43,786 - #38 ;
INFO  22:46:43,786 - #46 {
INFO  22:46:43,786 - #51 val
INFO  22:46:43,786 - #35 =
INFO  22:46:43,786 - #12 new
INFO  22:46:43,786 - #51 Table
INFO  22:46:43,786 - #38 ;
INFO  22:46:43,786 - #51 val
INFO  22:46:43,787 - #41 .
INFO  22:46:43,787 - #51 pos
INFO  22:46:43,787 - #35 =
INFO  22:46:43,787 - #12 new
INFO  22:46:43,788 - #51 int
INFO  22:46:43,789 - #44 [
INFO  22:46:43,789 - #51 size
INFO  22:46:43,789 - #45 ]
INFO  22:46:43,789 - #38 ;
INFO  22:46:43,789 - #51 val
INFO  22:46:43,789 - #41 .
INFO  22:46:43,789 - #51 neg
INFO  22:46:43,789 - #35 =
INFO  22:46:43,789 - #12 new
INFO  22:46:43,789 - #51 int
INFO  22:46:43,789 - #44 [
INFO  22:46:43,789 - #51 size
INFO  22:46:43,789 - #45 ]
INFO  22:46:43,790 - #38 ;
INFO  22:46:43,790 - #14 read
INFO  22:46:43,790 - #42 (
INFO  22:46:43,790 - #51 x
INFO  22:46:43,790 - #43 )
INFO  22:46:43,790 - #38 ;
INFO  22:46:43,790 - #9 if
INFO  22:46:43,790 - #42 (
INFO  22:46:43,790 - #51 x
INFO  22:46:43,790 - #29 >
INFO  22:46:43,790 - #48 5
INFO  22:46:43,791 - #43 )
INFO  22:46:43,792 - #46 {
INFO  22:46:43,792 - #20 goto
INFO  22:46:43,792 - #51 skip
INFO  22:46:43,792 - #38 ;
INFO  22:46:43,793 - #47 }
INFO  22:46:43,793 - #51 i
INFO  22:46:43,793 - #35 =
INFO  22:46:43,793 - #48 0
INFO  22:46:43,793 - #38 ;
INFO  22:46:43,793 - #10 do
INFO  22:46:43,793 - #46 {
INFO  22:46:43,793 - #51 val
INFO  22:46:43,793 - #41 .
INFO  22:46:43,793 - #51 putp
INFO  22:46:43,793 - #42 (
INFO  22:46:43,793 - #48 0
INFO  22:46:43,793 - #40 ,
INFO  22:46:43,793 - #51 i
INFO  22:46:43,794 - #43 )
INFO  22:46:43,794 - #38 ;
INFO  22:46:43,794 - #51 val
INFO  22:46:43,794 - #41 .
INFO  22:46:43,794 - #51 putn
INFO  22:46:43,794 - #42 (
INFO  22:46:43,794 - #48 0
INFO  22:46:43,794 - #40 ,
INFO  22:46:43,794 - #51 i
INFO  22:46:43,794 - #43 )
INFO  22:46:43,794 - #38 ;
INFO  22:46:43,794 - #51 i
INFO  22:46:43,794 - #36 ++
INFO  22:46:43,794 - #38 ;
INFO  22:46:43,795 - #47 }
INFO  22:46:43,795 - #11 while
INFO  22:46:43,795 - #42 (
INFO  22:46:43,795 - #51 i
INFO  22:46:43,795 - #31 <
INFO  22:46:43,795 - #51 size
INFO  22:46:43,796 - #43 )
INFO  22:46:43,796 - #38 ;
INFO  22:46:43,796 - #51 skip
INFO  22:46:43,796 - #39 :
INFO  22:46:43,796 - #51 f
INFO  22:46:43,796 - #42 (
INFO  22:46:43,796 - #51 c
INFO  22:46:43,796 - #40 ,
INFO  22:46:43,796 - #51 x
INFO  22:46:43,797 - #40 ,
INFO  22:46:43,797 - #51 i
INFO  22:46:43,797 - #43 )
INFO  22:46:43,797 - #38 ;
INFO  22:46:43,797 - #51 board
INFO  22:46:43,797 - #35 =
INFO  22:46:43,797 - #12 new
INFO  22:46:43,797 - #51 Board
INFO  22:46:43,797 - #38 ;
INFO  22:46:43,797 - #14 read
INFO  22:46:43,800 - #42 (
INFO  22:46:43,800 - #51 board
INFO  22:46:43,800 - #41 .
INFO  22:46:43,800 - #51 rows
INFO  22:46:43,800 - #43 )
INFO  22:46:43,800 - #38 ;
INFO  22:46:43,800 - #51 x
INFO  22:46:43,800 - #35 =
INFO  22:46:43,801 - #51 board
INFO  22:46:43,801 - #41 .
INFO  22:46:43,801 - #51 rows
INFO  22:46:43,801 - #38 ;
INFO  22:46:43,801 - #10 do
INFO  22:46:43,801 - #46 {
INFO  22:46:43,801 - #9 if
INFO  22:46:43,801 - #42 (
INFO  22:46:43,801 - #51 x
INFO  22:46:43,801 - #32 <=
INFO  22:46:43,801 - #48 0
INFO  22:46:43,802 - #43 )
INFO  22:46:43,802 - #4 break
INFO  22:46:43,802 - #38 ;
INFO  22:46:43,802 - #9 if
INFO  22:46:43,802 - #42 (
INFO  22:46:43,802 - #48 0
INFO  22:46:43,803 - #32 <=
INFO  22:46:43,803 - #51 x
INFO  22:46:43,803 - #33 &&
INFO  22:46:43,803 - #51 x
INFO  22:46:43,803 - #31 <
INFO  22:46:43,803 - #51 size
INFO  22:46:43,803 - #43 )
INFO  22:46:43,803 - #46 {
INFO  22:46:43,803 - #51 val
INFO  22:46:43,803 - #41 .
INFO  22:46:43,803 - #51 putp
INFO  22:46:43,803 - #42 (
INFO  22:46:43,803 - #51 val
INFO  22:46:43,803 - #41 .
INFO  22:46:43,803 - #51 getp
INFO  22:46:43,803 - #42 (
INFO  22:46:43,803 - #51 x
INFO  22:46:43,803 - #43 )
INFO  22:46:43,803 - #22 +
INFO  22:46:43,803 - #48 1
INFO  22:46:43,804 - #43 )
INFO  22:46:43,804 - #38 ;
INFO  22:46:43,804 - #47 }
INFO  22:46:43,804 - #7 else
INFO  22:46:43,804 - #9 if
INFO  22:46:43,805 - #42 (
INFO  22:46:43,805 - #23 -
INFO  22:46:43,805 - #51 size
INFO  22:46:43,805 - #31 <
INFO  22:46:43,805 - #51 x
INFO  22:46:43,805 - #33 &&
INFO  22:46:43,805 - #51 x
INFO  22:46:43,805 - #31 <
INFO  22:46:43,805 - #48 0
INFO  22:46:43,805 - #43 )
INFO  22:46:43,805 - #46 {
INFO  22:46:43,805 - #51 val
INFO  22:46:43,805 - #41 .
INFO  22:46:43,805 - #51 putn
INFO  22:46:43,805 - #42 (
INFO  22:46:43,805 - #51 val
INFO  22:46:43,805 - #41 .
INFO  22:46:43,805 - #51 getn
INFO  22:46:43,805 - #42 (
INFO  22:46:43,805 - #23 -
INFO  22:46:43,805 - #51 x
INFO  22:46:43,805 - #43 )
INFO  22:46:43,805 - #22 +
INFO  22:46:43,805 - #48 1
INFO  22:46:43,805 - #43 )
INFO  22:46:43,805 - #38 ;
INFO  22:46:43,806 - #47 }
INFO  22:46:43,806 - #51 x
INFO  22:46:43,806 - #44 [
INFO  22:46:43,806 - #48 3
INFO  22:46:43,806 - #45 ]
INFO  22:46:43,806 - #35 =
INFO  22:46:43,806 - #48 5
INFO  22:46:43,806 - #38 ;
INFO  22:46:43,806 - #51 x
INFO  22:46:43,806 - #35 =
INFO  22:46:43,806 - #12 new
INFO  22:46:43,806 - #51 x
INFO  22:46:43,806 - #44 [
INFO  22:46:43,806 - #48 3
INFO  22:46:43,806 - #45 ]
INFO  22:46:43,807 - #38 ;
INFO  22:46:43,807 - #51 putp
INFO  22:46:43,807 - #42 (
INFO  22:46:43,807 - #43 )
INFO  22:46:43,807 - #38 ;
INFO  22:46:43,807 - #14 read
INFO  22:46:43,807 - #42 (
INFO  22:46:43,807 - #51 x
INFO  22:46:43,807 - #43 )
INFO  22:46:43,807 - #38 ;
INFO  22:46:43,807 - #47 }
INFO  22:46:43,807 - #11 while
INFO  22:46:43,807 - #42 (
INFO  22:46:43,807 - #50 true
INFO  22:46:43,808 - #43 )
INFO  22:46:43,808 - #38 ;
INFO  22:46:43,808 - #47 }
INFO  22:46:43,808 - #47 }
ERROR 22:46:43,808 - 
Sintaksna greska na liniji 64
ERROR 22:46:43,808 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 64
