INFO  18:32:04,093 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  18:32:04,099 - #2 program
INFO  18:32:04,099 - #51 p
INFO  18:32:04,099 - #7 const
INFO  18:32:04,099 - #51 int
INFO  18:32:04,099 - #51 size
INFO  18:32:04,100 - #35 =
INFO  18:32:04,100 - #48 10
INFO  18:32:04,100 - #38 ;
INFO  18:32:04,100 - #4 class
INFO  18:32:04,100 - #51 Table
INFO  18:32:04,100 - #46 {
INFO  18:32:04,100 - #51 int
INFO  18:32:04,100 - #51 pos
INFO  18:32:04,101 - #44 [
INFO  18:32:04,101 - #45 ]
INFO  18:32:04,101 - #40 ,
INFO  18:32:04,101 - #51 neg
INFO  18:32:04,101 - #44 [
INFO  18:32:04,102 - #45 ]
INFO  18:32:04,102 - #38 ;
INFO  18:32:04,102 - #46 {
INFO  18:32:04,102 - #15 void
INFO  18:32:04,102 - #51 putp
INFO  18:32:04,102 - #42 (
INFO  18:32:04,102 - #51 int
INFO  18:32:04,103 - #51 a
INFO  18:32:04,103 - #40 ,
INFO  18:32:04,103 - #51 int
INFO  18:32:04,103 - #51 idx
INFO  18:32:04,103 - #43 )
INFO  18:32:04,103 - #46 {
INFO  18:32:04,103 - #51 thi
INFO  18:32:04,103 - #41 .
INFO  18:32:04,103 - #51 pos
INFO  18:32:04,103 - #44 [
INFO  18:32:04,103 - #51 idx
INFO  18:32:04,103 - #45 ]
INFO  18:32:04,103 - #35 =
INFO  18:32:04,104 - #51 a
INFO  18:32:04,104 - #38 ;
INFO  18:32:04,104 - #47 }
INFO  18:32:04,104 - #15 void
INFO  18:32:04,104 - #51 putn
INFO  18:32:04,104 - #42 (
INFO  18:32:04,104 - #51 int
INFO  18:32:04,104 - #51 a
INFO  18:32:04,105 - #40 ,
INFO  18:32:04,105 - #51 int
INFO  18:32:04,105 - #51 idx
INFO  18:32:04,105 - #43 )
INFO  18:32:04,105 - #46 {
INFO  18:32:04,105 - #51 thi
INFO  18:32:04,105 - #41 .
INFO  18:32:04,105 - #51 neg
INFO  18:32:04,105 - #44 [
INFO  18:32:04,105 - #51 idx
INFO  18:32:04,105 - #45 ]
INFO  18:32:04,105 - #35 =
INFO  18:32:04,105 - #51 a
INFO  18:32:04,105 - #38 ;
INFO  18:32:04,105 - #47 }
INFO  18:32:04,106 - #51 int
INFO  18:32:04,106 - #51 getp
INFO  18:32:04,106 - #42 (
INFO  18:32:04,106 - #51 int
INFO  18:32:04,106 - #51 idx
INFO  18:32:04,106 - #43 )
INFO  18:32:04,106 - #46 {
INFO  18:32:04,106 - #14 return
INFO  18:32:04,106 - #51 pos
INFO  18:32:04,106 - #44 [
INFO  18:32:04,106 - #51 idx
INFO  18:32:04,106 - #45 ]
INFO  18:32:04,106 - #38 ;
INFO  18:32:04,106 - #47 }
INFO  18:32:04,106 - #51 int
INFO  18:32:04,106 - #51 getn
INFO  18:32:04,106 - #42 (
INFO  18:32:04,107 - #51 int
INFO  18:32:04,107 - #51 idx
INFO  18:32:04,107 - #43 )
INFO  18:32:04,107 - #46 {
INFO  18:32:04,107 - #14 return
INFO  18:32:04,107 - #51 neg
INFO  18:32:04,107 - #44 [
INFO  18:32:04,107 - #51 idx
INFO  18:32:04,107 - #45 ]
INFO  18:32:04,107 - #38 ;
INFO  18:32:04,107 - #47 }
INFO  18:32:04,107 - #47 }
INFO  18:32:04,107 - #47 }
INFO  18:32:04,107 - #21 record
INFO  18:32:04,107 - #51 Board
INFO  18:32:04,107 - #46 {
INFO  18:32:04,107 - #51 int
INFO  18:32:04,107 - #51 rows
INFO  18:32:04,107 - #40 ,
INFO  18:32:04,107 - #51 columns
INFO  18:32:04,108 - #38 ;
INFO  18:32:04,108 - #47 }
INFO  18:32:04,108 - #51 Table
INFO  18:32:04,108 - #51 val
INFO  18:32:04,108 - #38 ;
INFO  18:32:04,108 - #51 Table
INFO  18:32:04,108 - #51 x
INFO  18:32:04,108 - #40 ,
INFO  18:32:04,108 - #40 ,
INFO  18:32:04,108 - #51 y
INFO  18:32:04,108 - #38 ;
INFO  18:32:04,108 - #51 Board
INFO  18:32:04,108 - #51 board
INFO  18:32:04,108 - #38 ;
INFO  18:32:04,108 - #46 {
INFO  18:32:04,109 - #15 void
INFO  18:32:04,109 - #51 f
INFO  18:32:04,109 - #42 (
INFO  18:32:04,109 - #51 char
INFO  18:32:04,109 - #51 ch
INFO  18:32:04,109 - #40 ,
INFO  18:32:04,109 - #51 int
INFO  18:32:04,109 - #51 a
INFO  18:32:04,109 - #40 ,
INFO  18:32:04,109 - #51 int
INFO  18:32:04,109 - #51 arg
INFO  18:32:04,109 - #43 )
INFO  18:32:04,109 - #51 int
INFO  18:32:04,109 - #51 x
INFO  18:32:04,109 - #38 ;
INFO  18:32:04,109 - #46 {
INFO  18:32:04,109 - #51 x
INFO  18:32:04,109 - #35 =
INFO  18:32:04,109 - #51 arg
INFO  18:32:04,109 - #38 ;
INFO  18:32:04,110 - #47 }
INFO  18:32:04,110 - #15 void
INFO  18:32:04,110 - #51 main
INFO  18:32:04,110 - #42 (
INFO  18:32:04,110 - #43 )
INFO  18:32:04,110 - #51 int
INFO  18:32:04,110 - #51 x
INFO  18:32:04,110 - #40 ,
INFO  18:32:04,110 - #51 i
INFO  18:32:04,110 - #38 ;
INFO  18:32:04,110 - #51 char
INFO  18:32:04,110 - #51 c
INFO  18:32:04,110 - #38 ;
INFO  18:32:04,110 - #46 {
INFO  18:32:04,110 - #51 val
INFO  18:32:04,110 - #35 =
INFO  18:32:04,110 - #11 new
INFO  18:32:04,110 - #51 Table
INFO  18:32:04,110 - #38 ;
INFO  18:32:04,111 - #51 val
INFO  18:32:04,111 - #41 .
INFO  18:32:04,111 - #51 pos
INFO  18:32:04,111 - #35 =
INFO  18:32:04,111 - #11 new
INFO  18:32:04,111 - #51 int
INFO  18:32:04,111 - #44 [
INFO  18:32:04,111 - #51 size
INFO  18:32:04,111 - #45 ]
INFO  18:32:04,111 - #38 ;
INFO  18:32:04,111 - #51 val
INFO  18:32:04,111 - #41 .
INFO  18:32:04,111 - #51 neg
INFO  18:32:04,111 - #35 =
INFO  18:32:04,111 - #11 new
INFO  18:32:04,111 - #51 int
INFO  18:32:04,111 - #44 [
INFO  18:32:04,111 - #51 size
INFO  18:32:04,111 - #45 ]
INFO  18:32:04,111 - #38 ;
INFO  18:32:04,112 - #13 read
INFO  18:32:04,112 - #42 (
INFO  18:32:04,112 - #51 x
INFO  18:32:04,112 - #43 )
INFO  18:32:04,112 - #38 ;
INFO  18:32:04,112 - #8 if
INFO  18:32:04,112 - #42 (
INFO  18:32:04,112 - #51 x
INFO  18:32:04,112 - #29 >
INFO  18:32:04,112 - #48 5
INFO  18:32:04,112 - #43 )
INFO  18:32:04,112 - #46 {
INFO  18:32:04,112 - #20 goto
INFO  18:32:04,112 - #51 skip
INFO  18:32:04,112 - #38 ;
INFO  18:32:04,112 - #47 }
INFO  18:32:04,112 - #51 i
INFO  18:32:04,112 - #35 =
INFO  18:32:04,112 - #48 0
INFO  18:32:04,112 - #38 ;
INFO  18:32:04,112 - #9 do
INFO  18:32:04,112 - #46 {
INFO  18:32:04,112 - #51 val
INFO  18:32:04,113 - #41 .
INFO  18:32:04,113 - #51 putp
INFO  18:32:04,113 - #42 (
INFO  18:32:04,113 - #48 0
INFO  18:32:04,113 - #40 ,
INFO  18:32:04,113 - #51 i
INFO  18:32:04,113 - #43 )
INFO  18:32:04,113 - #38 ;
INFO  18:32:04,113 - #51 val
INFO  18:32:04,113 - #41 .
INFO  18:32:04,113 - #51 putn
INFO  18:32:04,113 - #42 (
INFO  18:32:04,113 - #48 0
INFO  18:32:04,113 - #40 ,
INFO  18:32:04,113 - #51 i
INFO  18:32:04,113 - #43 )
INFO  18:32:04,113 - #38 ;
INFO  18:32:04,113 - #51 i
INFO  18:32:04,113 - #36 ++
INFO  18:32:04,113 - #38 ;
INFO  18:32:04,113 - #47 }
INFO  18:32:04,113 - #10 while
INFO  18:32:04,113 - #42 (
INFO  18:32:04,113 - #51 i
INFO  18:32:04,114 - #31 <
INFO  18:32:04,114 - #51 size
INFO  18:32:04,114 - #43 )
INFO  18:32:04,114 - #38 ;
INFO  18:32:04,114 - #51 skip
INFO  18:32:04,114 - #39 :
INFO  18:32:04,114 - #51 f
INFO  18:32:04,114 - #42 (
INFO  18:32:04,114 - #51 c
INFO  18:32:04,116 - #40 ,
INFO  18:32:04,116 - #51 x
INFO  18:32:04,116 - #40 ,
INFO  18:32:04,116 - #51 i
INFO  18:32:04,116 - #43 )
INFO  18:32:04,116 - #38 ;
INFO  18:32:04,116 - #51 board
INFO  18:32:04,116 - #35 =
INFO  18:32:04,116 - #11 new
INFO  18:32:04,116 - #51 Board
INFO  18:32:04,116 - #38 ;
INFO  18:32:04,116 - #13 read
INFO  18:32:04,116 - #42 (
INFO  18:32:04,116 - #51 board
INFO  18:32:04,116 - #41 .
INFO  18:32:04,116 - #51 rows
INFO  18:32:04,116 - #43 )
INFO  18:32:04,116 - #38 ;
INFO  18:32:04,116 - #51 x
INFO  18:32:04,117 - #35 =
INFO  18:32:04,117 - #51 board
INFO  18:32:04,117 - #41 .
INFO  18:32:04,117 - #51 rows
INFO  18:32:04,117 - #38 ;
INFO  18:32:04,117 - #9 do
INFO  18:32:04,117 - #46 {
INFO  18:32:04,117 - #8 if
INFO  18:32:04,117 - #42 (
INFO  18:32:04,118 - #51 x
INFO  18:32:04,118 - #32 <=
INFO  18:32:04,118 - #48 0
INFO  18:32:04,118 - #43 )
INFO  18:32:04,118 - #3 break
INFO  18:32:04,118 - #38 ;
INFO  18:32:04,118 - #8 if
INFO  18:32:04,118 - #42 (
INFO  18:32:04,118 - #48 0
INFO  18:32:04,118 - #32 <=
INFO  18:32:04,118 - #51 x
INFO  18:32:04,118 - #33 &&
INFO  18:32:04,118 - #51 x
INFO  18:32:04,118 - #31 <
INFO  18:32:04,118 - #51 size
INFO  18:32:04,118 - #43 )
INFO  18:32:04,118 - #46 {
INFO  18:32:04,119 - #51 val
INFO  18:32:04,119 - #41 .
INFO  18:32:04,119 - #51 putp
INFO  18:32:04,119 - #42 (
INFO  18:32:04,119 - #51 val
INFO  18:32:04,119 - #41 .
INFO  18:32:04,119 - #51 getp
INFO  18:32:04,119 - #42 (
INFO  18:32:04,119 - #51 x
INFO  18:32:04,119 - #43 )
INFO  18:32:04,119 - #22 +
INFO  18:32:04,119 - #48 1
INFO  18:32:04,119 - #43 )
INFO  18:32:04,119 - #38 ;
INFO  18:32:04,120 - #47 }
INFO  18:32:04,120 - #6 else
INFO  18:32:04,120 - #8 if
INFO  18:32:04,120 - #42 (
INFO  18:32:04,120 - #23 -
INFO  18:32:04,120 - #51 size
INFO  18:32:04,120 - #31 <
INFO  18:32:04,120 - #51 c
INFO  18:32:04,120 - #33 &&
INFO  18:32:04,120 - #51 x
INFO  18:32:04,120 - #31 <
INFO  18:32:04,120 - #48 0
INFO  18:32:04,120 - #43 )
INFO  18:32:04,120 - #46 {
INFO  18:32:04,121 - #51 val
INFO  18:32:04,121 - #41 .
INFO  18:32:04,121 - #51 putn
INFO  18:32:04,121 - #42 (
INFO  18:32:04,121 - #51 val
INFO  18:32:04,121 - #41 .
INFO  18:32:04,121 - #51 getn
INFO  18:32:04,121 - #42 (
INFO  18:32:04,121 - #23 -
INFO  18:32:04,121 - #51 x
INFO  18:32:04,121 - #43 )
INFO  18:32:04,121 - #22 +
INFO  18:32:04,121 - #48 1
INFO  18:32:04,121 - #43 )
INFO  18:32:04,121 - #38 ;
INFO  18:32:04,121 - #47 }
INFO  18:32:04,121 - #13 read
INFO  18:32:04,121 - #42 (
INFO  18:32:04,122 - #51 x
INFO  18:32:04,122 - #43 )
INFO  18:32:04,122 - #38 ;
INFO  18:32:04,122 - #47 }
INFO  18:32:04,122 - #10 while
INFO  18:32:04,122 - #42 (
INFO  18:32:04,122 - #50 true
INFO  18:32:04,122 - #43 )
INFO  18:32:04,122 - #38 ;
INFO  18:32:04,122 - #47 }
INFO  18:32:04,122 - #47 }
