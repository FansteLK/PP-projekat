INFO  18:37:29,332 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  18:37:29,388 - #2 program
INFO  18:37:29,388 - #48 test302
INFO  18:37:29,388 - #8 const
INFO  18:37:29,389 - #48 int
INFO  18:37:29,389 - #48 jedan
INFO  18:37:29,390 - #35 =
INFO  18:37:29,390 - #50 1
INFO  18:37:29,390 - #38 ;
INFO  18:37:29,391 - #48 int
INFO  18:37:29,391 - #48 i
INFO  18:37:29,392 - #38 ;
INFO  18:37:29,393 - #48 bool
INFO  18:37:29,394 - #48 ibool
INFO  18:37:29,394 - #38 ;
INFO  18:37:29,394 - #48 int
INFO  18:37:29,394 - #48 niz2
INFO  18:37:29,394 - #38 ;
INFO  18:37:29,395 - #21 record
INFO  18:37:29,395 - #48 Test
INFO  18:37:29,395 - #46 {
INFO  18:37:29,396 - #48 int
INFO  18:37:29,399 - #48 niz
INFO  18:37:29,399 - #44 [
INFO  18:37:29,399 - #45 ]
INFO  18:37:29,399 - #38 ;
INFO  18:37:29,399 - #48 int
INFO  18:37:29,400 - #48 a
INFO  18:37:29,400 - #38 ;
INFO  18:37:29,400 - #47 }
INFO  18:37:29,400 - #48 Test
INFO  18:37:29,401 - #48 t1
INFO  18:37:29,401 - #40 ,
INFO  18:37:29,401 - #48 t2
INFO  18:37:29,401 - #38 ;
INFO  18:37:29,401 - #46 {
INFO  18:37:29,401 - #48 int
INFO  18:37:29,402 - #48 sum
INFO  18:37:29,402 - #42 (
INFO  18:37:29,402 - #48 int
INFO  18:37:29,402 - #48 z
INFO  18:37:29,402 - #40 ,
INFO  18:37:29,402 - #48 int
INFO  18:37:29,402 - #48 d
INFO  18:37:29,403 - #43 )
INFO  18:37:29,403 - #46 {
INFO  18:37:29,403 - #15 return
INFO  18:37:29,404 - #48 z
INFO  18:37:29,404 - #22 +
INFO  18:37:29,405 - #48 d
INFO  18:37:29,406 - #38 ;
INFO  18:37:29,406 - #47 }
INFO  18:37:29,406 - #48 int
INFO  18:37:29,407 - #48 inkrement
INFO  18:37:29,407 - #42 (
INFO  18:37:29,407 - #48 int
INFO  18:37:29,407 - #48 a
INFO  18:37:29,407 - #40 ,
INFO  18:37:29,407 - #48 int
INFO  18:37:29,407 - #48 inc
INFO  18:37:29,407 - #43 )
INFO  18:37:29,407 - #48 int
INFO  18:37:29,408 - #48 pom
INFO  18:37:29,408 - #38 ;
INFO  18:37:29,408 - #46 {
INFO  18:37:29,408 - #9 if
INFO  18:37:29,408 - #42 (
INFO  18:37:29,409 - #48 inc
INFO  18:37:29,409 - #27 ==
INFO  18:37:29,409 - #48 jedan
INFO  18:37:29,410 - #43 )
INFO  18:37:29,411 - #48 pom
INFO  18:37:29,411 - #35 =
INFO  18:37:29,411 - #50 1
INFO  18:37:29,412 - #38 ;
INFO  18:37:29,412 - #7 else
INFO  18:37:29,412 - #9 if
INFO  18:37:29,413 - #42 (
INFO  18:37:29,413 - #48 inc
INFO  18:37:29,413 - #27 ==
INFO  18:37:29,413 - #50 2
INFO  18:37:29,413 - #43 )
INFO  18:37:29,413 - #48 pom
INFO  18:37:29,413 - #35 =
INFO  18:37:29,413 - #48 a
INFO  18:37:29,413 - #38 ;
INFO  18:37:29,414 - #15 return
INFO  18:37:29,414 - #48 sum
INFO  18:37:29,414 - #42 (
INFO  18:37:29,414 - #48 a
INFO  18:37:29,414 - #40 ,
INFO  18:37:29,414 - #48 pom
INFO  18:37:29,414 - #43 )
INFO  18:37:29,415 - #38 ;
INFO  18:37:29,415 - #47 }
INFO  18:37:29,415 - #48 bool
INFO  18:37:29,415 - #48 verify
INFO  18:37:29,415 - #42 (
INFO  18:37:29,415 - #43 )
INFO  18:37:29,416 - #46 {
INFO  18:37:29,416 - #13 print
INFO  18:37:29,417 - #42 (
INFO  18:37:29,418 - #51 v
INFO  18:37:29,418 - #43 )
INFO  18:37:29,418 - #38 ;
INFO  18:37:29,418 - #15 return
INFO  18:37:29,419 - #49 false
INFO  18:37:29,419 - #38 ;
INFO  18:37:29,419 - #47 }
INFO  18:37:29,419 - #3 void
INFO  18:37:29,419 - #48 main
INFO  18:37:29,419 - #42 (
INFO  18:37:29,419 - #43 )
INFO  18:37:29,419 - #46 {
INFO  18:37:29,419 - #48 t1
INFO  18:37:29,419 - #35 =
INFO  18:37:29,419 - #12 new
INFO  18:37:29,419 - #48 Test
INFO  18:37:29,419 - #38 ;
INFO  18:37:29,420 - #48 t1
INFO  18:37:29,420 - #41 .
INFO  18:37:29,421 - #48 a
INFO  18:37:29,421 - #35 =
INFO  18:37:29,421 - #50 10
INFO  18:37:29,421 - #38 ;
INFO  18:37:29,421 - #14 read
INFO  18:37:29,421 - #42 (
INFO  18:37:29,421 - #48 t1
INFO  18:37:29,421 - #41 .
INFO  18:37:29,421 - #48 a
INFO  18:37:29,421 - #43 )
INFO  18:37:29,421 - #38 ;
INFO  18:37:29,421 - #13 print
INFO  18:37:29,421 - #42 (
INFO  18:37:29,421 - #48 t1
INFO  18:37:29,421 - #41 .
INFO  18:37:29,422 - #48 a
INFO  18:37:29,422 - #43 )
INFO  18:37:29,422 - #38 ;
INFO  18:37:29,422 - #47 }
INFO  18:37:29,422 - #47 }
INFO  18:37:29,429 - Program(
  ProgName(
   test302
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              NoDeclarations(
              ) [NoDeclarations]
              ConstDeclaration(
                ConstDecl(
                  Type(
                   int
                  ) [Type]
                  ConstDeclListDerived1(
                    SingleConstDeclaration(
                      ConstName(
                       jedan
                      ) [ConstName]
                      NumConst(
                       1
                      ) [NumConst]
                    ) [SingleConstDeclaration]
                  ) [ConstDeclListDerived1]
                ) [ConstDecl]
              ) [ConstDeclaration]
            ) [Declarations]
            VarDeclaration(
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                SingleVar(
                  SingleVarDeclaration(
                   i
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
              ) [VariableDeclaration]
            ) [VarDeclaration]
          ) [Declarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               bool
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 ibool
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               niz2
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Test
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                SingleVar(
                  SingleVarDeclaration(
                   niz
                    WithBrackets(
                    ) [WithBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 a
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    VarDeclaration(
      VariableDeclaration(
        Type(
         Test
        ) [Type]
        VarDeclarationList(
          SingleVar(
            SingleVarDeclaration(
             t1
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
          SingleVarDeclaration(
           t2
            NoBrackets(
            ) [NoBrackets]
          ) [SingleVarDeclaration]
        ) [VarDeclarationList]
      ) [VariableDeclaration]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             sum
            ) [MethodDeclType]
            FormParamLs(
              FormParams(
                SingleFormParam(
                  FormParameter(
                    Type(
                     int
                    ) [Type]
                   z
                    NoBrackets(
                    ) [NoBrackets]
                  ) [FormParameter]
                ) [SingleFormParam]
                FormParameter(
                  Type(
                   int
                  ) [Type]
                 d
                  NoBrackets(
                  ) [NoBrackets]
                ) [FormParameter]
              ) [FormParams]
            ) [FormParamLs]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                NoStatements(
                ) [NoStatements]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    Expression(
                      TermExpression(
                        SingleFactor(
                          VarFactor(
                            SingleDesignator(
                             z
                            ) [SingleDesignator]
                          ) [VarFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      AddopPlus(
                      ) [AddopPlus]
                      SingleFactor(
                        VarFactor(
                          SingleDesignator(
                           d
                          ) [SingleDesignator]
                        ) [VarFactor]
                      ) [SingleFactor]
                    ) [Expression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodDeclType(
            Type(
             int
            ) [Type]
           inkrement
          ) [MethodDeclType]
          FormParamLs(
            FormParams(
              SingleFormParam(
                FormParameter(
                  Type(
                   int
                  ) [Type]
                 a
                  NoBrackets(
                  ) [NoBrackets]
                ) [FormParameter]
              ) [SingleFormParam]
              FormParameter(
                Type(
                 int
                ) [Type]
               inc
                NoBrackets(
                ) [NoBrackets]
              ) [FormParameter]
            ) [FormParams]
          ) [FormParamLs]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 pom
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            StatementListNotEmpty(
              StatementListNotEmpty(
                NoStatements(
                ) [NoStatements]
                SingleStatementNoLabel(
                  MatchedStatement(
                    If(
                    ) [If]
                    SingleCondTerm(
                      SingleCondFact(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              VarFactor(
                                SingleDesignator(
                                 inc
                                ) [SingleDesignator]
                              ) [VarFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopEqual(
                          ) [RelopEqual]
                          TermExpression(
                            SingleFactor(
                              VarFactor(
                                SingleDesignator(
                                 jedan
                                ) [SingleDesignator]
                              ) [VarFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFact]
                    ) [SingleCondTerm]
                    SingleStatementNoLabel(
                      DesignatorStmt(
                        DesignatorStatmentNoError(
                          SingleDesignator(
                           pom
                          ) [SingleDesignator]
                          DesignatorAssign(
                            Assignop(
                            ) [Assignop]
                            TermExpression(
                              SingleFactor(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactor]
                            ) [TermExpression]
                          ) [DesignatorAssign]
                        ) [DesignatorStatmentNoError]
                      ) [DesignatorStmt]
                    ) [SingleStatementNoLabel]
                    Else(
                    ) [Else]
                    SingleStatementNoLabel(
                      UnmatchedStatement(
                        If(
                        ) [If]
                        SingleCondTerm(
                          SingleCondFact(
                            ConditionFact(
                              TermExpression(
                                SingleFactor(
                                  VarFactor(
                                    SingleDesignator(
                                     inc
                                    ) [SingleDesignator]
                                  ) [VarFactor]
                                ) [SingleFactor]
                              ) [TermExpression]
                              RelopEqual(
                              ) [RelopEqual]
                              TermExpression(
                                SingleFactor(
                                  NumConstFactor(
                                   2
                                  ) [NumConstFactor]
                                ) [SingleFactor]
                              ) [TermExpression]
                            ) [ConditionFact]
                          ) [SingleCondFact]
                        ) [SingleCondTerm]
                        SingleStatementNoLabel(
                          DesignatorStmt(
                            DesignatorStatmentNoError(
                              SingleDesignator(
                               pom
                              ) [SingleDesignator]
                              DesignatorAssign(
                                Assignop(
                                ) [Assignop]
                                TermExpression(
                                  SingleFactor(
                                    VarFactor(
                                      SingleDesignator(
                                       a
                                      ) [SingleDesignator]
                                    ) [VarFactor]
                                  ) [SingleFactor]
                                ) [TermExpression]
                              ) [DesignatorAssign]
                            ) [DesignatorStatmentNoError]
                          ) [DesignatorStmt]
                        ) [SingleStatementNoLabel]
                      ) [UnmatchedStatement]
                    ) [SingleStatementNoLabel]
                  ) [MatchedStatement]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              SingleStatementNoLabel(
                ReturnExprStmt(
                  TermExpression(
                    SingleFactor(
                      FunctionCall(
                        SingleDesignator(
                         sum
                        ) [SingleDesignator]
                        FactorActPars(
                          ActualParsList(
                            ActualPars(
                              SingleExpr(
                                TermExpression(
                                  SingleFactor(
                                    VarFactor(
                                      SingleDesignator(
                                       a
                                      ) [SingleDesignator]
                                    ) [VarFactor]
                                  ) [SingleFactor]
                                ) [TermExpression]
                              ) [SingleExpr]
                              TermExpression(
                                SingleFactor(
                                  VarFactor(
                                    SingleDesignator(
                                     pom
                                    ) [SingleDesignator]
                                  ) [VarFactor]
                                ) [SingleFactor]
                              ) [TermExpression]
                            ) [ActualPars]
                          ) [ActualParsList]
                        ) [FactorActPars]
                      ) [FunctionCall]
                    ) [SingleFactor]
                  ) [TermExpression]
                ) [ReturnExprStmt]
              ) [SingleStatementNoLabel]
            ) [StatementListNotEmpty]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodDeclType(
          Type(
           bool
          ) [Type]
         verify
        ) [MethodDeclType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          StatementListNotEmpty(
            StatementListNotEmpty(
              NoStatements(
              ) [NoStatements]
              SingleStatementNoLabel(
                PrintStmt(
                  TermExpression(
                    SingleFactor(
                      CharConstFactor(
                       v
                      ) [CharConstFactor]
                    ) [SingleFactor]
                  ) [TermExpression]
                  NoNumConstPrint(
                  ) [NoNumConstPrint]
                ) [PrintStmt]
              ) [SingleStatementNoLabel]
            ) [StatementListNotEmpty]
            SingleStatementNoLabel(
              ReturnExprStmt(
                TermExpression(
                  SingleFactor(
                    BoolConstFactor(
                     false
                    ) [BoolConstFactor]
                  ) [SingleFactor]
                ) [TermExpression]
              ) [ReturnExprStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      NoVarDecls(
      ) [NoVarDecls]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            StatementListNotEmpty(
              StatementListNotEmpty(
                NoStatements(
                ) [NoStatements]
                SingleStatementNoLabel(
                  DesignatorStmt(
                    DesignatorStatmentNoError(
                      SingleDesignator(
                       t1
                      ) [SingleDesignator]
                      DesignatorAssign(
                        Assignop(
                        ) [Assignop]
                        TermExpression(
                          SingleFactor(
                            NewFactor(
                              ClassName(
                                Type(
                                 Test
                                ) [Type]
                              ) [ClassName]
                              FactorNewNoExpr(
                              ) [FactorNewNoExpr]
                            ) [NewFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [DesignatorAssign]
                    ) [DesignatorStatmentNoError]
                  ) [DesignatorStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              SingleStatementNoLabel(
                DesignatorStmt(
                  DesignatorStatmentNoError(
                    DesignatorDot(
                      SingleDesignator(
                       t1
                      ) [SingleDesignator]
                     a
                    ) [DesignatorDot]
                    DesignatorAssign(
                      Assignop(
                      ) [Assignop]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           10
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [DesignatorAssign]
                  ) [DesignatorStatmentNoError]
                ) [DesignatorStmt]
              ) [SingleStatementNoLabel]
            ) [StatementListNotEmpty]
            SingleStatementNoLabel(
              ReadStmt(
                DesignatorDot(
                  SingleDesignator(
                   t1
                  ) [SingleDesignator]
                 a
                ) [DesignatorDot]
              ) [ReadStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            PrintStmt(
              TermExpression(
                SingleFactor(
                  VarFactor(
                    DesignatorDot(
                      SingleDesignator(
                       t1
                      ) [SingleDesignator]
                     a
                    ) [DesignatorDot]
                  ) [VarFactor]
                ) [SingleFactor]
              ) [TermExpression]
              NoNumConstPrint(
              ) [NoNumConstPrint]
            ) [PrintStmt]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  18:37:29,430 - ===================================
INFO  18:37:29,434 - Deklarisana konstanta jedan na liniji 5
INFO  18:37:29,434 - Deklarisana promenljiva i na liniji 7
INFO  18:37:29,434 - Deklarisana promenljiva ibool na liniji 8
INFO  18:37:29,434 - Deklarisana promenljiva niz2 na liniji 10
INFO  18:37:29,434 - Deklarisan rekord Test na liniji 12
INFO  18:37:29,434 - Deklarisana niz promenljiva niz na liniji 13
INFO  18:37:29,434 - Deklarisana promenljiva a na liniji 14
INFO  18:37:29,434 - Deklarisana promenljiva t1 na liniji 17
INFO  18:37:29,435 - Deklarisana promenljiva t2 na liniji 17
INFO  18:37:29,435 - Obradjuje se funkcija sum na liniji 21
INFO  18:37:29,435 - Deklarisana parameter funkcije z na liniji 21
INFO  18:37:29,435 - Deklarisana parameter funkcije d na liniji 21
INFO  18:37:29,435 - Pristupa se promenljivoj z na liniji 23
INFO  18:37:29,435 - Pristupa se promenljivoj d na liniji 23
INFO  18:37:29,435 - Obradjuje se funkcija inkrement na liniji 26
INFO  18:37:29,435 - Deklarisana parameter funkcije a na liniji 26
INFO  18:37:29,436 - Deklarisana parameter funkcije inc na liniji 26
INFO  18:37:29,436 - Deklarisana promenljiva pom na liniji 27
INFO  18:37:29,436 - Pristupa se promenljivoj inc na liniji 29
INFO  18:37:29,436 - Pristupa se promenljivoj jedan na liniji 29
INFO  18:37:29,436 - Pristupa se promenljivoj pom na liniji 29
INFO  18:37:29,436 - Pristupa se promenljivoj inc na liniji 30
INFO  18:37:29,436 - Pristupa se promenljivoj pom na liniji 30
INFO  18:37:29,436 - Pristupa se promenljivoj a na liniji 30
INFO  18:37:29,436 - Pristupa se promenljivoj a na liniji 32
INFO  18:37:29,436 - Pristupa se promenljivoj pom na liniji 32
INFO  18:37:29,436 - Pronadjen poziv funkcije sum na liniji 32
INFO  18:37:29,436 - Obradjuje se funkcija verify na liniji 35
INFO  18:37:29,437 - Obradjuje se funkcija main na liniji 40
INFO  18:37:29,437 - Pristupa se promenljivoj t1 na liniji 43
INFO  18:37:29,437 - Kreiran objekat klase Test na liniji 43
INFO  18:37:29,437 - Pristupa se polju a klase t1 na liniji 44
INFO  18:37:29,437 - Pristupa se polju a klase t1 na liniji 45
INFO  18:37:29,437 - Pristupa se polju a klase t1 na liniji 46
INFO  18:37:29,437 -  Deklarisanih promenljivih ima = 7
INFO  18:37:29,437 - ===================================
INFO  18:37:29,444 -  broj polja klase Test 2 2
INFO  18:37:29,444 - Parsiranje uspesno zavrseno!
