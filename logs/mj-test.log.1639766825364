INFO  18:41:10,450 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  18:41:10,670 - #2 program
INFO  18:41:10,670 - #51 p
INFO  18:41:10,670 - #7 const
INFO  18:41:10,671 - #51 int
INFO  18:41:10,671 - #51 size
INFO  18:41:10,673 - #35 =
INFO  18:41:10,673 - #48 10
INFO  18:41:10,674 - #38 ;
INFO  18:41:10,678 - #4 class
INFO  18:41:10,681 - #51 Table
INFO  18:41:10,681 - #46 {
INFO  18:41:10,683 - #51 int
INFO  18:41:10,684 - #51 pos
INFO  18:41:10,685 - #44 [
INFO  18:41:10,685 - #45 ]
INFO  18:41:10,685 - #40 ,
INFO  18:41:10,688 - #51 neg
INFO  18:41:10,688 - #44 [
INFO  18:41:10,688 - #45 ]
INFO  18:41:10,688 - #38 ;
INFO  18:41:10,689 - #46 {
INFO  18:41:10,689 - #15 void
INFO  18:41:10,689 - #51 putp
INFO  18:41:10,689 - #42 (
INFO  18:41:10,689 - #51 int
INFO  18:41:10,689 - #51 a
INFO  18:41:10,689 - #40 ,
INFO  18:41:10,691 - #51 int
INFO  18:41:10,692 - #51 idx
INFO  18:41:10,692 - #43 )
INFO  18:41:10,692 - #46 {
INFO  18:41:10,692 - #51 thi
INFO  18:41:10,694 - #41 .
INFO  18:41:10,694 - #51 pos
INFO  18:41:10,694 - #44 [
INFO  18:41:10,695 - #51 idx
INFO  18:41:10,695 - #45 ]
INFO  18:41:10,695 - #35 =
INFO  18:41:10,695 - #51 a
INFO  18:41:10,697 - #38 ;
INFO  18:41:10,700 - #47 }
INFO  18:41:10,700 - #15 void
INFO  18:41:10,701 - #51 putn
INFO  18:41:10,703 - #42 (
INFO  18:41:10,703 - #51 int
INFO  18:41:10,703 - #51 a
INFO  18:41:10,703 - #40 ,
INFO  18:41:10,703 - #51 int
INFO  18:41:10,704 - #51 idx
INFO  18:41:10,704 - #43 )
INFO  18:41:10,704 - #46 {
INFO  18:41:10,704 - #51 thi
INFO  18:41:10,704 - #41 .
INFO  18:41:10,704 - #51 neg
INFO  18:41:10,704 - #44 [
INFO  18:41:10,704 - #51 idx
INFO  18:41:10,704 - #45 ]
INFO  18:41:10,704 - #35 =
INFO  18:41:10,704 - #51 a
INFO  18:41:10,704 - #38 ;
INFO  18:41:10,704 - #47 }
INFO  18:41:10,704 - #51 int
INFO  18:41:10,705 - #51 getp
INFO  18:41:10,705 - #42 (
INFO  18:41:10,705 - #51 int
INFO  18:41:10,705 - #51 idx
INFO  18:41:10,705 - #43 )
INFO  18:41:10,705 - #46 {
INFO  18:41:10,705 - #14 return
INFO  18:41:10,705 - #51 pos
INFO  18:41:10,705 - #44 [
INFO  18:41:10,705 - #51 idx
INFO  18:41:10,705 - #45 ]
INFO  18:41:10,705 - #38 ;
INFO  18:41:10,705 - #47 }
INFO  18:41:10,705 - #51 int
INFO  18:41:10,705 - #51 getn
INFO  18:41:10,706 - #42 (
INFO  18:41:10,706 - #51 int
INFO  18:41:10,706 - #51 idx
INFO  18:41:10,706 - #43 )
INFO  18:41:10,706 - #46 {
INFO  18:41:10,706 - #14 return
INFO  18:41:10,706 - #51 neg
INFO  18:41:10,706 - #44 [
INFO  18:41:10,706 - #51 idx
INFO  18:41:10,706 - #45 ]
INFO  18:41:10,706 - #38 ;
INFO  18:41:10,706 - #47 }
INFO  18:41:10,706 - #47 }
INFO  18:41:10,706 - #47 }
INFO  18:41:10,707 - #21 record
INFO  18:41:10,709 - #51 Board
INFO  18:41:10,709 - #46 {
INFO  18:41:10,710 - #51 int
INFO  18:41:10,710 - #51 rows
INFO  18:41:10,710 - #40 ,
INFO  18:41:10,710 - #51 columns
INFO  18:41:10,710 - #38 ;
INFO  18:41:10,710 - #47 }
INFO  18:41:10,710 - #51 Table
INFO  18:41:10,713 - #51 val
INFO  18:41:10,713 - #38 ;
INFO  18:41:10,713 - #51 Table
INFO  18:41:10,713 - #51 x
INFO  18:41:10,713 - #40 ,
INFO  18:41:10,713 - #40 ,
ERROR 18:41:10,713 - 
Sintaksna greska na liniji 16
INFO  18:41:10,713 - #51 y
INFO  18:41:10,713 - #38 ;
INFO  18:41:10,713 - #51 Board
INFO  18:41:10,714 - #51 board
INFO  18:41:10,714 - #38 ;
INFO  18:41:10,714 - #46 {
INFO  18:41:10,714 - #15 void
INFO  18:41:10,714 - #51 f
INFO  18:41:10,714 - #42 (
INFO  18:41:10,714 - #51 char
INFO  18:41:10,714 - #51 ch
INFO  18:41:10,714 - #40 ,
INFO  18:41:10,714 - #51 int
INFO  18:41:10,714 - #51 a
INFO  18:41:10,714 - #40 ,
INFO  18:41:10,714 - #51 int
INFO  18:41:10,715 - #51 arg
INFO  18:41:10,715 - #43 )
INFO  18:41:10,715 - #51 int
INFO  18:41:10,715 - #51 x
INFO  18:41:10,715 - #38 ;
INFO  18:41:10,715 - #46 {
INFO  18:41:10,715 - #51 x
INFO  18:41:10,715 - #35 =
INFO  18:41:10,715 - #51 arg
INFO  18:41:10,715 - #38 ;
INFO  18:41:10,715 - #47 }
INFO  18:41:10,715 - #15 void
INFO  18:41:10,715 - #51 main
INFO  18:41:10,715 - #42 (
INFO  18:41:10,715 - #43 )
INFO  18:41:10,715 - #51 int
INFO  18:41:10,715 - #51 x
INFO  18:41:10,716 - #40 ,
INFO  18:41:10,716 - #51 i
INFO  18:41:10,716 - #38 ;
INFO  18:41:10,716 - #51 char
INFO  18:41:10,716 - #51 c
INFO  18:41:10,716 - #38 ;
INFO  18:41:10,716 - #46 {
INFO  18:41:10,716 - #51 val
INFO  18:41:10,716 - #35 =
INFO  18:41:10,716 - #11 new
INFO  18:41:10,716 - #51 Table
INFO  18:41:10,716 - #38 ;
INFO  18:41:10,716 - #51 val
INFO  18:41:10,716 - #41 .
INFO  18:41:10,716 - #51 pos
INFO  18:41:10,716 - #35 =
INFO  18:41:10,716 - #11 new
INFO  18:41:10,716 - #51 int
INFO  18:41:10,716 - #44 [
INFO  18:41:10,716 - #51 size
INFO  18:41:10,717 - #45 ]
INFO  18:41:10,717 - #38 ;
INFO  18:41:10,717 - #51 val
INFO  18:41:10,718 - #41 .
INFO  18:41:10,718 - #51 neg
INFO  18:41:10,718 - #35 =
INFO  18:41:10,718 - #11 new
INFO  18:41:10,718 - #51 int
INFO  18:41:10,718 - #44 [
INFO  18:41:10,719 - #51 size
INFO  18:41:10,719 - #45 ]
INFO  18:41:10,719 - #38 ;
INFO  18:41:10,719 - #13 read
INFO  18:41:10,719 - #42 (
INFO  18:41:10,719 - #51 x
INFO  18:41:10,719 - #43 )
INFO  18:41:10,719 - #38 ;
INFO  18:41:10,719 - #8 if
INFO  18:41:10,719 - #42 (
INFO  18:41:10,719 - #51 x
INFO  18:41:10,719 - #29 >
INFO  18:41:10,719 - #48 5
INFO  18:41:10,719 - #43 )
INFO  18:41:10,719 - #46 {
INFO  18:41:10,719 - #20 goto
INFO  18:41:10,719 - #51 skip
INFO  18:41:10,719 - #38 ;
INFO  18:41:10,719 - #47 }
INFO  18:41:10,719 - #51 i
INFO  18:41:10,719 - #35 =
INFO  18:41:10,720 - #48 0
INFO  18:41:10,720 - #38 ;
INFO  18:41:10,720 - #9 do
INFO  18:41:10,720 - #46 {
INFO  18:41:10,720 - #51 val
INFO  18:41:10,720 - #41 .
INFO  18:41:10,720 - #51 putp
INFO  18:41:10,720 - #42 (
INFO  18:41:10,720 - #48 0
INFO  18:41:10,720 - #40 ,
INFO  18:41:10,720 - #51 i
INFO  18:41:10,720 - #43 )
INFO  18:41:10,720 - #38 ;
INFO  18:41:10,720 - #51 val
INFO  18:41:10,720 - #41 .
INFO  18:41:10,720 - #51 putn
INFO  18:41:10,720 - #42 (
INFO  18:41:10,720 - #48 0
INFO  18:41:10,720 - #40 ,
INFO  18:41:10,720 - #51 i
INFO  18:41:10,720 - #43 )
INFO  18:41:10,720 - #38 ;
INFO  18:41:10,720 - #51 i
INFO  18:41:10,720 - #36 ++
INFO  18:41:10,720 - #38 ;
INFO  18:41:10,720 - #47 }
INFO  18:41:10,720 - #10 while
INFO  18:41:10,721 - #42 (
INFO  18:41:10,721 - #51 i
INFO  18:41:10,721 - #31 <
INFO  18:41:10,721 - #51 size
INFO  18:41:10,721 - #43 )
INFO  18:41:10,721 - #38 ;
INFO  18:41:10,721 - #51 skip
INFO  18:41:10,721 - #39 :
INFO  18:41:10,721 - #51 f
INFO  18:41:10,721 - #42 (
INFO  18:41:10,721 - #51 c
INFO  18:41:10,721 - #40 ,
INFO  18:41:10,721 - #51 x
INFO  18:41:10,722 - #40 ,
INFO  18:41:10,722 - #51 i
INFO  18:41:10,722 - #43 )
INFO  18:41:10,722 - #38 ;
INFO  18:41:10,722 - #51 board
INFO  18:41:10,722 - #35 =
INFO  18:41:10,722 - #11 new
INFO  18:41:10,722 - #51 Board
INFO  18:41:10,722 - #38 ;
INFO  18:41:10,722 - #13 read
INFO  18:41:10,722 - #42 (
INFO  18:41:10,722 - #51 board
INFO  18:41:10,722 - #41 .
INFO  18:41:10,722 - #51 rows
INFO  18:41:10,722 - #43 )
INFO  18:41:10,722 - #38 ;
INFO  18:41:10,722 - #51 x
INFO  18:41:10,722 - #35 =
INFO  18:41:10,722 - #51 board
INFO  18:41:10,722 - #41 .
INFO  18:41:10,723 - #51 rows
INFO  18:41:10,723 - #38 ;
INFO  18:41:10,723 - #9 do
INFO  18:41:10,723 - #46 {
INFO  18:41:10,723 - #8 if
INFO  18:41:10,723 - #42 (
INFO  18:41:10,723 - #51 x
INFO  18:41:10,723 - #32 <=
INFO  18:41:10,723 - #48 0
INFO  18:41:10,723 - #43 )
INFO  18:41:10,723 - #3 break
INFO  18:41:10,723 - #38 ;
INFO  18:41:10,723 - #8 if
INFO  18:41:10,723 - #42 (
INFO  18:41:10,723 - #48 0
INFO  18:41:10,723 - #32 <=
INFO  18:41:10,723 - #51 x
INFO  18:41:10,723 - #33 &&
INFO  18:41:10,724 - #51 x
INFO  18:41:10,724 - #31 <
INFO  18:41:10,724 - #51 size
INFO  18:41:10,724 - #43 )
INFO  18:41:10,724 - #46 {
INFO  18:41:10,724 - #51 val
INFO  18:41:10,724 - #41 .
INFO  18:41:10,724 - #51 putp
INFO  18:41:10,724 - #42 (
INFO  18:41:10,724 - #51 val
INFO  18:41:10,724 - #41 .
INFO  18:41:10,724 - #51 getp
INFO  18:41:10,724 - #42 (
INFO  18:41:10,724 - #51 x
INFO  18:41:10,724 - #43 )
INFO  18:41:10,724 - #22 +
INFO  18:41:10,724 - #48 1
INFO  18:41:10,724 - #43 )
INFO  18:41:10,724 - #38 ;
INFO  18:41:10,724 - #47 }
INFO  18:41:10,724 - #6 else
INFO  18:41:10,724 - #8 if
INFO  18:41:10,724 - #42 (
INFO  18:41:10,724 - #23 -
INFO  18:41:10,724 - #51 size
INFO  18:41:10,724 - #31 <
INFO  18:41:10,724 - #51 c
INFO  18:41:10,725 - #33 &&
INFO  18:41:10,725 - #51 x
INFO  18:41:10,725 - #31 <
INFO  18:41:10,725 - #48 0
INFO  18:41:10,725 - #43 )
INFO  18:41:10,725 - #46 {
INFO  18:41:10,725 - #51 val
INFO  18:41:10,725 - #41 .
INFO  18:41:10,725 - #51 putn
INFO  18:41:10,725 - #42 (
INFO  18:41:10,725 - #51 val
INFO  18:41:10,725 - #41 .
INFO  18:41:10,725 - #51 getn
INFO  18:41:10,725 - #42 (
INFO  18:41:10,725 - #23 -
INFO  18:41:10,725 - #51 x
INFO  18:41:10,725 - #43 )
INFO  18:41:10,725 - #22 +
INFO  18:41:10,725 - #48 1
INFO  18:41:10,725 - #43 )
INFO  18:41:10,725 - #38 ;
INFO  18:41:10,725 - #47 }
INFO  18:41:10,725 - #13 read
INFO  18:41:10,725 - #42 (
INFO  18:41:10,726 - #51 x
INFO  18:41:10,726 - #43 )
INFO  18:41:10,726 - #38 ;
INFO  18:41:10,726 - #47 }
INFO  18:41:10,726 - #10 while
INFO  18:41:10,726 - #42 (
INFO  18:41:10,726 - #50 true
INFO  18:41:10,726 - #43 )
INFO  18:41:10,726 - #38 ;
INFO  18:41:10,726 - #47 }
INFO  18:41:10,726 - #47 }
ERROR 18:41:10,726 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 57
