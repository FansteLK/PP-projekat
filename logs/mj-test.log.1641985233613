INFO  00:40:12,267 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  00:40:12,358 - #2 program
INFO  00:40:12,358 - #48 p
INFO  00:40:12,358 - #48 int
INFO  00:40:12,360 - #48 x
INFO  00:40:12,361 - #38 ;
INFO  00:40:12,363 - #48 int
INFO  00:40:12,363 - #48 y
INFO  00:40:12,363 - #38 ;
INFO  00:40:12,364 - #21 record
INFO  00:40:12,364 - #48 Rekord
INFO  00:40:12,364 - #46 {
INFO  00:40:12,365 - #48 int
INFO  00:40:12,366 - #48 d
INFO  00:40:12,366 - #40 ,
INFO  00:40:12,366 - #48 c
INFO  00:40:12,366 - #38 ;
INFO  00:40:12,367 - #47 }
INFO  00:40:12,367 - #5 class
INFO  00:40:12,368 - #48 Klasa
INFO  00:40:12,368 - #46 {
INFO  00:40:12,370 - #48 int
INFO  00:40:12,370 - #48 b
INFO  00:40:12,370 - #40 ,
INFO  00:40:12,371 - #48 a
INFO  00:40:12,371 - #40 ,
INFO  00:40:12,371 - #48 g
INFO  00:40:12,371 - #38 ;
INFO  00:40:12,371 - #46 {
INFO  00:40:12,371 - #47 }
INFO  00:40:12,372 - #47 }
INFO  00:40:12,373 - #46 {
INFO  00:40:12,373 - #48 int
INFO  00:40:12,374 - #48 nesto
INFO  00:40:12,374 - #42 (
INFO  00:40:12,374 - #43 )
INFO  00:40:12,375 - #46 {
INFO  00:40:12,376 - #13 print
INFO  00:40:12,377 - #42 (
INFO  00:40:12,377 - #51 c
INFO  00:40:12,378 - #43 )
INFO  00:40:12,379 - #38 ;
INFO  00:40:12,379 - #13 print
INFO  00:40:12,379 - #42 (
INFO  00:40:12,379 - #50 5
INFO  00:40:12,379 - #43 )
INFO  00:40:12,380 - #38 ;
INFO  00:40:12,380 - #15 return
INFO  00:40:12,380 - #50 2
INFO  00:40:12,380 - #38 ;
INFO  00:40:12,380 - #47 }
INFO  00:40:12,380 - #3 void
INFO  00:40:12,382 - #48 kita2
INFO  00:40:12,382 - #42 (
INFO  00:40:12,382 - #43 )
INFO  00:40:12,382 - #46 {
INFO  00:40:12,382 - #47 }
INFO  00:40:12,382 - #3 void
INFO  00:40:12,382 - #48 kita
INFO  00:40:12,383 - #42 (
INFO  00:40:12,383 - #43 )
INFO  00:40:12,383 - #46 {
INFO  00:40:12,383 - #47 }
INFO  00:40:12,383 - #3 void
INFO  00:40:12,383 - #48 main
INFO  00:40:12,383 - #42 (
INFO  00:40:12,383 - #43 )
INFO  00:40:12,383 - #48 int
INFO  00:40:12,384 - #48 x
INFO  00:40:12,384 - #44 [
INFO  00:40:12,384 - #45 ]
INFO  00:40:12,384 - #40 ,
INFO  00:40:12,385 - #48 i
INFO  00:40:12,385 - #40 ,
INFO  00:40:12,385 - #48 l
INFO  00:40:12,385 - #38 ;
INFO  00:40:12,385 - #48 char
INFO  00:40:12,385 - #48 c
INFO  00:40:12,385 - #38 ;
INFO  00:40:12,385 - #48 Rekord
INFO  00:40:12,385 - #48 rek
INFO  00:40:12,386 - #38 ;
INFO  00:40:12,386 - #48 Klasa
INFO  00:40:12,386 - #48 neka
INFO  00:40:12,386 - #38 ;
INFO  00:40:12,386 - #46 {
INFO  00:40:12,386 - #48 i
INFO  00:40:12,386 - #35 =
INFO  00:40:12,388 - #50 0
INFO  00:40:12,388 - #38 ;
INFO  00:40:12,389 - #9 if
INFO  00:40:12,389 - #42 (
INFO  00:40:12,390 - #49 false
INFO  00:40:12,391 - #43 )
INFO  00:40:12,392 - #46 {
INFO  00:40:12,392 - #13 print
INFO  00:40:12,392 - #42 (
INFO  00:40:12,392 - #50 1
INFO  00:40:12,392 - #43 )
INFO  00:40:12,393 - #38 ;
INFO  00:40:12,393 - #47 }
INFO  00:40:12,393 - #7 else
INFO  00:40:12,393 - #46 {
INFO  00:40:12,394 - #13 print
INFO  00:40:12,394 - #42 (
INFO  00:40:12,394 - #50 2
INFO  00:40:12,394 - #43 )
INFO  00:40:12,395 - #38 ;
INFO  00:40:12,395 - #47 }
INFO  00:40:12,395 - #47 }
INFO  00:40:12,395 - #47 }
INFO  00:40:12,404 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              SingleCondTerm(
                SingleCondFact(
                  SingleCondFactJMP(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           false
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFactJMP]
                ) [SingleCondFact]
              ) [SingleCondTerm]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  00:40:12,404 - ===================================
INFO  00:41:45,163 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  00:41:45,221 - #2 program
INFO  00:41:45,222 - #48 p
INFO  00:41:45,222 - #48 int
INFO  00:41:45,223 - #48 x
INFO  00:41:45,223 - #38 ;
INFO  00:41:45,224 - #48 int
INFO  00:41:45,224 - #48 y
INFO  00:41:45,224 - #38 ;
INFO  00:41:45,224 - #21 record
INFO  00:41:45,225 - #48 Rekord
INFO  00:41:45,225 - #46 {
INFO  00:41:45,225 - #48 int
INFO  00:41:45,226 - #48 d
INFO  00:41:45,226 - #40 ,
INFO  00:41:45,226 - #48 c
INFO  00:41:45,226 - #38 ;
INFO  00:41:45,226 - #47 }
INFO  00:41:45,226 - #5 class
INFO  00:41:45,227 - #48 Klasa
INFO  00:41:45,227 - #46 {
INFO  00:41:45,228 - #48 int
INFO  00:41:45,228 - #48 b
INFO  00:41:45,228 - #40 ,
INFO  00:41:45,229 - #48 a
INFO  00:41:45,229 - #40 ,
INFO  00:41:45,229 - #48 g
INFO  00:41:45,229 - #38 ;
INFO  00:41:45,229 - #46 {
INFO  00:41:45,229 - #47 }
INFO  00:41:45,229 - #47 }
INFO  00:41:45,230 - #46 {
INFO  00:41:45,230 - #48 int
INFO  00:41:45,230 - #48 nesto
INFO  00:41:45,231 - #42 (
INFO  00:41:45,231 - #43 )
INFO  00:41:45,232 - #46 {
INFO  00:41:45,232 - #13 print
INFO  00:41:45,234 - #42 (
INFO  00:41:45,234 - #51 c
INFO  00:41:45,234 - #43 )
INFO  00:41:45,235 - #38 ;
INFO  00:41:45,235 - #13 print
INFO  00:41:45,236 - #42 (
INFO  00:41:45,236 - #50 5
INFO  00:41:45,236 - #43 )
INFO  00:41:45,236 - #38 ;
INFO  00:41:45,236 - #15 return
INFO  00:41:45,236 - #50 2
INFO  00:41:45,236 - #38 ;
INFO  00:41:45,236 - #47 }
INFO  00:41:45,236 - #3 void
INFO  00:41:45,237 - #48 kita2
INFO  00:41:45,237 - #42 (
INFO  00:41:45,237 - #43 )
INFO  00:41:45,237 - #46 {
INFO  00:41:45,237 - #47 }
INFO  00:41:45,237 - #3 void
INFO  00:41:45,237 - #48 kita
INFO  00:41:45,237 - #42 (
INFO  00:41:45,237 - #43 )
INFO  00:41:45,237 - #46 {
INFO  00:41:45,238 - #47 }
INFO  00:41:45,238 - #3 void
INFO  00:41:45,238 - #48 main
INFO  00:41:45,238 - #42 (
INFO  00:41:45,238 - #43 )
INFO  00:41:45,238 - #48 int
INFO  00:41:45,238 - #48 x
INFO  00:41:45,238 - #44 [
INFO  00:41:45,238 - #45 ]
INFO  00:41:45,238 - #40 ,
INFO  00:41:45,239 - #48 i
INFO  00:41:45,239 - #40 ,
INFO  00:41:45,239 - #48 l
INFO  00:41:45,239 - #38 ;
INFO  00:41:45,239 - #48 char
INFO  00:41:45,239 - #48 c
INFO  00:41:45,239 - #38 ;
INFO  00:41:45,239 - #48 Rekord
INFO  00:41:45,239 - #48 rek
INFO  00:41:45,239 - #38 ;
INFO  00:41:45,239 - #48 Klasa
INFO  00:41:45,239 - #48 neka
INFO  00:41:45,239 - #38 ;
INFO  00:41:45,239 - #46 {
INFO  00:41:45,239 - #48 i
INFO  00:41:45,239 - #35 =
INFO  00:41:45,241 - #50 0
INFO  00:41:45,241 - #38 ;
INFO  00:41:45,241 - #9 if
INFO  00:41:45,241 - #42 (
INFO  00:41:45,242 - #49 false
INFO  00:41:45,242 - #43 )
INFO  00:41:45,243 - #46 {
INFO  00:41:45,243 - #13 print
INFO  00:41:45,243 - #42 (
INFO  00:41:45,243 - #50 1
INFO  00:41:45,243 - #43 )
INFO  00:41:45,243 - #38 ;
INFO  00:41:45,243 - #47 }
INFO  00:41:45,243 - #7 else
INFO  00:41:45,243 - #46 {
INFO  00:41:45,244 - #13 print
INFO  00:41:45,244 - #42 (
INFO  00:41:45,244 - #50 2
INFO  00:41:45,244 - #43 )
INFO  00:41:45,244 - #38 ;
INFO  00:41:45,244 - #47 }
INFO  00:41:45,244 - #47 }
INFO  00:41:45,244 - #47 }
INFO  00:41:45,250 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              SingleCondTerm(
                SingleCondFact(
                  SingleCondFactJMP(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           false
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFactJMP]
                ) [SingleCondFact]
              ) [SingleCondTerm]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  00:41:45,251 - ===================================
INFO  00:41:45,254 - Deklarisana promenljiva x na liniji 2
INFO  00:41:45,254 - Deklarisana promenljiva y na liniji 2
INFO  00:41:45,254 - Deklarisan rekord Rekord na liniji 3
INFO  00:41:45,254 - Deklarisana promenljiva d na liniji 5
INFO  00:41:45,254 - Deklarisana promenljiva c na liniji 5
INFO  00:41:45,255 - Deklarisana  klasa Klasa na liniji 7
INFO  00:41:45,255 - Deklarisana poljeb na liniji 9
INFO  00:41:45,255 - Deklarisana poljeb na liniji 9
INFO  00:41:45,255 - Deklarisana poljea na liniji 9
INFO  00:41:45,255 - Deklarisana poljea na liniji 9
INFO  00:41:45,255 - Deklarisana poljeg na liniji 9
INFO  00:41:45,255 - Deklarisana poljeg na liniji 9
INFO  00:41:45,255 - Obradjuje se funkcija nesto na liniji 16
INFO  00:41:45,255 - Obradjuje se funkcija kita2 na liniji 22
INFO  00:41:45,255 - Obradjuje se funkcija kita na liniji 23
INFO  00:41:45,255 - Obradjuje se funkcija main na liniji 26
INFO  00:41:45,256 - Deklarisana niz promenljiva x na liniji 26
INFO  00:41:45,256 - Deklarisana promenljiva i na liniji 26
INFO  00:41:45,256 - Deklarisana promenljiva l na liniji 26
INFO  00:41:45,256 - Deklarisana promenljiva c na liniji 26
INFO  00:41:45,256 - Deklarisana promenljiva rek na liniji 26
INFO  00:41:45,256 - Deklarisana promenljiva neka na liniji 26
INFO  00:41:45,256 - Pristupa se promenljivoj i na liniji 28
INFO  00:41:45,256 -  Deklarisanih promenljivih ima = 7
INFO  00:41:45,256 - ===================================
INFO  00:41:45,260 - bratskalovskiii
INFO  00:41:45,261 - neki kurac
INFO  00:41:45,261 - matched
INFO  00:41:45,261 - Parsiranje uspesno zavrseno!
INFO  00:52:57,659 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  00:52:57,732 - #2 program
INFO  00:52:57,732 - #48 p
INFO  00:52:57,732 - #48 int
INFO  00:52:57,734 - #48 x
INFO  00:52:57,734 - #38 ;
INFO  00:52:57,736 - #48 int
INFO  00:52:57,736 - #48 y
INFO  00:52:57,736 - #38 ;
INFO  00:52:57,737 - #21 record
INFO  00:52:57,737 - #48 Rekord
INFO  00:52:57,737 - #46 {
INFO  00:52:57,737 - #48 int
INFO  00:52:57,738 - #48 d
INFO  00:52:57,738 - #40 ,
INFO  00:52:57,738 - #48 c
INFO  00:52:57,738 - #38 ;
INFO  00:52:57,739 - #47 }
INFO  00:52:57,739 - #5 class
INFO  00:52:57,740 - #48 Klasa
INFO  00:52:57,740 - #46 {
INFO  00:52:57,741 - #48 int
INFO  00:52:57,741 - #48 b
INFO  00:52:57,741 - #40 ,
INFO  00:52:57,741 - #48 a
INFO  00:52:57,741 - #40 ,
INFO  00:52:57,741 - #48 g
INFO  00:52:57,742 - #38 ;
INFO  00:52:57,742 - #46 {
INFO  00:52:57,742 - #47 }
INFO  00:52:57,742 - #47 }
INFO  00:52:57,742 - #46 {
INFO  00:52:57,743 - #48 int
INFO  00:52:57,743 - #48 nesto
INFO  00:52:57,744 - #42 (
INFO  00:52:57,744 - #43 )
INFO  00:52:57,745 - #46 {
INFO  00:52:57,745 - #13 print
INFO  00:52:57,746 - #42 (
INFO  00:52:57,747 - #51 c
INFO  00:52:57,747 - #43 )
INFO  00:52:57,748 - #38 ;
INFO  00:52:57,748 - #13 print
INFO  00:52:57,748 - #42 (
INFO  00:52:57,749 - #50 5
INFO  00:52:57,749 - #43 )
INFO  00:52:57,749 - #38 ;
INFO  00:52:57,749 - #15 return
INFO  00:52:57,749 - #50 2
INFO  00:52:57,749 - #38 ;
INFO  00:52:57,749 - #47 }
INFO  00:52:57,750 - #3 void
INFO  00:52:57,751 - #48 kita2
INFO  00:52:57,751 - #42 (
INFO  00:52:57,751 - #43 )
INFO  00:52:57,751 - #46 {
INFO  00:52:57,751 - #47 }
INFO  00:52:57,752 - #3 void
INFO  00:52:57,752 - #48 kita
INFO  00:52:57,752 - #42 (
INFO  00:52:57,752 - #43 )
INFO  00:52:57,752 - #46 {
INFO  00:52:57,752 - #47 }
INFO  00:52:57,752 - #3 void
INFO  00:52:57,752 - #48 main
INFO  00:52:57,752 - #42 (
INFO  00:52:57,753 - #43 )
INFO  00:52:57,753 - #48 int
INFO  00:52:57,753 - #48 x
INFO  00:52:57,753 - #44 [
INFO  00:52:57,753 - #45 ]
INFO  00:52:57,753 - #40 ,
INFO  00:52:57,754 - #48 i
INFO  00:52:57,754 - #40 ,
INFO  00:52:57,754 - #48 l
INFO  00:52:57,754 - #38 ;
INFO  00:52:57,754 - #48 char
INFO  00:52:57,754 - #48 c
INFO  00:52:57,754 - #38 ;
INFO  00:52:57,754 - #48 Rekord
INFO  00:52:57,755 - #48 rek
INFO  00:52:57,755 - #38 ;
INFO  00:52:57,755 - #48 Klasa
INFO  00:52:57,755 - #48 neka
INFO  00:52:57,755 - #38 ;
INFO  00:52:57,755 - #46 {
INFO  00:52:57,755 - #48 i
INFO  00:52:57,755 - #35 =
INFO  00:52:57,756 - #50 0
INFO  00:52:57,757 - #38 ;
INFO  00:52:57,757 - #9 if
INFO  00:52:57,757 - #42 (
INFO  00:52:57,758 - #49 true
INFO  00:52:57,758 - #43 )
INFO  00:52:57,759 - #46 {
INFO  00:52:57,759 - #13 print
INFO  00:52:57,759 - #42 (
INFO  00:52:57,759 - #50 1
INFO  00:52:57,759 - #43 )
INFO  00:52:57,759 - #38 ;
INFO  00:52:57,759 - #47 }
INFO  00:52:57,759 - #7 else
INFO  00:52:57,759 - #46 {
INFO  00:52:57,760 - #13 print
INFO  00:52:57,760 - #42 (
INFO  00:52:57,760 - #50 2
INFO  00:52:57,760 - #43 )
INFO  00:52:57,760 - #38 ;
INFO  00:52:57,760 - #47 }
INFO  00:52:57,760 - #47 }
INFO  00:52:57,761 - #47 }
INFO  00:52:57,768 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              SingleCondTerm(
                SingleCondFact(
                  SingleCondFactJMP(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFactJMP]
                ) [SingleCondFact]
              ) [SingleCondTerm]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  00:52:57,769 - ===================================
INFO  00:52:57,773 - Deklarisana promenljiva x na liniji 2
INFO  00:52:57,773 - Deklarisana promenljiva y na liniji 2
INFO  00:52:57,773 - Deklarisan rekord Rekord na liniji 3
INFO  00:52:57,773 - Deklarisana promenljiva d na liniji 5
INFO  00:52:57,773 - Deklarisana promenljiva c na liniji 5
INFO  00:52:57,773 - Deklarisana  klasa Klasa na liniji 7
INFO  00:52:57,773 - Deklarisana poljeb na liniji 9
INFO  00:52:57,773 - Deklarisana poljeb na liniji 9
INFO  00:52:57,773 - Deklarisana poljea na liniji 9
INFO  00:52:57,773 - Deklarisana poljea na liniji 9
INFO  00:52:57,773 - Deklarisana poljeg na liniji 9
INFO  00:52:57,773 - Deklarisana poljeg na liniji 9
INFO  00:52:57,774 - Obradjuje se funkcija nesto na liniji 16
INFO  00:52:57,774 - Obradjuje se funkcija kita2 na liniji 22
INFO  00:52:57,774 - Obradjuje se funkcija kita na liniji 23
INFO  00:52:57,774 - Obradjuje se funkcija main na liniji 26
INFO  00:52:57,774 - Deklarisana niz promenljiva x na liniji 26
INFO  00:52:57,774 - Deklarisana promenljiva i na liniji 26
INFO  00:52:57,774 - Deklarisana promenljiva l na liniji 26
INFO  00:52:57,774 - Deklarisana promenljiva c na liniji 26
INFO  00:52:57,774 - Deklarisana promenljiva rek na liniji 26
INFO  00:52:57,774 - Deklarisana promenljiva neka na liniji 26
INFO  00:52:57,774 - Pristupa se promenljivoj i na liniji 28
INFO  00:52:57,774 -  Deklarisanih promenljivih ima = 7
INFO  00:52:57,775 - ===================================
INFO  00:52:57,779 - bratskalovskiii
INFO  00:52:57,779 - neki kurac
INFO  00:52:57,780 - matched
INFO  00:52:57,780 - Parsiranje uspesno zavrseno!
INFO  01:16:21,063 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:16:21,124 - #2 program
INFO  01:16:21,124 - #48 p
INFO  01:16:21,124 - #48 int
INFO  01:16:21,126 - #48 x
INFO  01:16:21,126 - #38 ;
INFO  01:16:21,127 - #48 int
INFO  01:16:21,127 - #48 y
INFO  01:16:21,127 - #38 ;
INFO  01:16:21,128 - #21 record
INFO  01:16:21,128 - #48 Rekord
INFO  01:16:21,128 - #46 {
INFO  01:16:21,129 - #48 int
INFO  01:16:21,129 - #48 d
INFO  01:16:21,129 - #40 ,
INFO  01:16:21,129 - #48 c
INFO  01:16:21,129 - #38 ;
INFO  01:16:21,130 - #47 }
INFO  01:16:21,130 - #5 class
INFO  01:16:21,131 - #48 Klasa
INFO  01:16:21,131 - #46 {
INFO  01:16:21,132 - #48 int
INFO  01:16:21,132 - #48 b
INFO  01:16:21,132 - #40 ,
INFO  01:16:21,132 - #48 a
INFO  01:16:21,132 - #40 ,
INFO  01:16:21,132 - #48 g
INFO  01:16:21,132 - #38 ;
INFO  01:16:21,132 - #46 {
INFO  01:16:21,132 - #47 }
INFO  01:16:21,132 - #47 }
INFO  01:16:21,133 - #46 {
INFO  01:16:21,133 - #48 int
INFO  01:16:21,134 - #48 nesto
INFO  01:16:21,134 - #42 (
INFO  01:16:21,134 - #43 )
INFO  01:16:21,134 - #46 {
INFO  01:16:21,134 - #13 print
INFO  01:16:21,136 - #42 (
INFO  01:16:21,136 - #51 c
INFO  01:16:21,136 - #43 )
INFO  01:16:21,137 - #38 ;
INFO  01:16:21,137 - #13 print
INFO  01:16:21,137 - #42 (
INFO  01:16:21,137 - #50 5
INFO  01:16:21,137 - #43 )
INFO  01:16:21,138 - #38 ;
INFO  01:16:21,138 - #15 return
INFO  01:16:21,138 - #50 2
INFO  01:16:21,138 - #38 ;
INFO  01:16:21,138 - #47 }
INFO  01:16:21,138 - #3 void
INFO  01:16:21,139 - #48 kita2
INFO  01:16:21,139 - #42 (
INFO  01:16:21,139 - #43 )
INFO  01:16:21,139 - #46 {
INFO  01:16:21,139 - #47 }
INFO  01:16:21,139 - #3 void
INFO  01:16:21,139 - #48 kita
INFO  01:16:21,139 - #42 (
INFO  01:16:21,140 - #43 )
INFO  01:16:21,140 - #46 {
INFO  01:16:21,140 - #47 }
INFO  01:16:21,140 - #3 void
INFO  01:16:21,140 - #48 main
INFO  01:16:21,140 - #42 (
INFO  01:16:21,140 - #43 )
INFO  01:16:21,140 - #48 int
INFO  01:16:21,140 - #48 x
INFO  01:16:21,140 - #44 [
INFO  01:16:21,140 - #45 ]
INFO  01:16:21,140 - #40 ,
INFO  01:16:21,141 - #48 i
INFO  01:16:21,141 - #40 ,
INFO  01:16:21,141 - #48 l
INFO  01:16:21,141 - #38 ;
INFO  01:16:21,141 - #48 char
INFO  01:16:21,141 - #48 c
INFO  01:16:21,142 - #38 ;
INFO  01:16:21,142 - #48 Rekord
INFO  01:16:21,142 - #48 rek
INFO  01:16:21,142 - #38 ;
INFO  01:16:21,142 - #48 Klasa
INFO  01:16:21,142 - #48 neka
INFO  01:16:21,142 - #38 ;
INFO  01:16:21,142 - #46 {
INFO  01:16:21,142 - #48 i
INFO  01:16:21,142 - #35 =
INFO  01:16:21,143 - #50 0
INFO  01:16:21,144 - #38 ;
INFO  01:16:21,144 - #9 if
INFO  01:16:21,144 - #42 (
INFO  01:16:21,145 - #49 true
INFO  01:16:21,145 - #43 )
INFO  01:16:21,146 - #46 {
INFO  01:16:21,146 - #13 print
INFO  01:16:21,146 - #42 (
INFO  01:16:21,146 - #50 1
INFO  01:16:21,146 - #43 )
INFO  01:16:21,146 - #38 ;
INFO  01:16:21,146 - #47 }
INFO  01:16:21,146 - #7 else
INFO  01:16:21,146 - #46 {
INFO  01:16:21,147 - #13 print
INFO  01:16:21,147 - #42 (
INFO  01:16:21,147 - #50 2
INFO  01:16:21,147 - #43 )
INFO  01:16:21,147 - #38 ;
INFO  01:16:21,147 - #47 }
INFO  01:16:21,147 - #47 }
INFO  01:16:21,147 - #47 }
INFO  01:16:21,152 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              SingleCondTerm(
                SingleCondFact(
                  SingleCondFactJMP(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFactJMP]
                ) [SingleCondFact]
              ) [SingleCondTerm]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:16:21,153 - ===================================
INFO  01:16:21,157 - Deklarisana promenljiva x na liniji 2
INFO  01:16:21,157 - Deklarisana promenljiva y na liniji 2
INFO  01:16:21,157 - Deklarisan rekord Rekord na liniji 3
INFO  01:16:21,157 - Deklarisana promenljiva d na liniji 5
INFO  01:16:21,157 - Deklarisana promenljiva c na liniji 5
INFO  01:16:21,157 - Deklarisana  klasa Klasa na liniji 7
INFO  01:16:21,157 - Deklarisana poljeb na liniji 9
INFO  01:16:21,158 - Deklarisana poljeb na liniji 9
INFO  01:16:21,158 - Deklarisana poljea na liniji 9
INFO  01:16:21,158 - Deklarisana poljea na liniji 9
INFO  01:16:21,158 - Deklarisana poljeg na liniji 9
INFO  01:16:21,158 - Deklarisana poljeg na liniji 9
INFO  01:16:21,158 - Obradjuje se funkcija nesto na liniji 16
INFO  01:16:21,158 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:16:21,159 - Obradjuje se funkcija kita na liniji 23
INFO  01:16:21,159 - Obradjuje se funkcija main na liniji 26
INFO  01:16:21,159 - Deklarisana niz promenljiva x na liniji 26
INFO  01:16:21,159 - Deklarisana promenljiva i na liniji 26
INFO  01:16:21,159 - Deklarisana promenljiva l na liniji 26
INFO  01:16:21,159 - Deklarisana promenljiva c na liniji 26
INFO  01:16:21,159 - Deklarisana promenljiva rek na liniji 26
INFO  01:16:21,159 - Deklarisana promenljiva neka na liniji 26
INFO  01:16:21,159 - Pristupa se promenljivoj i na liniji 28
INFO  01:16:21,159 -  Deklarisanih promenljivih ima = 7
INFO  01:16:21,159 - ===================================
INFO  01:16:21,168 - neki kurac
INFO  01:16:21,168 - matched
INFO  01:16:21,169 - Parsiranje uspesno zavrseno!
INFO  01:16:39,034 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:16:39,090 - #2 program
INFO  01:16:39,090 - #48 p
INFO  01:16:39,090 - #48 int
INFO  01:16:39,091 - #48 x
INFO  01:16:39,092 - #38 ;
INFO  01:16:39,093 - #48 int
INFO  01:16:39,093 - #48 y
INFO  01:16:39,093 - #38 ;
INFO  01:16:39,094 - #21 record
INFO  01:16:39,094 - #48 Rekord
INFO  01:16:39,094 - #46 {
INFO  01:16:39,094 - #48 int
INFO  01:16:39,095 - #48 d
INFO  01:16:39,095 - #40 ,
INFO  01:16:39,095 - #48 c
INFO  01:16:39,095 - #38 ;
INFO  01:16:39,095 - #47 }
INFO  01:16:39,095 - #5 class
INFO  01:16:39,096 - #48 Klasa
INFO  01:16:39,096 - #46 {
INFO  01:16:39,097 - #48 int
INFO  01:16:39,097 - #48 b
INFO  01:16:39,097 - #40 ,
INFO  01:16:39,097 - #48 a
INFO  01:16:39,097 - #40 ,
INFO  01:16:39,098 - #48 g
INFO  01:16:39,098 - #38 ;
INFO  01:16:39,098 - #46 {
INFO  01:16:39,098 - #47 }
INFO  01:16:39,098 - #47 }
INFO  01:16:39,099 - #46 {
INFO  01:16:39,099 - #48 int
INFO  01:16:39,100 - #48 nesto
INFO  01:16:39,100 - #42 (
INFO  01:16:39,100 - #43 )
INFO  01:16:39,101 - #46 {
INFO  01:16:39,101 - #13 print
INFO  01:16:39,102 - #42 (
INFO  01:16:39,102 - #51 c
INFO  01:16:39,102 - #43 )
INFO  01:16:39,103 - #38 ;
INFO  01:16:39,103 - #13 print
INFO  01:16:39,103 - #42 (
INFO  01:16:39,103 - #50 5
INFO  01:16:39,103 - #43 )
INFO  01:16:39,103 - #38 ;
INFO  01:16:39,103 - #15 return
INFO  01:16:39,104 - #50 2
INFO  01:16:39,104 - #38 ;
INFO  01:16:39,104 - #47 }
INFO  01:16:39,104 - #3 void
INFO  01:16:39,105 - #48 kita2
INFO  01:16:39,105 - #42 (
INFO  01:16:39,105 - #43 )
INFO  01:16:39,106 - #46 {
INFO  01:16:39,106 - #47 }
INFO  01:16:39,106 - #3 void
INFO  01:16:39,106 - #48 kita
INFO  01:16:39,106 - #42 (
INFO  01:16:39,106 - #43 )
INFO  01:16:39,106 - #46 {
INFO  01:16:39,107 - #47 }
INFO  01:16:39,107 - #3 void
INFO  01:16:39,107 - #48 main
INFO  01:16:39,107 - #42 (
INFO  01:16:39,107 - #43 )
INFO  01:16:39,107 - #48 int
INFO  01:16:39,107 - #48 x
INFO  01:16:39,107 - #44 [
INFO  01:16:39,107 - #45 ]
INFO  01:16:39,107 - #40 ,
INFO  01:16:39,108 - #48 i
INFO  01:16:39,108 - #40 ,
INFO  01:16:39,108 - #48 l
INFO  01:16:39,108 - #38 ;
INFO  01:16:39,108 - #48 char
INFO  01:16:39,108 - #48 c
INFO  01:16:39,108 - #38 ;
INFO  01:16:39,108 - #48 Rekord
INFO  01:16:39,108 - #48 rek
INFO  01:16:39,109 - #38 ;
INFO  01:16:39,109 - #48 Klasa
INFO  01:16:39,109 - #48 neka
INFO  01:16:39,109 - #38 ;
INFO  01:16:39,109 - #46 {
INFO  01:16:39,109 - #48 i
INFO  01:16:39,109 - #35 =
INFO  01:16:39,110 - #50 0
INFO  01:16:39,110 - #38 ;
INFO  01:16:39,111 - #9 if
INFO  01:16:39,111 - #42 (
INFO  01:16:39,111 - #49 false
INFO  01:16:39,111 - #43 )
INFO  01:16:39,112 - #46 {
INFO  01:16:39,112 - #13 print
INFO  01:16:39,112 - #42 (
INFO  01:16:39,112 - #50 1
INFO  01:16:39,112 - #43 )
INFO  01:16:39,112 - #38 ;
INFO  01:16:39,112 - #47 }
INFO  01:16:39,114 - #7 else
INFO  01:16:39,114 - #46 {
INFO  01:16:39,115 - #13 print
INFO  01:16:39,115 - #42 (
INFO  01:16:39,115 - #50 2
INFO  01:16:39,115 - #43 )
INFO  01:16:39,115 - #38 ;
INFO  01:16:39,116 - #47 }
INFO  01:16:39,116 - #47 }
INFO  01:16:39,116 - #47 }
INFO  01:16:39,121 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              SingleCondTerm(
                SingleCondFact(
                  SingleCondFactJMP(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           false
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFactJMP]
                ) [SingleCondFact]
              ) [SingleCondTerm]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:16:39,122 - ===================================
INFO  01:16:39,125 - Deklarisana promenljiva x na liniji 2
INFO  01:16:39,125 - Deklarisana promenljiva y na liniji 2
INFO  01:16:39,125 - Deklarisan rekord Rekord na liniji 3
INFO  01:16:39,125 - Deklarisana promenljiva d na liniji 5
INFO  01:16:39,125 - Deklarisana promenljiva c na liniji 5
INFO  01:16:39,126 - Deklarisana  klasa Klasa na liniji 7
INFO  01:16:39,126 - Deklarisana poljeb na liniji 9
INFO  01:16:39,126 - Deklarisana poljeb na liniji 9
INFO  01:16:39,126 - Deklarisana poljea na liniji 9
INFO  01:16:39,126 - Deklarisana poljea na liniji 9
INFO  01:16:39,126 - Deklarisana poljeg na liniji 9
INFO  01:16:39,126 - Deklarisana poljeg na liniji 9
INFO  01:16:39,126 - Obradjuje se funkcija nesto na liniji 16
INFO  01:16:39,126 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:16:39,126 - Obradjuje se funkcija kita na liniji 23
INFO  01:16:39,126 - Obradjuje se funkcija main na liniji 26
INFO  01:16:39,127 - Deklarisana niz promenljiva x na liniji 26
INFO  01:16:39,127 - Deklarisana promenljiva i na liniji 26
INFO  01:16:39,127 - Deklarisana promenljiva l na liniji 26
INFO  01:16:39,127 - Deklarisana promenljiva c na liniji 26
INFO  01:16:39,127 - Deklarisana promenljiva rek na liniji 26
INFO  01:16:39,127 - Deklarisana promenljiva neka na liniji 26
INFO  01:16:39,127 - Pristupa se promenljivoj i na liniji 28
INFO  01:16:39,127 -  Deklarisanih promenljivih ima = 7
INFO  01:16:39,127 - ===================================
INFO  01:16:39,132 - neki kurac
INFO  01:16:39,132 - matched
INFO  01:16:39,133 - Parsiranje uspesno zavrseno!
INFO  01:17:15,043 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:17:15,103 - #2 program
INFO  01:17:15,103 - #48 p
INFO  01:17:15,103 - #48 int
INFO  01:17:15,104 - #48 x
INFO  01:17:15,104 - #38 ;
INFO  01:17:15,105 - #48 int
INFO  01:17:15,106 - #48 y
INFO  01:17:15,106 - #38 ;
INFO  01:17:15,106 - #21 record
INFO  01:17:15,106 - #48 Rekord
INFO  01:17:15,106 - #46 {
INFO  01:17:15,107 - #48 int
INFO  01:17:15,107 - #48 d
INFO  01:17:15,107 - #40 ,
INFO  01:17:15,107 - #48 c
INFO  01:17:15,107 - #38 ;
INFO  01:17:15,108 - #47 }
INFO  01:17:15,108 - #5 class
INFO  01:17:15,108 - #48 Klasa
INFO  01:17:15,108 - #46 {
INFO  01:17:15,109 - #48 int
INFO  01:17:15,110 - #48 b
INFO  01:17:15,110 - #40 ,
INFO  01:17:15,110 - #48 a
INFO  01:17:15,110 - #40 ,
INFO  01:17:15,110 - #48 g
INFO  01:17:15,110 - #38 ;
INFO  01:17:15,110 - #46 {
INFO  01:17:15,110 - #47 }
INFO  01:17:15,110 - #47 }
INFO  01:17:15,111 - #46 {
INFO  01:17:15,111 - #48 int
INFO  01:17:15,112 - #48 nesto
INFO  01:17:15,112 - #42 (
INFO  01:17:15,112 - #43 )
INFO  01:17:15,112 - #46 {
INFO  01:17:15,112 - #13 print
INFO  01:17:15,114 - #42 (
INFO  01:17:15,114 - #51 c
INFO  01:17:15,114 - #43 )
INFO  01:17:15,114 - #38 ;
INFO  01:17:15,115 - #13 print
INFO  01:17:15,115 - #42 (
INFO  01:17:15,115 - #50 5
INFO  01:17:15,115 - #43 )
INFO  01:17:15,115 - #38 ;
INFO  01:17:15,115 - #15 return
INFO  01:17:15,116 - #50 2
INFO  01:17:15,116 - #38 ;
INFO  01:17:15,116 - #47 }
INFO  01:17:15,116 - #3 void
INFO  01:17:15,117 - #48 kita2
INFO  01:17:15,117 - #42 (
INFO  01:17:15,117 - #43 )
INFO  01:17:15,117 - #46 {
INFO  01:17:15,117 - #47 }
INFO  01:17:15,117 - #3 void
INFO  01:17:15,118 - #48 kita
INFO  01:17:15,118 - #42 (
INFO  01:17:15,118 - #43 )
INFO  01:17:15,118 - #46 {
INFO  01:17:15,118 - #47 }
INFO  01:17:15,118 - #3 void
INFO  01:17:15,118 - #48 main
INFO  01:17:15,118 - #42 (
INFO  01:17:15,118 - #43 )
INFO  01:17:15,118 - #48 int
INFO  01:17:15,118 - #48 x
INFO  01:17:15,118 - #44 [
INFO  01:17:15,118 - #45 ]
INFO  01:17:15,118 - #40 ,
INFO  01:17:15,119 - #48 i
INFO  01:17:15,119 - #40 ,
INFO  01:17:15,119 - #48 l
INFO  01:17:15,119 - #38 ;
INFO  01:17:15,119 - #48 char
INFO  01:17:15,119 - #48 c
INFO  01:17:15,119 - #38 ;
INFO  01:17:15,119 - #48 Rekord
INFO  01:17:15,119 - #48 rek
INFO  01:17:15,119 - #38 ;
INFO  01:17:15,120 - #48 Klasa
INFO  01:17:15,120 - #48 neka
INFO  01:17:15,120 - #38 ;
INFO  01:17:15,120 - #46 {
INFO  01:17:15,120 - #48 i
INFO  01:17:15,120 - #35 =
INFO  01:17:15,121 - #50 0
INFO  01:17:15,121 - #38 ;
INFO  01:17:15,122 - #9 if
INFO  01:17:15,122 - #42 (
INFO  01:17:15,122 - #49 false
INFO  01:17:15,122 - #43 )
INFO  01:17:15,123 - #46 {
INFO  01:17:15,123 - #13 print
INFO  01:17:15,123 - #42 (
INFO  01:17:15,123 - #50 1
INFO  01:17:15,123 - #43 )
INFO  01:17:15,124 - #38 ;
INFO  01:17:15,124 - #47 }
INFO  01:17:15,126 - #7 else
INFO  01:17:15,126 - #46 {
INFO  01:17:15,126 - #13 print
INFO  01:17:15,127 - #42 (
INFO  01:17:15,127 - #50 2
INFO  01:17:15,127 - #43 )
INFO  01:17:15,127 - #38 ;
INFO  01:17:15,127 - #47 }
INFO  01:17:15,127 - #47 }
INFO  01:17:15,127 - #47 }
INFO  01:17:15,133 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              SingleCondTerm(
                SingleCondFact(
                  SingleCondFactJMP(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           false
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFactJMP]
                ) [SingleCondFact]
              ) [SingleCondTerm]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:17:15,133 - ===================================
INFO  01:17:15,137 - Deklarisana promenljiva x na liniji 2
INFO  01:17:15,137 - Deklarisana promenljiva y na liniji 2
INFO  01:17:15,137 - Deklarisan rekord Rekord na liniji 3
INFO  01:17:15,137 - Deklarisana promenljiva d na liniji 5
INFO  01:17:15,137 - Deklarisana promenljiva c na liniji 5
INFO  01:17:15,138 - Deklarisana  klasa Klasa na liniji 7
INFO  01:17:15,138 - Deklarisana poljeb na liniji 9
INFO  01:17:15,138 - Deklarisana poljeb na liniji 9
INFO  01:17:15,138 - Deklarisana poljea na liniji 9
INFO  01:17:15,138 - Deklarisana poljea na liniji 9
INFO  01:17:15,138 - Deklarisana poljeg na liniji 9
INFO  01:17:15,138 - Deklarisana poljeg na liniji 9
INFO  01:17:15,138 - Obradjuje se funkcija nesto na liniji 16
INFO  01:17:15,138 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:17:15,138 - Obradjuje se funkcija kita na liniji 23
INFO  01:17:15,138 - Obradjuje se funkcija main na liniji 26
INFO  01:17:15,139 - Deklarisana niz promenljiva x na liniji 26
INFO  01:17:15,139 - Deklarisana promenljiva i na liniji 26
INFO  01:17:15,139 - Deklarisana promenljiva l na liniji 26
INFO  01:17:15,139 - Deklarisana promenljiva c na liniji 26
INFO  01:17:15,139 - Deklarisana promenljiva rek na liniji 26
INFO  01:17:15,139 - Deklarisana promenljiva neka na liniji 26
INFO  01:17:15,139 - Pristupa se promenljivoj i na liniji 28
INFO  01:17:15,139 -  Deklarisanih promenljivih ima = 7
INFO  01:17:15,139 - ===================================
INFO  01:17:15,144 - neki kurac
INFO  01:17:15,144 - neko sranje
INFO  01:17:15,144 - matched
INFO  01:17:15,145 - Parsiranje uspesno zavrseno!
INFO  01:19:33,529 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:19:33,641 - #2 program
INFO  01:19:33,641 - #48 p
INFO  01:19:33,642 - #48 int
INFO  01:19:33,643 - #48 x
INFO  01:19:33,644 - #38 ;
INFO  01:19:33,645 - #48 int
INFO  01:19:33,645 - #48 y
INFO  01:19:33,646 - #38 ;
INFO  01:19:33,646 - #21 record
INFO  01:19:33,646 - #48 Rekord
INFO  01:19:33,646 - #46 {
INFO  01:19:33,647 - #48 int
INFO  01:19:33,647 - #48 d
INFO  01:19:33,647 - #40 ,
INFO  01:19:33,647 - #48 c
INFO  01:19:33,648 - #38 ;
INFO  01:19:33,648 - #47 }
INFO  01:19:33,648 - #5 class
INFO  01:19:33,649 - #48 Klasa
INFO  01:19:33,649 - #46 {
INFO  01:19:33,650 - #48 int
INFO  01:19:33,651 - #48 b
INFO  01:19:33,651 - #40 ,
INFO  01:19:33,651 - #48 a
INFO  01:19:33,651 - #40 ,
INFO  01:19:33,651 - #48 g
INFO  01:19:33,651 - #38 ;
INFO  01:19:33,652 - #46 {
INFO  01:19:33,652 - #47 }
INFO  01:19:33,652 - #47 }
INFO  01:19:33,653 - #46 {
INFO  01:19:33,653 - #48 int
INFO  01:19:33,654 - #48 nesto
INFO  01:19:33,655 - #42 (
INFO  01:19:33,655 - #43 )
INFO  01:19:33,656 - #46 {
INFO  01:19:33,656 - #13 print
INFO  01:19:33,658 - #42 (
INFO  01:19:33,658 - #51 c
INFO  01:19:33,659 - #43 )
INFO  01:19:33,660 - #38 ;
INFO  01:19:33,660 - #13 print
INFO  01:19:33,660 - #42 (
INFO  01:19:33,661 - #50 5
INFO  01:19:33,661 - #43 )
INFO  01:19:33,661 - #38 ;
INFO  01:19:33,661 - #15 return
INFO  01:19:33,661 - #50 2
INFO  01:19:33,661 - #38 ;
INFO  01:19:33,661 - #47 }
INFO  01:19:33,661 - #3 void
INFO  01:19:33,663 - #48 kita2
INFO  01:19:33,663 - #42 (
INFO  01:19:33,663 - #43 )
INFO  01:19:33,663 - #46 {
INFO  01:19:33,663 - #47 }
INFO  01:19:33,663 - #3 void
INFO  01:19:33,663 - #48 kita
INFO  01:19:33,663 - #42 (
INFO  01:19:33,664 - #43 )
INFO  01:19:33,664 - #46 {
INFO  01:19:33,664 - #47 }
INFO  01:19:33,664 - #3 void
INFO  01:19:33,664 - #48 main
INFO  01:19:33,664 - #42 (
INFO  01:19:33,664 - #43 )
INFO  01:19:33,664 - #48 int
INFO  01:19:33,664 - #48 x
INFO  01:19:33,665 - #44 [
INFO  01:19:33,665 - #45 ]
INFO  01:19:33,665 - #40 ,
INFO  01:19:33,665 - #48 i
INFO  01:19:33,665 - #40 ,
INFO  01:19:33,665 - #48 l
INFO  01:19:33,666 - #38 ;
INFO  01:19:33,666 - #48 char
INFO  01:19:33,666 - #48 c
INFO  01:19:33,666 - #38 ;
INFO  01:19:33,666 - #48 Rekord
INFO  01:19:33,666 - #48 rek
INFO  01:19:33,666 - #38 ;
INFO  01:19:33,666 - #48 Klasa
INFO  01:19:33,666 - #48 neka
INFO  01:19:33,666 - #38 ;
INFO  01:19:33,666 - #46 {
INFO  01:19:33,666 - #48 i
INFO  01:19:33,666 - #35 =
INFO  01:19:33,668 - #50 0
INFO  01:19:33,669 - #38 ;
INFO  01:19:33,669 - #9 if
INFO  01:19:33,669 - #42 (
INFO  01:19:33,670 - #49 false
INFO  01:19:33,670 - #43 )
INFO  01:19:33,672 - #46 {
INFO  01:19:33,672 - #13 print
INFO  01:19:33,672 - #42 (
INFO  01:19:33,672 - #50 1
INFO  01:19:33,672 - #43 )
INFO  01:19:33,672 - #38 ;
INFO  01:19:33,672 - #47 }
INFO  01:19:33,673 - #7 else
INFO  01:19:33,673 - #46 {
INFO  01:19:33,674 - #13 print
INFO  01:19:33,674 - #42 (
INFO  01:19:33,674 - #50 2
INFO  01:19:33,674 - #43 )
INFO  01:19:33,675 - #38 ;
INFO  01:19:33,675 - #47 }
INFO  01:19:33,675 - #47 }
INFO  01:19:33,675 - #47 }
INFO  01:19:33,685 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              SingleCondTerm(
                SingleCondFact(
                  SingleCondFactJMP(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           false
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFactJMP]
                ) [SingleCondFact]
              ) [SingleCondTerm]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:19:33,686 - ===================================
INFO  01:20:26,885 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:20:26,946 - #2 program
INFO  01:20:26,946 - #48 p
INFO  01:20:26,946 - #48 int
INFO  01:20:26,947 - #48 x
INFO  01:20:26,948 - #38 ;
INFO  01:20:26,949 - #48 int
INFO  01:20:26,949 - #48 y
INFO  01:20:26,949 - #38 ;
INFO  01:20:26,949 - #21 record
INFO  01:20:26,949 - #48 Rekord
INFO  01:20:26,949 - #46 {
INFO  01:20:26,950 - #48 int
INFO  01:20:26,951 - #48 d
INFO  01:20:26,951 - #40 ,
INFO  01:20:26,951 - #48 c
INFO  01:20:26,951 - #38 ;
INFO  01:20:26,951 - #47 }
INFO  01:20:26,951 - #5 class
INFO  01:20:26,952 - #48 Klasa
INFO  01:20:26,952 - #46 {
INFO  01:20:26,953 - #48 int
INFO  01:20:26,953 - #48 b
INFO  01:20:26,953 - #40 ,
INFO  01:20:26,953 - #48 a
INFO  01:20:26,953 - #40 ,
INFO  01:20:26,954 - #48 g
INFO  01:20:26,954 - #38 ;
INFO  01:20:26,954 - #46 {
INFO  01:20:26,954 - #47 }
INFO  01:20:26,954 - #47 }
INFO  01:20:26,955 - #46 {
INFO  01:20:26,955 - #48 int
INFO  01:20:26,955 - #48 nesto
INFO  01:20:26,956 - #42 (
INFO  01:20:26,956 - #43 )
INFO  01:20:26,956 - #46 {
INFO  01:20:26,956 - #13 print
INFO  01:20:26,957 - #42 (
INFO  01:20:26,957 - #51 c
INFO  01:20:26,958 - #43 )
INFO  01:20:26,958 - #38 ;
INFO  01:20:26,958 - #13 print
INFO  01:20:26,959 - #42 (
INFO  01:20:26,959 - #50 5
INFO  01:20:26,959 - #43 )
INFO  01:20:26,959 - #38 ;
INFO  01:20:26,959 - #15 return
INFO  01:20:26,959 - #50 2
INFO  01:20:26,959 - #38 ;
INFO  01:20:26,959 - #47 }
INFO  01:20:26,959 - #3 void
INFO  01:20:26,960 - #48 kita2
INFO  01:20:26,960 - #42 (
INFO  01:20:26,960 - #43 )
INFO  01:20:26,960 - #46 {
INFO  01:20:26,961 - #47 }
INFO  01:20:26,961 - #3 void
INFO  01:20:26,961 - #48 kita
INFO  01:20:26,961 - #42 (
INFO  01:20:26,961 - #43 )
INFO  01:20:26,961 - #46 {
INFO  01:20:26,961 - #47 }
INFO  01:20:26,961 - #3 void
INFO  01:20:26,961 - #48 main
INFO  01:20:26,961 - #42 (
INFO  01:20:26,961 - #43 )
INFO  01:20:26,961 - #48 int
INFO  01:20:26,961 - #48 x
INFO  01:20:26,961 - #44 [
INFO  01:20:26,961 - #45 ]
INFO  01:20:26,962 - #40 ,
INFO  01:20:26,962 - #48 i
INFO  01:20:26,962 - #40 ,
INFO  01:20:26,962 - #48 l
INFO  01:20:26,962 - #38 ;
INFO  01:20:26,962 - #48 char
INFO  01:20:26,962 - #48 c
INFO  01:20:26,962 - #38 ;
INFO  01:20:26,962 - #48 Rekord
INFO  01:20:26,963 - #48 rek
INFO  01:20:26,963 - #38 ;
INFO  01:20:26,963 - #48 Klasa
INFO  01:20:26,963 - #48 neka
INFO  01:20:26,963 - #38 ;
INFO  01:20:26,963 - #46 {
INFO  01:20:26,963 - #48 i
INFO  01:20:26,963 - #35 =
INFO  01:20:26,964 - #50 0
INFO  01:20:26,965 - #38 ;
INFO  01:20:26,965 - #9 if
INFO  01:20:26,965 - #42 (
INFO  01:20:26,965 - #49 false
INFO  01:20:26,966 - #43 )
INFO  01:20:26,966 - #46 {
INFO  01:20:26,966 - #13 print
INFO  01:20:26,966 - #42 (
INFO  01:20:26,967 - #50 1
INFO  01:20:26,967 - #43 )
INFO  01:20:26,967 - #38 ;
INFO  01:20:26,967 - #47 }
INFO  01:20:26,967 - #7 else
INFO  01:20:26,967 - #46 {
INFO  01:20:26,968 - #13 print
INFO  01:20:26,968 - #42 (
INFO  01:20:26,968 - #50 2
INFO  01:20:26,968 - #43 )
INFO  01:20:26,968 - #38 ;
INFO  01:20:26,968 - #47 }
INFO  01:20:26,968 - #47 }
INFO  01:20:26,968 - #47 }
INFO  01:20:26,973 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              SingleCondTerm(
                SingleCondFact(
                  SingleCondFactJMP(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           false
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFactJMP]
                ) [SingleCondFact]
              ) [SingleCondTerm]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:20:26,974 - ===================================
INFO  01:20:26,978 - Deklarisana promenljiva x na liniji 2
INFO  01:20:26,978 - Deklarisana promenljiva y na liniji 2
INFO  01:20:26,978 - Deklarisan rekord Rekord na liniji 3
INFO  01:20:26,978 - Deklarisana promenljiva d na liniji 5
INFO  01:20:26,978 - Deklarisana promenljiva c na liniji 5
INFO  01:20:26,979 - Deklarisana  klasa Klasa na liniji 7
INFO  01:20:26,979 - Deklarisana poljeb na liniji 9
INFO  01:20:26,979 - Deklarisana poljeb na liniji 9
INFO  01:20:26,979 - Deklarisana poljea na liniji 9
INFO  01:20:26,979 - Deklarisana poljea na liniji 9
INFO  01:20:26,979 - Deklarisana poljeg na liniji 9
INFO  01:20:26,979 - Deklarisana poljeg na liniji 9
INFO  01:20:26,979 - Obradjuje se funkcija nesto na liniji 16
INFO  01:20:26,979 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:20:26,979 - Obradjuje se funkcija kita na liniji 23
INFO  01:20:26,980 - Obradjuje se funkcija main na liniji 26
INFO  01:20:26,980 - Deklarisana niz promenljiva x na liniji 26
INFO  01:20:26,980 - Deklarisana promenljiva i na liniji 26
INFO  01:20:26,980 - Deklarisana promenljiva l na liniji 26
INFO  01:20:26,980 - Deklarisana promenljiva c na liniji 26
INFO  01:20:26,980 - Deklarisana promenljiva rek na liniji 26
INFO  01:20:26,980 - Deklarisana promenljiva neka na liniji 26
INFO  01:20:26,980 - Pristupa se promenljivoj i na liniji 28
INFO  01:20:26,980 -  Deklarisanih promenljivih ima = 7
INFO  01:20:26,981 - ===================================
INFO  01:20:26,985 - neki kurac
INFO  01:20:26,985 - matched
INFO  01:20:26,986 - Parsiranje uspesno zavrseno!
INFO  01:21:24,554 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:21:24,611 - #2 program
INFO  01:21:24,611 - #48 p
INFO  01:21:24,611 - #48 int
INFO  01:21:24,612 - #48 x
INFO  01:21:24,613 - #38 ;
INFO  01:21:24,614 - #48 int
INFO  01:21:24,614 - #48 y
INFO  01:21:24,614 - #38 ;
INFO  01:21:24,614 - #21 record
INFO  01:21:24,614 - #48 Rekord
INFO  01:21:24,615 - #46 {
INFO  01:21:24,615 - #48 int
INFO  01:21:24,616 - #48 d
INFO  01:21:24,616 - #40 ,
INFO  01:21:24,616 - #48 c
INFO  01:21:24,616 - #38 ;
INFO  01:21:24,616 - #47 }
INFO  01:21:24,616 - #5 class
INFO  01:21:24,617 - #48 Klasa
INFO  01:21:24,617 - #46 {
INFO  01:21:24,618 - #48 int
INFO  01:21:24,618 - #48 b
INFO  01:21:24,618 - #40 ,
INFO  01:21:24,618 - #48 a
INFO  01:21:24,618 - #40 ,
INFO  01:21:24,618 - #48 g
INFO  01:21:24,618 - #38 ;
INFO  01:21:24,619 - #46 {
INFO  01:21:24,619 - #47 }
INFO  01:21:24,619 - #47 }
INFO  01:21:24,619 - #46 {
INFO  01:21:24,620 - #48 int
INFO  01:21:24,620 - #48 nesto
INFO  01:21:24,620 - #42 (
INFO  01:21:24,620 - #43 )
INFO  01:21:24,621 - #46 {
INFO  01:21:24,621 - #13 print
INFO  01:21:24,622 - #42 (
INFO  01:21:24,623 - #51 c
INFO  01:21:24,623 - #43 )
INFO  01:21:24,623 - #38 ;
INFO  01:21:24,623 - #13 print
INFO  01:21:24,624 - #42 (
INFO  01:21:24,624 - #50 5
INFO  01:21:24,624 - #43 )
INFO  01:21:24,624 - #38 ;
INFO  01:21:24,624 - #15 return
INFO  01:21:24,624 - #50 2
INFO  01:21:24,624 - #38 ;
INFO  01:21:24,624 - #47 }
INFO  01:21:24,624 - #3 void
INFO  01:21:24,625 - #48 kita2
INFO  01:21:24,625 - #42 (
INFO  01:21:24,625 - #43 )
INFO  01:21:24,625 - #46 {
INFO  01:21:24,625 - #47 }
INFO  01:21:24,625 - #3 void
INFO  01:21:24,626 - #48 kita
INFO  01:21:24,626 - #42 (
INFO  01:21:24,626 - #43 )
INFO  01:21:24,626 - #46 {
INFO  01:21:24,626 - #47 }
INFO  01:21:24,626 - #3 void
INFO  01:21:24,626 - #48 main
INFO  01:21:24,626 - #42 (
INFO  01:21:24,626 - #43 )
INFO  01:21:24,626 - #48 int
INFO  01:21:24,626 - #48 x
INFO  01:21:24,626 - #44 [
INFO  01:21:24,626 - #45 ]
INFO  01:21:24,626 - #40 ,
INFO  01:21:24,627 - #48 i
INFO  01:21:24,627 - #40 ,
INFO  01:21:24,627 - #48 l
INFO  01:21:24,627 - #38 ;
INFO  01:21:24,627 - #48 char
INFO  01:21:24,627 - #48 c
INFO  01:21:24,627 - #38 ;
INFO  01:21:24,627 - #48 Rekord
INFO  01:21:24,627 - #48 rek
INFO  01:21:24,627 - #38 ;
INFO  01:21:24,627 - #48 Klasa
INFO  01:21:24,627 - #48 neka
INFO  01:21:24,628 - #38 ;
INFO  01:21:24,628 - #46 {
INFO  01:21:24,628 - #48 i
INFO  01:21:24,628 - #35 =
INFO  01:21:24,629 - #50 0
INFO  01:21:24,629 - #38 ;
INFO  01:21:24,629 - #9 if
INFO  01:21:24,630 - #42 (
INFO  01:21:24,630 - #49 false
INFO  01:21:24,630 - #43 )
INFO  01:21:24,631 - #46 {
INFO  01:21:24,631 - #13 print
INFO  01:21:24,631 - #42 (
INFO  01:21:24,631 - #50 1
INFO  01:21:24,631 - #43 )
INFO  01:21:24,631 - #38 ;
INFO  01:21:24,631 - #47 }
INFO  01:21:24,631 - #7 else
INFO  01:21:24,631 - #46 {
INFO  01:21:24,632 - #13 print
INFO  01:21:24,632 - #42 (
INFO  01:21:24,632 - #50 2
INFO  01:21:24,632 - #43 )
INFO  01:21:24,632 - #38 ;
INFO  01:21:24,632 - #47 }
INFO  01:21:24,632 - #47 }
INFO  01:21:24,632 - #47 }
INFO  01:21:24,637 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              SingleCondTerm(
                SingleCondFact(
                  SingleCondFactJMP(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           false
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFactJMP]
                ) [SingleCondFact]
              ) [SingleCondTerm]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:21:24,638 - ===================================
INFO  01:21:24,642 - Deklarisana promenljiva x na liniji 2
INFO  01:21:24,642 - Deklarisana promenljiva y na liniji 2
INFO  01:21:24,642 - Deklarisan rekord Rekord na liniji 3
INFO  01:21:24,642 - Deklarisana promenljiva d na liniji 5
INFO  01:21:24,642 - Deklarisana promenljiva c na liniji 5
INFO  01:21:24,642 - Deklarisana  klasa Klasa na liniji 7
INFO  01:21:24,642 - Deklarisana poljeb na liniji 9
INFO  01:21:24,642 - Deklarisana poljeb na liniji 9
INFO  01:21:24,642 - Deklarisana poljea na liniji 9
INFO  01:21:24,642 - Deklarisana poljea na liniji 9
INFO  01:21:24,643 - Deklarisana poljeg na liniji 9
INFO  01:21:24,643 - Deklarisana poljeg na liniji 9
INFO  01:21:24,643 - Obradjuje se funkcija nesto na liniji 16
INFO  01:21:24,643 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:21:24,643 - Obradjuje se funkcija kita na liniji 23
INFO  01:21:24,643 - Obradjuje se funkcija main na liniji 26
INFO  01:21:24,643 - Deklarisana niz promenljiva x na liniji 26
INFO  01:21:24,643 - Deklarisana promenljiva i na liniji 26
INFO  01:21:24,643 - Deklarisana promenljiva l na liniji 26
INFO  01:21:24,643 - Deklarisana promenljiva c na liniji 26
INFO  01:21:24,643 - Deklarisana promenljiva rek na liniji 26
INFO  01:21:24,643 - Deklarisana promenljiva neka na liniji 26
INFO  01:21:24,643 - Pristupa se promenljivoj i na liniji 28
INFO  01:21:24,643 -  Deklarisanih promenljivih ima = 7
INFO  01:21:24,643 - ===================================
INFO  01:21:24,648 - bratskalovskiii
INFO  01:21:24,648 - neki kurac
INFO  01:21:24,648 - matched
INFO  01:21:24,648 - Parsiranje uspesno zavrseno!
INFO  01:21:46,068 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:21:46,124 - #2 program
INFO  01:21:46,124 - #48 p
INFO  01:21:46,124 - #48 int
INFO  01:21:46,125 - #48 x
INFO  01:21:46,126 - #38 ;
INFO  01:21:46,127 - #48 int
INFO  01:21:46,127 - #48 y
INFO  01:21:46,127 - #38 ;
INFO  01:21:46,127 - #21 record
INFO  01:21:46,128 - #48 Rekord
INFO  01:21:46,128 - #46 {
INFO  01:21:46,129 - #48 int
INFO  01:21:46,129 - #48 d
INFO  01:21:46,130 - #40 ,
INFO  01:21:46,130 - #48 c
INFO  01:21:46,130 - #38 ;
INFO  01:21:46,130 - #47 }
INFO  01:21:46,130 - #5 class
INFO  01:21:46,131 - #48 Klasa
INFO  01:21:46,131 - #46 {
INFO  01:21:46,132 - #48 int
INFO  01:21:46,132 - #48 b
INFO  01:21:46,132 - #40 ,
INFO  01:21:46,132 - #48 a
INFO  01:21:46,133 - #40 ,
INFO  01:21:46,133 - #48 g
INFO  01:21:46,133 - #38 ;
INFO  01:21:46,133 - #46 {
INFO  01:21:46,133 - #47 }
INFO  01:21:46,133 - #47 }
INFO  01:21:46,134 - #46 {
INFO  01:21:46,134 - #48 int
INFO  01:21:46,135 - #48 nesto
INFO  01:21:46,135 - #42 (
INFO  01:21:46,135 - #43 )
INFO  01:21:46,135 - #46 {
INFO  01:21:46,136 - #13 print
INFO  01:21:46,137 - #42 (
INFO  01:21:46,137 - #51 c
INFO  01:21:46,137 - #43 )
INFO  01:21:46,137 - #38 ;
INFO  01:21:46,138 - #13 print
INFO  01:21:46,138 - #42 (
INFO  01:21:46,138 - #50 5
INFO  01:21:46,138 - #43 )
INFO  01:21:46,138 - #38 ;
INFO  01:21:46,138 - #15 return
INFO  01:21:46,138 - #50 2
INFO  01:21:46,138 - #38 ;
INFO  01:21:46,138 - #47 }
INFO  01:21:46,139 - #3 void
INFO  01:21:46,139 - #48 kita2
INFO  01:21:46,140 - #42 (
INFO  01:21:46,140 - #43 )
INFO  01:21:46,140 - #46 {
INFO  01:21:46,140 - #47 }
INFO  01:21:46,140 - #3 void
INFO  01:21:46,140 - #48 kita
INFO  01:21:46,140 - #42 (
INFO  01:21:46,140 - #43 )
INFO  01:21:46,140 - #46 {
INFO  01:21:46,140 - #47 }
INFO  01:21:46,140 - #3 void
INFO  01:21:46,140 - #48 main
INFO  01:21:46,141 - #42 (
INFO  01:21:46,141 - #43 )
INFO  01:21:46,141 - #48 int
INFO  01:21:46,141 - #48 x
INFO  01:21:46,141 - #44 [
INFO  01:21:46,141 - #45 ]
INFO  01:21:46,141 - #40 ,
INFO  01:21:46,141 - #48 i
INFO  01:21:46,142 - #40 ,
INFO  01:21:46,142 - #48 l
INFO  01:21:46,142 - #38 ;
INFO  01:21:46,142 - #48 char
INFO  01:21:46,142 - #48 c
INFO  01:21:46,142 - #38 ;
INFO  01:21:46,142 - #48 Rekord
INFO  01:21:46,142 - #48 rek
INFO  01:21:46,142 - #38 ;
INFO  01:21:46,142 - #48 Klasa
INFO  01:21:46,142 - #48 neka
INFO  01:21:46,142 - #38 ;
INFO  01:21:46,143 - #46 {
INFO  01:21:46,143 - #48 i
INFO  01:21:46,143 - #35 =
INFO  01:21:46,144 - #50 0
INFO  01:21:46,144 - #38 ;
INFO  01:21:46,145 - #9 if
INFO  01:21:46,145 - #42 (
INFO  01:21:46,145 - #49 true
INFO  01:21:46,145 - #43 )
INFO  01:21:46,146 - #46 {
INFO  01:21:46,146 - #13 print
INFO  01:21:46,146 - #42 (
INFO  01:21:46,146 - #50 1
INFO  01:21:46,146 - #43 )
INFO  01:21:46,147 - #38 ;
INFO  01:21:46,147 - #47 }
INFO  01:21:46,147 - #7 else
INFO  01:21:46,147 - #46 {
INFO  01:21:46,147 - #13 print
INFO  01:21:46,147 - #42 (
INFO  01:21:46,147 - #50 2
INFO  01:21:46,147 - #43 )
INFO  01:21:46,147 - #38 ;
INFO  01:21:46,148 - #47 }
INFO  01:21:46,148 - #47 }
INFO  01:21:46,148 - #47 }
INFO  01:21:46,153 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              SingleCondTerm(
                SingleCondFact(
                  SingleCondFactJMP(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFactJMP]
                ) [SingleCondFact]
              ) [SingleCondTerm]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:21:46,154 - ===================================
INFO  01:21:46,158 - Deklarisana promenljiva x na liniji 2
INFO  01:21:46,158 - Deklarisana promenljiva y na liniji 2
INFO  01:21:46,158 - Deklarisan rekord Rekord na liniji 3
INFO  01:21:46,158 - Deklarisana promenljiva d na liniji 5
INFO  01:21:46,158 - Deklarisana promenljiva c na liniji 5
INFO  01:21:46,158 - Deklarisana  klasa Klasa na liniji 7
INFO  01:21:46,158 - Deklarisana poljeb na liniji 9
INFO  01:21:46,158 - Deklarisana poljeb na liniji 9
INFO  01:21:46,158 - Deklarisana poljea na liniji 9
INFO  01:21:46,158 - Deklarisana poljea na liniji 9
INFO  01:21:46,158 - Deklarisana poljeg na liniji 9
INFO  01:21:46,158 - Deklarisana poljeg na liniji 9
INFO  01:21:46,158 - Obradjuje se funkcija nesto na liniji 16
INFO  01:21:46,159 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:21:46,159 - Obradjuje se funkcija kita na liniji 23
INFO  01:21:46,159 - Obradjuje se funkcija main na liniji 26
INFO  01:21:46,159 - Deklarisana niz promenljiva x na liniji 26
INFO  01:21:46,159 - Deklarisana promenljiva i na liniji 26
INFO  01:21:46,159 - Deklarisana promenljiva l na liniji 26
INFO  01:21:46,159 - Deklarisana promenljiva c na liniji 26
INFO  01:21:46,159 - Deklarisana promenljiva rek na liniji 26
INFO  01:21:46,159 - Deklarisana promenljiva neka na liniji 26
INFO  01:21:46,159 - Pristupa se promenljivoj i na liniji 28
INFO  01:21:46,160 -  Deklarisanih promenljivih ima = 7
INFO  01:21:46,160 - ===================================
INFO  01:21:46,165 - bratskalovskiii
INFO  01:21:46,165 - neki kurac
INFO  01:21:46,165 - neko sranje
INFO  01:21:46,165 - matched
INFO  01:21:46,165 - Parsiranje uspesno zavrseno!
INFO  01:22:02,968 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:22:03,024 - #2 program
INFO  01:22:03,024 - #48 p
INFO  01:22:03,024 - #48 int
INFO  01:22:03,025 - #48 x
INFO  01:22:03,025 - #38 ;
INFO  01:22:03,027 - #48 int
INFO  01:22:03,027 - #48 y
INFO  01:22:03,027 - #38 ;
INFO  01:22:03,027 - #21 record
INFO  01:22:03,027 - #48 Rekord
INFO  01:22:03,027 - #46 {
INFO  01:22:03,028 - #48 int
INFO  01:22:03,028 - #48 d
INFO  01:22:03,028 - #40 ,
INFO  01:22:03,028 - #48 c
INFO  01:22:03,029 - #38 ;
INFO  01:22:03,029 - #47 }
INFO  01:22:03,029 - #5 class
INFO  01:22:03,030 - #48 Klasa
INFO  01:22:03,030 - #46 {
INFO  01:22:03,030 - #48 int
INFO  01:22:03,031 - #48 b
INFO  01:22:03,031 - #40 ,
INFO  01:22:03,031 - #48 a
INFO  01:22:03,031 - #40 ,
INFO  01:22:03,031 - #48 g
INFO  01:22:03,031 - #38 ;
INFO  01:22:03,031 - #46 {
INFO  01:22:03,032 - #47 }
INFO  01:22:03,032 - #47 }
INFO  01:22:03,032 - #46 {
INFO  01:22:03,032 - #48 int
INFO  01:22:03,033 - #48 nesto
INFO  01:22:03,033 - #42 (
INFO  01:22:03,033 - #43 )
INFO  01:22:03,034 - #46 {
INFO  01:22:03,034 - #13 print
INFO  01:22:03,035 - #42 (
INFO  01:22:03,035 - #51 c
INFO  01:22:03,035 - #43 )
INFO  01:22:03,036 - #38 ;
INFO  01:22:03,036 - #13 print
INFO  01:22:03,037 - #42 (
INFO  01:22:03,037 - #50 5
INFO  01:22:03,037 - #43 )
INFO  01:22:03,037 - #38 ;
INFO  01:22:03,037 - #15 return
INFO  01:22:03,037 - #50 2
INFO  01:22:03,037 - #38 ;
INFO  01:22:03,037 - #47 }
INFO  01:22:03,038 - #3 void
INFO  01:22:03,038 - #48 kita2
INFO  01:22:03,038 - #42 (
INFO  01:22:03,038 - #43 )
INFO  01:22:03,039 - #46 {
INFO  01:22:03,039 - #47 }
INFO  01:22:03,039 - #3 void
INFO  01:22:03,039 - #48 kita
INFO  01:22:03,039 - #42 (
INFO  01:22:03,039 - #43 )
INFO  01:22:03,039 - #46 {
INFO  01:22:03,039 - #47 }
INFO  01:22:03,039 - #3 void
INFO  01:22:03,039 - #48 main
INFO  01:22:03,039 - #42 (
INFO  01:22:03,039 - #43 )
INFO  01:22:03,039 - #48 int
INFO  01:22:03,039 - #48 x
INFO  01:22:03,039 - #44 [
INFO  01:22:03,039 - #45 ]
INFO  01:22:03,039 - #40 ,
INFO  01:22:03,040 - #48 i
INFO  01:22:03,040 - #40 ,
INFO  01:22:03,040 - #48 l
INFO  01:22:03,040 - #38 ;
INFO  01:22:03,040 - #48 char
INFO  01:22:03,040 - #48 c
INFO  01:22:03,040 - #38 ;
INFO  01:22:03,041 - #48 Rekord
INFO  01:22:03,041 - #48 rek
INFO  01:22:03,041 - #38 ;
INFO  01:22:03,041 - #48 Klasa
INFO  01:22:03,041 - #48 neka
INFO  01:22:03,041 - #38 ;
INFO  01:22:03,041 - #46 {
INFO  01:22:03,041 - #48 i
INFO  01:22:03,041 - #35 =
INFO  01:22:03,042 - #50 0
INFO  01:22:03,042 - #38 ;
INFO  01:22:03,043 - #9 if
INFO  01:22:03,043 - #42 (
INFO  01:22:03,043 - #48 true||5
INFO  01:22:03,043 - #29 >
INFO  01:22:03,044 - #50 4
INFO  01:22:03,044 - #43 )
INFO  01:22:03,045 - #46 {
INFO  01:22:03,045 - #13 print
INFO  01:22:03,045 - #42 (
INFO  01:22:03,045 - #50 1
INFO  01:22:03,046 - #43 )
INFO  01:22:03,047 - #38 ;
INFO  01:22:03,047 - #47 }
INFO  01:22:03,047 - #7 else
INFO  01:22:03,048 - #46 {
INFO  01:22:03,048 - #13 print
INFO  01:22:03,048 - #42 (
INFO  01:22:03,048 - #50 2
INFO  01:22:03,048 - #43 )
INFO  01:22:03,048 - #38 ;
INFO  01:22:03,048 - #47 }
INFO  01:22:03,048 - #47 }
INFO  01:22:03,049 - #47 }
INFO  01:22:03,054 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              SingleCondTerm(
                SingleCondFact(
                  SingleCondFactJMP(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          VarFactor(
                            Designator(
                              Base(
                               true||5
                              ) [Base]
                              NoDesignatorAdded(
                              ) [NoDesignatorAdded]
                            ) [Designator]
                          ) [VarFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopGreater(
                      ) [RelopGreater]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           4
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFactJMP]
                ) [SingleCondFact]
              ) [SingleCondTerm]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:22:03,055 - ===================================
INFO  01:22:03,059 - Deklarisana promenljiva x na liniji 2
INFO  01:22:03,059 - Deklarisana promenljiva y na liniji 2
INFO  01:22:03,059 - Deklarisan rekord Rekord na liniji 3
INFO  01:22:03,059 - Deklarisana promenljiva d na liniji 5
INFO  01:22:03,059 - Deklarisana promenljiva c na liniji 5
INFO  01:22:03,060 - Deklarisana  klasa Klasa na liniji 7
INFO  01:22:03,060 - Deklarisana poljeb na liniji 9
INFO  01:22:03,060 - Deklarisana poljeb na liniji 9
INFO  01:22:03,060 - Deklarisana poljea na liniji 9
INFO  01:22:03,060 - Deklarisana poljea na liniji 9
INFO  01:22:03,060 - Deklarisana poljeg na liniji 9
INFO  01:22:03,060 - Deklarisana poljeg na liniji 9
INFO  01:22:03,060 - Obradjuje se funkcija nesto na liniji 16
INFO  01:22:03,060 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:22:03,060 - Obradjuje se funkcija kita na liniji 23
INFO  01:22:03,060 - Obradjuje se funkcija main na liniji 26
INFO  01:22:03,060 - Deklarisana niz promenljiva x na liniji 26
INFO  01:22:03,061 - Deklarisana promenljiva i na liniji 26
INFO  01:22:03,061 - Deklarisana promenljiva l na liniji 26
INFO  01:22:03,061 - Deklarisana promenljiva c na liniji 26
INFO  01:22:03,061 - Deklarisana promenljiva rek na liniji 26
INFO  01:22:03,061 - Deklarisana promenljiva neka na liniji 26
INFO  01:22:03,061 - Pristupa se promenljivoj i na liniji 28
ERROR 01:22:03,061 - Greska na liniji 29 :ime true||5 nije deklarisano!
ERROR 01:22:03,061 - Greska na liniji:29 nekompatibilni tipovi u izrazu za relacije!
ERROR 01:22:03,061 - Greska na liniji:29 condition mora biti logickog tipa! 
INFO  01:22:03,061 -  Deklarisanih promenljivih ima = 7
INFO  01:22:03,061 - ===================================
ERROR 01:22:03,062 - Parsiranje NIJE uspesno zavrseno
INFO  01:22:11,916 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:22:11,973 - #2 program
INFO  01:22:11,973 - #48 p
INFO  01:22:11,973 - #48 int
INFO  01:22:11,974 - #48 x
INFO  01:22:11,975 - #38 ;
INFO  01:22:11,976 - #48 int
INFO  01:22:11,976 - #48 y
INFO  01:22:11,977 - #38 ;
INFO  01:22:11,977 - #21 record
INFO  01:22:11,977 - #48 Rekord
INFO  01:22:11,977 - #46 {
INFO  01:22:11,977 - #48 int
INFO  01:22:11,978 - #48 d
INFO  01:22:11,978 - #40 ,
INFO  01:22:11,978 - #48 c
INFO  01:22:11,978 - #38 ;
INFO  01:22:11,978 - #47 }
INFO  01:22:11,979 - #5 class
INFO  01:22:11,979 - #48 Klasa
INFO  01:22:11,979 - #46 {
INFO  01:22:11,980 - #48 int
INFO  01:22:11,980 - #48 b
INFO  01:22:11,980 - #40 ,
INFO  01:22:11,981 - #48 a
INFO  01:22:11,981 - #40 ,
INFO  01:22:11,981 - #48 g
INFO  01:22:11,981 - #38 ;
INFO  01:22:11,981 - #46 {
INFO  01:22:11,981 - #47 }
INFO  01:22:11,981 - #47 }
INFO  01:22:11,982 - #46 {
INFO  01:22:11,982 - #48 int
INFO  01:22:11,983 - #48 nesto
INFO  01:22:11,983 - #42 (
INFO  01:22:11,983 - #43 )
INFO  01:22:11,984 - #46 {
INFO  01:22:11,984 - #13 print
INFO  01:22:11,985 - #42 (
INFO  01:22:11,985 - #51 c
INFO  01:22:11,985 - #43 )
INFO  01:22:11,986 - #38 ;
INFO  01:22:11,986 - #13 print
INFO  01:22:11,986 - #42 (
INFO  01:22:11,986 - #50 5
INFO  01:22:11,987 - #43 )
INFO  01:22:11,987 - #38 ;
INFO  01:22:11,987 - #15 return
INFO  01:22:11,987 - #50 2
INFO  01:22:11,987 - #38 ;
INFO  01:22:11,987 - #47 }
INFO  01:22:11,987 - #3 void
INFO  01:22:11,988 - #48 kita2
INFO  01:22:11,988 - #42 (
INFO  01:22:11,988 - #43 )
INFO  01:22:11,988 - #46 {
INFO  01:22:11,988 - #47 }
INFO  01:22:11,988 - #3 void
INFO  01:22:11,988 - #48 kita
INFO  01:22:11,988 - #42 (
INFO  01:22:11,988 - #43 )
INFO  01:22:11,989 - #46 {
INFO  01:22:11,989 - #47 }
INFO  01:22:11,989 - #3 void
INFO  01:22:11,989 - #48 main
INFO  01:22:11,989 - #42 (
INFO  01:22:11,989 - #43 )
INFO  01:22:11,989 - #48 int
INFO  01:22:11,989 - #48 x
INFO  01:22:11,989 - #44 [
INFO  01:22:11,989 - #45 ]
INFO  01:22:11,989 - #40 ,
INFO  01:22:11,990 - #48 i
INFO  01:22:11,990 - #40 ,
INFO  01:22:11,990 - #48 l
INFO  01:22:11,990 - #38 ;
INFO  01:22:11,990 - #48 char
INFO  01:22:11,990 - #48 c
INFO  01:22:11,990 - #38 ;
INFO  01:22:11,990 - #48 Rekord
INFO  01:22:11,990 - #48 rek
INFO  01:22:11,990 - #38 ;
INFO  01:22:11,990 - #48 Klasa
INFO  01:22:11,990 - #48 neka
INFO  01:22:11,991 - #38 ;
INFO  01:22:11,991 - #46 {
INFO  01:22:11,991 - #48 i
INFO  01:22:11,991 - #35 =
INFO  01:22:11,992 - #50 0
INFO  01:22:11,992 - #38 ;
INFO  01:22:11,992 - #9 if
INFO  01:22:11,993 - #42 (
INFO  01:22:11,993 - #49 true
INFO  01:22:11,993 - #34 ||
INFO  01:22:11,994 - #50 5
INFO  01:22:11,994 - #29 >
INFO  01:22:11,994 - #50 4
INFO  01:22:11,995 - #43 )
INFO  01:22:11,995 - #46 {
INFO  01:22:11,996 - #13 print
INFO  01:22:11,996 - #42 (
INFO  01:22:11,997 - #50 1
INFO  01:22:11,998 - #43 )
INFO  01:22:11,998 - #38 ;
INFO  01:22:11,998 - #47 }
INFO  01:22:11,998 - #7 else
INFO  01:22:11,998 - #46 {
INFO  01:22:11,998 - #13 print
INFO  01:22:11,998 - #42 (
INFO  01:22:11,998 - #50 2
INFO  01:22:11,999 - #43 )
INFO  01:22:11,999 - #38 ;
INFO  01:22:11,999 - #47 }
INFO  01:22:11,999 - #47 }
INFO  01:22:11,999 - #47 }
INFO  01:22:12,005 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                SingleCondTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             true
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [SingleCondTerm]
                Or(
                ) [Or]
                SingleCondFact(
                  SingleCondFactJMP(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopGreater(
                      ) [RelopGreater]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           4
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFactJMP]
                ) [SingleCondFact]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:22:12,005 - ===================================
INFO  01:22:12,009 - Deklarisana promenljiva x na liniji 2
INFO  01:22:12,009 - Deklarisana promenljiva y na liniji 2
INFO  01:22:12,009 - Deklarisan rekord Rekord na liniji 3
INFO  01:22:12,009 - Deklarisana promenljiva d na liniji 5
INFO  01:22:12,009 - Deklarisana promenljiva c na liniji 5
INFO  01:22:12,009 - Deklarisana  klasa Klasa na liniji 7
INFO  01:22:12,009 - Deklarisana poljeb na liniji 9
INFO  01:22:12,009 - Deklarisana poljeb na liniji 9
INFO  01:22:12,009 - Deklarisana poljea na liniji 9
INFO  01:22:12,009 - Deklarisana poljea na liniji 9
INFO  01:22:12,009 - Deklarisana poljeg na liniji 9
INFO  01:22:12,010 - Deklarisana poljeg na liniji 9
INFO  01:22:12,010 - Obradjuje se funkcija nesto na liniji 16
INFO  01:22:12,010 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:22:12,010 - Obradjuje se funkcija kita na liniji 23
INFO  01:22:12,010 - Obradjuje se funkcija main na liniji 26
INFO  01:22:12,010 - Deklarisana niz promenljiva x na liniji 26
INFO  01:22:12,010 - Deklarisana promenljiva i na liniji 26
INFO  01:22:12,010 - Deklarisana promenljiva l na liniji 26
INFO  01:22:12,010 - Deklarisana promenljiva c na liniji 26
INFO  01:22:12,010 - Deklarisana promenljiva rek na liniji 26
INFO  01:22:12,010 - Deklarisana promenljiva neka na liniji 26
INFO  01:22:12,010 - Pristupa se promenljivoj i na liniji 28
INFO  01:22:12,012 -  Deklarisanih promenljivih ima = 7
INFO  01:22:12,012 - ===================================
INFO  01:22:12,016 - neki kurac
INFO  01:22:12,016 - neko sranje
INFO  01:22:12,016 - neko sranje2
INFO  01:22:12,016 - bratskalovskiii
INFO  01:22:12,016 - neko sranje
INFO  01:22:12,016 - matched
INFO  01:22:12,017 - Parsiranje uspesno zavrseno!
INFO  01:22:30,151 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:22:30,206 - #2 program
INFO  01:22:30,207 - #48 p
INFO  01:22:30,207 - #48 int
INFO  01:22:30,208 - #48 x
INFO  01:22:30,208 - #38 ;
INFO  01:22:30,210 - #48 int
INFO  01:22:30,210 - #48 y
INFO  01:22:30,210 - #38 ;
INFO  01:22:30,210 - #21 record
INFO  01:22:30,210 - #48 Rekord
INFO  01:22:30,210 - #46 {
INFO  01:22:30,211 - #48 int
INFO  01:22:30,211 - #48 d
INFO  01:22:30,211 - #40 ,
INFO  01:22:30,211 - #48 c
INFO  01:22:30,212 - #38 ;
INFO  01:22:30,212 - #47 }
INFO  01:22:30,212 - #5 class
INFO  01:22:30,213 - #48 Klasa
INFO  01:22:30,213 - #46 {
INFO  01:22:30,213 - #48 int
INFO  01:22:30,214 - #48 b
INFO  01:22:30,214 - #40 ,
INFO  01:22:30,214 - #48 a
INFO  01:22:30,214 - #40 ,
INFO  01:22:30,214 - #48 g
INFO  01:22:30,214 - #38 ;
INFO  01:22:30,214 - #46 {
INFO  01:22:30,214 - #47 }
INFO  01:22:30,215 - #47 }
INFO  01:22:30,215 - #46 {
INFO  01:22:30,215 - #48 int
INFO  01:22:30,216 - #48 nesto
INFO  01:22:30,216 - #42 (
INFO  01:22:30,216 - #43 )
INFO  01:22:30,217 - #46 {
INFO  01:22:30,217 - #13 print
INFO  01:22:30,218 - #42 (
INFO  01:22:30,218 - #51 c
INFO  01:22:30,218 - #43 )
INFO  01:22:30,219 - #38 ;
INFO  01:22:30,219 - #13 print
INFO  01:22:30,219 - #42 (
INFO  01:22:30,219 - #50 5
INFO  01:22:30,219 - #43 )
INFO  01:22:30,219 - #38 ;
INFO  01:22:30,219 - #15 return
INFO  01:22:30,219 - #50 2
INFO  01:22:30,220 - #38 ;
INFO  01:22:30,220 - #47 }
INFO  01:22:30,220 - #3 void
INFO  01:22:30,221 - #48 kita2
INFO  01:22:30,221 - #42 (
INFO  01:22:30,221 - #43 )
INFO  01:22:30,221 - #46 {
INFO  01:22:30,221 - #47 }
INFO  01:22:30,221 - #3 void
INFO  01:22:30,221 - #48 kita
INFO  01:22:30,221 - #42 (
INFO  01:22:30,221 - #43 )
INFO  01:22:30,221 - #46 {
INFO  01:22:30,221 - #47 }
INFO  01:22:30,221 - #3 void
INFO  01:22:30,221 - #48 main
INFO  01:22:30,222 - #42 (
INFO  01:22:30,222 - #43 )
INFO  01:22:30,222 - #48 int
INFO  01:22:30,222 - #48 x
INFO  01:22:30,222 - #44 [
INFO  01:22:30,222 - #45 ]
INFO  01:22:30,222 - #40 ,
INFO  01:22:30,222 - #48 i
INFO  01:22:30,222 - #40 ,
INFO  01:22:30,222 - #48 l
INFO  01:22:30,223 - #38 ;
INFO  01:22:30,223 - #48 char
INFO  01:22:30,223 - #48 c
INFO  01:22:30,223 - #38 ;
INFO  01:22:30,223 - #48 Rekord
INFO  01:22:30,223 - #48 rek
INFO  01:22:30,223 - #38 ;
INFO  01:22:30,223 - #48 Klasa
INFO  01:22:30,223 - #48 neka
INFO  01:22:30,223 - #38 ;
INFO  01:22:30,223 - #46 {
INFO  01:22:30,223 - #48 i
INFO  01:22:30,223 - #35 =
INFO  01:22:30,225 - #50 0
INFO  01:22:30,225 - #38 ;
INFO  01:22:30,226 - #9 if
INFO  01:22:30,226 - #42 (
INFO  01:22:30,226 - #50 3
INFO  01:22:30,226 - #31 <
INFO  01:22:30,226 - #50 2
INFO  01:22:30,227 - #34 ||
INFO  01:22:30,228 - #49 true
INFO  01:22:30,228 - #43 )
INFO  01:22:30,229 - #46 {
INFO  01:22:30,229 - #13 print
INFO  01:22:30,229 - #42 (
INFO  01:22:30,229 - #50 1
INFO  01:22:30,229 - #43 )
INFO  01:22:30,229 - #38 ;
INFO  01:22:30,229 - #47 }
INFO  01:22:30,229 - #7 else
INFO  01:22:30,229 - #46 {
INFO  01:22:30,229 - #13 print
INFO  01:22:30,230 - #42 (
INFO  01:22:30,230 - #50 2
INFO  01:22:30,230 - #43 )
INFO  01:22:30,230 - #38 ;
INFO  01:22:30,230 - #47 }
INFO  01:22:30,230 - #47 }
INFO  01:22:30,230 - #47 }
INFO  01:22:30,235 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                SingleCondTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [SingleCondTerm]
                Or(
                ) [Or]
                SingleCondFact(
                  SingleCondFactJMP(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFactJMP]
                ) [SingleCondFact]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:22:30,236 - ===================================
INFO  01:22:30,240 - Deklarisana promenljiva x na liniji 2
INFO  01:22:30,240 - Deklarisana promenljiva y na liniji 2
INFO  01:22:30,240 - Deklarisan rekord Rekord na liniji 3
INFO  01:22:30,240 - Deklarisana promenljiva d na liniji 5
INFO  01:22:30,240 - Deklarisana promenljiva c na liniji 5
INFO  01:22:30,240 - Deklarisana  klasa Klasa na liniji 7
INFO  01:22:30,240 - Deklarisana poljeb na liniji 9
INFO  01:22:30,240 - Deklarisana poljeb na liniji 9
INFO  01:22:30,240 - Deklarisana poljea na liniji 9
INFO  01:22:30,240 - Deklarisana poljea na liniji 9
INFO  01:22:30,240 - Deklarisana poljeg na liniji 9
INFO  01:22:30,240 - Deklarisana poljeg na liniji 9
INFO  01:22:30,241 - Obradjuje se funkcija nesto na liniji 16
INFO  01:22:30,241 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:22:30,241 - Obradjuje se funkcija kita na liniji 23
INFO  01:22:30,241 - Obradjuje se funkcija main na liniji 26
INFO  01:22:30,241 - Deklarisana niz promenljiva x na liniji 26
INFO  01:22:30,241 - Deklarisana promenljiva i na liniji 26
INFO  01:22:30,241 - Deklarisana promenljiva l na liniji 26
INFO  01:22:30,241 - Deklarisana promenljiva c na liniji 26
INFO  01:22:30,241 - Deklarisana promenljiva rek na liniji 26
INFO  01:22:30,241 - Deklarisana promenljiva neka na liniji 26
INFO  01:22:30,241 - Pristupa se promenljivoj i na liniji 28
INFO  01:22:30,242 -  Deklarisanih promenljivih ima = 7
INFO  01:22:30,243 - ===================================
INFO  01:22:30,248 - neki kurac
INFO  01:22:30,248 - neko sranje
INFO  01:22:30,248 - neko sranje2
INFO  01:22:30,248 - bratskalovskiii
INFO  01:22:30,248 - neko sranje
INFO  01:22:30,248 - matched
INFO  01:22:30,248 - Parsiranje uspesno zavrseno!
INFO  01:22:45,695 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:22:45,751 - #2 program
INFO  01:22:45,751 - #48 p
INFO  01:22:45,751 - #48 int
INFO  01:22:45,753 - #48 x
INFO  01:22:45,753 - #38 ;
INFO  01:22:45,754 - #48 int
INFO  01:22:45,755 - #48 y
INFO  01:22:45,755 - #38 ;
INFO  01:22:45,755 - #21 record
INFO  01:22:45,755 - #48 Rekord
INFO  01:22:45,755 - #46 {
INFO  01:22:45,756 - #48 int
INFO  01:22:45,756 - #48 d
INFO  01:22:45,756 - #40 ,
INFO  01:22:45,756 - #48 c
INFO  01:22:45,756 - #38 ;
INFO  01:22:45,757 - #47 }
INFO  01:22:45,757 - #5 class
INFO  01:22:45,757 - #48 Klasa
INFO  01:22:45,758 - #46 {
INFO  01:22:45,758 - #48 int
INFO  01:22:45,759 - #48 b
INFO  01:22:45,759 - #40 ,
INFO  01:22:45,759 - #48 a
INFO  01:22:45,759 - #40 ,
INFO  01:22:45,760 - #48 g
INFO  01:22:45,760 - #38 ;
INFO  01:22:45,760 - #46 {
INFO  01:22:45,760 - #47 }
INFO  01:22:45,761 - #47 }
INFO  01:22:45,762 - #46 {
INFO  01:22:45,762 - #48 int
INFO  01:22:45,763 - #48 nesto
INFO  01:22:45,763 - #42 (
INFO  01:22:45,763 - #43 )
INFO  01:22:45,764 - #46 {
INFO  01:22:45,764 - #13 print
INFO  01:22:45,765 - #42 (
INFO  01:22:45,765 - #51 c
INFO  01:22:45,765 - #43 )
INFO  01:22:45,766 - #38 ;
INFO  01:22:45,766 - #13 print
INFO  01:22:45,767 - #42 (
INFO  01:22:45,767 - #50 5
INFO  01:22:45,767 - #43 )
INFO  01:22:45,767 - #38 ;
INFO  01:22:45,767 - #15 return
INFO  01:22:45,768 - #50 2
INFO  01:22:45,768 - #38 ;
INFO  01:22:45,768 - #47 }
INFO  01:22:45,768 - #3 void
INFO  01:22:45,769 - #48 kita2
INFO  01:22:45,769 - #42 (
INFO  01:22:45,770 - #43 )
INFO  01:22:45,770 - #46 {
INFO  01:22:45,770 - #47 }
INFO  01:22:45,770 - #3 void
INFO  01:22:45,770 - #48 kita
INFO  01:22:45,770 - #42 (
INFO  01:22:45,770 - #43 )
INFO  01:22:45,770 - #46 {
INFO  01:22:45,771 - #47 }
INFO  01:22:45,771 - #3 void
INFO  01:22:45,771 - #48 main
INFO  01:22:45,771 - #42 (
INFO  01:22:45,771 - #43 )
INFO  01:22:45,771 - #48 int
INFO  01:22:45,771 - #48 x
INFO  01:22:45,771 - #44 [
INFO  01:22:45,772 - #45 ]
INFO  01:22:45,772 - #40 ,
INFO  01:22:45,772 - #48 i
INFO  01:22:45,773 - #40 ,
INFO  01:22:45,773 - #48 l
INFO  01:22:45,773 - #38 ;
INFO  01:22:45,773 - #48 char
INFO  01:22:45,773 - #48 c
INFO  01:22:45,773 - #38 ;
INFO  01:22:45,773 - #48 Rekord
INFO  01:22:45,773 - #48 rek
INFO  01:22:45,773 - #38 ;
INFO  01:22:45,773 - #48 Klasa
INFO  01:22:45,774 - #48 neka
INFO  01:22:45,774 - #38 ;
INFO  01:22:45,774 - #46 {
INFO  01:22:45,774 - #48 i
INFO  01:22:45,774 - #35 =
INFO  01:22:45,775 - #50 0
INFO  01:22:45,775 - #38 ;
INFO  01:22:45,776 - #9 if
INFO  01:22:45,776 - #42 (
INFO  01:22:45,776 - #50 3
INFO  01:22:45,776 - #31 <
INFO  01:22:45,777 - #50 2
INFO  01:22:45,778 - #34 ||
INFO  01:22:45,779 - #49 false
INFO  01:22:45,779 - #43 )
INFO  01:22:45,779 - #46 {
INFO  01:22:45,779 - #13 print
INFO  01:22:45,780 - #42 (
INFO  01:22:45,781 - #50 1
INFO  01:22:45,781 - #43 )
INFO  01:22:45,781 - #38 ;
INFO  01:22:45,782 - #47 }
INFO  01:22:45,782 - #7 else
INFO  01:22:45,782 - #46 {
INFO  01:22:45,782 - #13 print
INFO  01:22:45,783 - #42 (
INFO  01:22:45,783 - #50 2
INFO  01:22:45,783 - #43 )
INFO  01:22:45,783 - #38 ;
INFO  01:22:45,783 - #47 }
INFO  01:22:45,783 - #47 }
INFO  01:22:45,783 - #47 }
INFO  01:22:45,789 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                SingleCondTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [SingleCondTerm]
                Or(
                ) [Or]
                SingleCondFact(
                  SingleCondFactJMP(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           false
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFactJMP]
                ) [SingleCondFact]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:22:45,790 - ===================================
INFO  01:22:45,794 - Deklarisana promenljiva x na liniji 2
INFO  01:22:45,794 - Deklarisana promenljiva y na liniji 2
INFO  01:22:45,794 - Deklarisan rekord Rekord na liniji 3
INFO  01:22:45,794 - Deklarisana promenljiva d na liniji 5
INFO  01:22:45,794 - Deklarisana promenljiva c na liniji 5
INFO  01:22:45,794 - Deklarisana  klasa Klasa na liniji 7
INFO  01:22:45,794 - Deklarisana poljeb na liniji 9
INFO  01:22:45,794 - Deklarisana poljeb na liniji 9
INFO  01:22:45,795 - Deklarisana poljea na liniji 9
INFO  01:22:45,795 - Deklarisana poljea na liniji 9
INFO  01:22:45,795 - Deklarisana poljeg na liniji 9
INFO  01:22:45,795 - Deklarisana poljeg na liniji 9
INFO  01:22:45,795 - Obradjuje se funkcija nesto na liniji 16
INFO  01:22:45,795 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:22:45,795 - Obradjuje se funkcija kita na liniji 23
INFO  01:22:45,795 - Obradjuje se funkcija main na liniji 26
INFO  01:22:45,795 - Deklarisana niz promenljiva x na liniji 26
INFO  01:22:45,795 - Deklarisana promenljiva i na liniji 26
INFO  01:22:45,795 - Deklarisana promenljiva l na liniji 26
INFO  01:22:45,795 - Deklarisana promenljiva c na liniji 26
INFO  01:22:45,795 - Deklarisana promenljiva rek na liniji 26
INFO  01:22:45,796 - Deklarisana promenljiva neka na liniji 26
INFO  01:22:45,796 - Pristupa se promenljivoj i na liniji 28
INFO  01:22:45,797 -  Deklarisanih promenljivih ima = 7
INFO  01:22:45,797 - ===================================
INFO  01:22:45,804 - neki kurac
INFO  01:22:45,804 - neko sranje
INFO  01:22:45,804 - neko sranje2
INFO  01:22:45,804 - bratskalovskiii
INFO  01:22:45,804 - matched
INFO  01:22:45,804 - Parsiranje uspesno zavrseno!
INFO  01:23:06,213 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:23:06,269 - #2 program
INFO  01:23:06,270 - #48 p
INFO  01:23:06,270 - #48 int
INFO  01:23:06,271 - #48 x
INFO  01:23:06,271 - #38 ;
INFO  01:23:06,272 - #48 int
INFO  01:23:06,272 - #48 y
INFO  01:23:06,272 - #38 ;
INFO  01:23:06,273 - #21 record
INFO  01:23:06,273 - #48 Rekord
INFO  01:23:06,273 - #46 {
INFO  01:23:06,273 - #48 int
INFO  01:23:06,274 - #48 d
INFO  01:23:06,274 - #40 ,
INFO  01:23:06,274 - #48 c
INFO  01:23:06,274 - #38 ;
INFO  01:23:06,274 - #47 }
INFO  01:23:06,274 - #5 class
INFO  01:23:06,275 - #48 Klasa
INFO  01:23:06,275 - #46 {
INFO  01:23:06,276 - #48 int
INFO  01:23:06,276 - #48 b
INFO  01:23:06,276 - #40 ,
INFO  01:23:06,276 - #48 a
INFO  01:23:06,276 - #40 ,
INFO  01:23:06,276 - #48 g
INFO  01:23:06,277 - #38 ;
INFO  01:23:06,277 - #46 {
INFO  01:23:06,277 - #47 }
INFO  01:23:06,277 - #47 }
INFO  01:23:06,278 - #46 {
INFO  01:23:06,278 - #48 int
INFO  01:23:06,278 - #48 nesto
INFO  01:23:06,278 - #42 (
INFO  01:23:06,278 - #43 )
INFO  01:23:06,279 - #46 {
INFO  01:23:06,279 - #13 print
INFO  01:23:06,280 - #42 (
INFO  01:23:06,280 - #51 c
INFO  01:23:06,280 - #43 )
INFO  01:23:06,281 - #38 ;
INFO  01:23:06,281 - #13 print
INFO  01:23:06,281 - #42 (
INFO  01:23:06,282 - #50 5
INFO  01:23:06,282 - #43 )
INFO  01:23:06,282 - #38 ;
INFO  01:23:06,282 - #15 return
INFO  01:23:06,282 - #50 2
INFO  01:23:06,282 - #38 ;
INFO  01:23:06,282 - #47 }
INFO  01:23:06,282 - #3 void
INFO  01:23:06,283 - #48 kita2
INFO  01:23:06,283 - #42 (
INFO  01:23:06,283 - #43 )
INFO  01:23:06,283 - #46 {
INFO  01:23:06,283 - #47 }
INFO  01:23:06,283 - #3 void
INFO  01:23:06,283 - #48 kita
INFO  01:23:06,283 - #42 (
INFO  01:23:06,283 - #43 )
INFO  01:23:06,283 - #46 {
INFO  01:23:06,283 - #47 }
INFO  01:23:06,284 - #3 void
INFO  01:23:06,284 - #48 main
INFO  01:23:06,284 - #42 (
INFO  01:23:06,284 - #43 )
INFO  01:23:06,284 - #48 int
INFO  01:23:06,284 - #48 x
INFO  01:23:06,284 - #44 [
INFO  01:23:06,284 - #45 ]
INFO  01:23:06,284 - #40 ,
INFO  01:23:06,284 - #48 i
INFO  01:23:06,285 - #40 ,
INFO  01:23:06,285 - #48 l
INFO  01:23:06,285 - #38 ;
INFO  01:23:06,285 - #48 char
INFO  01:23:06,285 - #48 c
INFO  01:23:06,285 - #38 ;
INFO  01:23:06,285 - #48 Rekord
INFO  01:23:06,285 - #48 rek
INFO  01:23:06,285 - #38 ;
INFO  01:23:06,285 - #48 Klasa
INFO  01:23:06,285 - #48 neka
INFO  01:23:06,285 - #38 ;
INFO  01:23:06,285 - #46 {
INFO  01:23:06,285 - #48 i
INFO  01:23:06,285 - #35 =
INFO  01:23:06,286 - #50 0
INFO  01:23:06,287 - #38 ;
INFO  01:23:06,287 - #9 if
INFO  01:23:06,287 - #42 (
INFO  01:23:06,288 - #50 3
INFO  01:23:06,288 - #31 <
INFO  01:23:06,288 - #50 2
INFO  01:23:06,289 - #34 ||
INFO  01:23:06,289 - #48 false||1
INFO  01:23:06,290 - #27 ==
INFO  01:23:06,290 - #50 1
INFO  01:23:06,291 - #33 &&
INFO  01:23:06,291 - #50 2
INFO  01:23:06,291 - #27 ==
INFO  01:23:06,291 - #50 2
INFO  01:23:06,291 - #43 )
INFO  01:23:06,291 - #46 {
INFO  01:23:06,292 - #13 print
INFO  01:23:06,292 - #42 (
INFO  01:23:06,292 - #50 1
INFO  01:23:06,292 - #43 )
INFO  01:23:06,292 - #38 ;
INFO  01:23:06,292 - #47 }
INFO  01:23:06,292 - #7 else
INFO  01:23:06,292 - #46 {
INFO  01:23:06,293 - #13 print
INFO  01:23:06,293 - #42 (
INFO  01:23:06,293 - #50 2
INFO  01:23:06,293 - #43 )
INFO  01:23:06,293 - #38 ;
INFO  01:23:06,293 - #47 }
INFO  01:23:06,294 - #47 }
INFO  01:23:06,294 - #47 }
INFO  01:23:06,299 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                SingleCondTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [SingleCondTerm]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            VarFactor(
                              Designator(
                                Base(
                                 false||1
                                ) [Base]
                                NoDesignatorAdded(
                                ) [NoDesignatorAdded]
                              ) [Designator]
                            ) [VarFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopEqual(
                        ) [RelopEqual]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:23:06,299 - ===================================
INFO  01:23:06,303 - Deklarisana promenljiva x na liniji 2
INFO  01:23:06,303 - Deklarisana promenljiva y na liniji 2
INFO  01:23:06,303 - Deklarisan rekord Rekord na liniji 3
INFO  01:23:06,303 - Deklarisana promenljiva d na liniji 5
INFO  01:23:06,303 - Deklarisana promenljiva c na liniji 5
INFO  01:23:06,303 - Deklarisana  klasa Klasa na liniji 7
INFO  01:23:06,303 - Deklarisana poljeb na liniji 9
INFO  01:23:06,303 - Deklarisana poljeb na liniji 9
INFO  01:23:06,303 - Deklarisana poljea na liniji 9
INFO  01:23:06,303 - Deklarisana poljea na liniji 9
INFO  01:23:06,303 - Deklarisana poljeg na liniji 9
INFO  01:23:06,303 - Deklarisana poljeg na liniji 9
INFO  01:23:06,303 - Obradjuje se funkcija nesto na liniji 16
INFO  01:23:06,304 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:23:06,304 - Obradjuje se funkcija kita na liniji 23
INFO  01:23:06,304 - Obradjuje se funkcija main na liniji 26
INFO  01:23:06,304 - Deklarisana niz promenljiva x na liniji 26
INFO  01:23:06,304 - Deklarisana promenljiva i na liniji 26
INFO  01:23:06,304 - Deklarisana promenljiva l na liniji 26
INFO  01:23:06,304 - Deklarisana promenljiva c na liniji 26
INFO  01:23:06,304 - Deklarisana promenljiva rek na liniji 26
INFO  01:23:06,304 - Deklarisana promenljiva neka na liniji 26
INFO  01:23:06,304 - Pristupa se promenljivoj i na liniji 28
ERROR 01:23:06,305 - Greska na liniji 29 :ime false||1 nije deklarisano!
ERROR 01:23:06,305 - Greska na liniji:29 nekompatibilni tipovi u izrazu za relacije!
ERROR 01:23:06,305 - Greska na liniji:29 parametri konjukcije nisu logickog tipa!
ERROR 01:23:06,305 - Greska na liniji:29 parametri disjunkcije nisu logickog tipa!
ERROR 01:23:06,305 - Greska na liniji:29 condition mora biti logickog tipa! 
INFO  01:23:06,305 -  Deklarisanih promenljivih ima = 7
INFO  01:23:06,305 - ===================================
ERROR 01:23:06,305 - Parsiranje NIJE uspesno zavrseno
INFO  01:23:28,032 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:23:28,091 - #2 program
INFO  01:23:28,091 - #48 p
INFO  01:23:28,091 - #48 int
INFO  01:23:28,093 - #48 x
INFO  01:23:28,093 - #38 ;
INFO  01:23:28,094 - #48 int
INFO  01:23:28,094 - #48 y
INFO  01:23:28,094 - #38 ;
INFO  01:23:28,094 - #21 record
INFO  01:23:28,095 - #48 Rekord
INFO  01:23:28,095 - #46 {
INFO  01:23:28,095 - #48 int
INFO  01:23:28,096 - #48 d
INFO  01:23:28,096 - #40 ,
INFO  01:23:28,096 - #48 c
INFO  01:23:28,096 - #38 ;
INFO  01:23:28,096 - #47 }
INFO  01:23:28,096 - #5 class
INFO  01:23:28,097 - #48 Klasa
INFO  01:23:28,097 - #46 {
INFO  01:23:28,098 - #48 int
INFO  01:23:28,098 - #48 b
INFO  01:23:28,098 - #40 ,
INFO  01:23:28,098 - #48 a
INFO  01:23:28,098 - #40 ,
INFO  01:23:28,098 - #48 g
INFO  01:23:28,098 - #38 ;
INFO  01:23:28,098 - #46 {
INFO  01:23:28,099 - #47 }
INFO  01:23:28,099 - #47 }
INFO  01:23:28,099 - #46 {
INFO  01:23:28,100 - #48 int
INFO  01:23:28,100 - #48 nesto
INFO  01:23:28,101 - #42 (
INFO  01:23:28,101 - #43 )
INFO  01:23:28,101 - #46 {
INFO  01:23:28,101 - #13 print
INFO  01:23:28,102 - #42 (
INFO  01:23:28,103 - #51 c
INFO  01:23:28,103 - #43 )
INFO  01:23:28,103 - #38 ;
INFO  01:23:28,104 - #13 print
INFO  01:23:28,104 - #42 (
INFO  01:23:28,104 - #50 5
INFO  01:23:28,104 - #43 )
INFO  01:23:28,104 - #38 ;
INFO  01:23:28,104 - #15 return
INFO  01:23:28,104 - #50 2
INFO  01:23:28,104 - #38 ;
INFO  01:23:28,104 - #47 }
INFO  01:23:28,104 - #3 void
INFO  01:23:28,105 - #48 kita2
INFO  01:23:28,105 - #42 (
INFO  01:23:28,105 - #43 )
INFO  01:23:28,105 - #46 {
INFO  01:23:28,106 - #47 }
INFO  01:23:28,106 - #3 void
INFO  01:23:28,106 - #48 kita
INFO  01:23:28,106 - #42 (
INFO  01:23:28,106 - #43 )
INFO  01:23:28,106 - #46 {
INFO  01:23:28,106 - #47 }
INFO  01:23:28,106 - #3 void
INFO  01:23:28,106 - #48 main
INFO  01:23:28,106 - #42 (
INFO  01:23:28,106 - #43 )
INFO  01:23:28,106 - #48 int
INFO  01:23:28,106 - #48 x
INFO  01:23:28,106 - #44 [
INFO  01:23:28,106 - #45 ]
INFO  01:23:28,106 - #40 ,
INFO  01:23:28,107 - #48 i
INFO  01:23:28,107 - #40 ,
INFO  01:23:28,107 - #48 l
INFO  01:23:28,107 - #38 ;
INFO  01:23:28,107 - #48 char
INFO  01:23:28,107 - #48 c
INFO  01:23:28,107 - #38 ;
INFO  01:23:28,107 - #48 Rekord
INFO  01:23:28,107 - #48 rek
INFO  01:23:28,107 - #38 ;
INFO  01:23:28,107 - #48 Klasa
INFO  01:23:28,108 - #48 neka
INFO  01:23:28,108 - #38 ;
INFO  01:23:28,108 - #46 {
INFO  01:23:28,108 - #48 i
INFO  01:23:28,108 - #35 =
INFO  01:23:28,109 - #50 0
INFO  01:23:28,109 - #38 ;
INFO  01:23:28,109 - #9 if
INFO  01:23:28,110 - #42 (
INFO  01:23:28,110 - #50 3
INFO  01:23:28,110 - #31 <
INFO  01:23:28,110 - #50 4
INFO  01:23:28,111 - #34 ||
INFO  01:23:28,112 - #48 false||1
INFO  01:23:28,112 - #27 ==
INFO  01:23:28,112 - #50 1
INFO  01:23:28,113 - #33 &&
INFO  01:23:28,113 - #50 2
INFO  01:23:28,113 - #27 ==
INFO  01:23:28,113 - #50 2
INFO  01:23:28,113 - #43 )
INFO  01:23:28,114 - #46 {
INFO  01:23:28,114 - #13 print
INFO  01:23:28,114 - #42 (
INFO  01:23:28,114 - #50 1
INFO  01:23:28,114 - #43 )
INFO  01:23:28,114 - #38 ;
INFO  01:23:28,114 - #47 }
INFO  01:23:28,114 - #7 else
INFO  01:23:28,114 - #46 {
INFO  01:23:28,114 - #13 print
INFO  01:23:28,115 - #42 (
INFO  01:23:28,115 - #50 2
INFO  01:23:28,115 - #43 )
INFO  01:23:28,115 - #38 ;
INFO  01:23:28,115 - #47 }
INFO  01:23:28,115 - #47 }
INFO  01:23:28,115 - #47 }
INFO  01:23:28,121 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                SingleCondTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [SingleCondTerm]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            VarFactor(
                              Designator(
                                Base(
                                 false||1
                                ) [Base]
                                NoDesignatorAdded(
                                ) [NoDesignatorAdded]
                              ) [Designator]
                            ) [VarFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopEqual(
                        ) [RelopEqual]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:23:28,121 - ===================================
INFO  01:23:28,125 - Deklarisana promenljiva x na liniji 2
INFO  01:23:28,125 - Deklarisana promenljiva y na liniji 2
INFO  01:23:28,125 - Deklarisan rekord Rekord na liniji 3
INFO  01:23:28,125 - Deklarisana promenljiva d na liniji 5
INFO  01:23:28,125 - Deklarisana promenljiva c na liniji 5
INFO  01:23:28,125 - Deklarisana  klasa Klasa na liniji 7
INFO  01:23:28,125 - Deklarisana poljeb na liniji 9
INFO  01:23:28,126 - Deklarisana poljeb na liniji 9
INFO  01:23:28,126 - Deklarisana poljea na liniji 9
INFO  01:23:28,126 - Deklarisana poljea na liniji 9
INFO  01:23:28,126 - Deklarisana poljeg na liniji 9
INFO  01:23:28,126 - Deklarisana poljeg na liniji 9
INFO  01:23:28,126 - Obradjuje se funkcija nesto na liniji 16
INFO  01:23:28,126 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:23:28,126 - Obradjuje se funkcija kita na liniji 23
INFO  01:23:28,126 - Obradjuje se funkcija main na liniji 26
INFO  01:23:28,126 - Deklarisana niz promenljiva x na liniji 26
INFO  01:23:28,126 - Deklarisana promenljiva i na liniji 26
INFO  01:23:28,126 - Deklarisana promenljiva l na liniji 26
INFO  01:23:28,126 - Deklarisana promenljiva c na liniji 26
INFO  01:23:28,127 - Deklarisana promenljiva rek na liniji 26
INFO  01:23:28,127 - Deklarisana promenljiva neka na liniji 26
INFO  01:23:28,127 - Pristupa se promenljivoj i na liniji 28
ERROR 01:23:28,127 - Greska na liniji 29 :ime false||1 nije deklarisano!
ERROR 01:23:28,127 - Greska na liniji:29 nekompatibilni tipovi u izrazu za relacije!
ERROR 01:23:28,127 - Greska na liniji:29 parametri konjukcije nisu logickog tipa!
ERROR 01:23:28,127 - Greska na liniji:29 parametri disjunkcije nisu logickog tipa!
ERROR 01:23:28,128 - Greska na liniji:29 condition mora biti logickog tipa! 
INFO  01:23:28,128 -  Deklarisanih promenljivih ima = 7
INFO  01:23:28,128 - ===================================
ERROR 01:23:28,128 - Parsiranje NIJE uspesno zavrseno
INFO  01:23:50,230 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:23:50,285 - #2 program
INFO  01:23:50,285 - #48 p
INFO  01:23:50,285 - #48 int
INFO  01:23:50,286 - #48 x
INFO  01:23:50,287 - #38 ;
INFO  01:23:50,288 - #48 int
INFO  01:23:50,288 - #48 y
INFO  01:23:50,288 - #38 ;
INFO  01:23:50,288 - #21 record
INFO  01:23:50,288 - #48 Rekord
INFO  01:23:50,288 - #46 {
INFO  01:23:50,289 - #48 int
INFO  01:23:50,289 - #48 d
INFO  01:23:50,289 - #40 ,
INFO  01:23:50,289 - #48 c
INFO  01:23:50,289 - #38 ;
INFO  01:23:50,290 - #47 }
INFO  01:23:50,290 - #5 class
INFO  01:23:50,291 - #48 Klasa
INFO  01:23:50,291 - #46 {
INFO  01:23:50,292 - #48 int
INFO  01:23:50,292 - #48 b
INFO  01:23:50,292 - #40 ,
INFO  01:23:50,292 - #48 a
INFO  01:23:50,292 - #40 ,
INFO  01:23:50,292 - #48 g
INFO  01:23:50,292 - #38 ;
INFO  01:23:50,292 - #46 {
INFO  01:23:50,292 - #47 }
INFO  01:23:50,293 - #47 }
INFO  01:23:50,293 - #46 {
INFO  01:23:50,293 - #48 int
INFO  01:23:50,294 - #48 nesto
INFO  01:23:50,294 - #42 (
INFO  01:23:50,294 - #43 )
INFO  01:23:50,294 - #46 {
INFO  01:23:50,295 - #13 print
INFO  01:23:50,296 - #42 (
INFO  01:23:50,296 - #51 c
INFO  01:23:50,296 - #43 )
INFO  01:23:50,297 - #38 ;
INFO  01:23:50,297 - #13 print
INFO  01:23:50,297 - #42 (
INFO  01:23:50,297 - #50 5
INFO  01:23:50,297 - #43 )
INFO  01:23:50,298 - #38 ;
INFO  01:23:50,298 - #15 return
INFO  01:23:50,298 - #50 2
INFO  01:23:50,298 - #38 ;
INFO  01:23:50,298 - #47 }
INFO  01:23:50,298 - #3 void
INFO  01:23:50,299 - #48 kita2
INFO  01:23:50,299 - #42 (
INFO  01:23:50,299 - #43 )
INFO  01:23:50,299 - #46 {
INFO  01:23:50,299 - #47 }
INFO  01:23:50,299 - #3 void
INFO  01:23:50,299 - #48 kita
INFO  01:23:50,299 - #42 (
INFO  01:23:50,299 - #43 )
INFO  01:23:50,300 - #46 {
INFO  01:23:50,300 - #47 }
INFO  01:23:50,300 - #3 void
INFO  01:23:50,300 - #48 main
INFO  01:23:50,300 - #42 (
INFO  01:23:50,300 - #43 )
INFO  01:23:50,300 - #48 int
INFO  01:23:50,300 - #48 x
INFO  01:23:50,300 - #44 [
INFO  01:23:50,300 - #45 ]
INFO  01:23:50,300 - #40 ,
INFO  01:23:50,301 - #48 i
INFO  01:23:50,301 - #40 ,
INFO  01:23:50,301 - #48 l
INFO  01:23:50,301 - #38 ;
INFO  01:23:50,301 - #48 char
INFO  01:23:50,301 - #48 c
INFO  01:23:50,301 - #38 ;
INFO  01:23:50,301 - #48 Rekord
INFO  01:23:50,301 - #48 rek
INFO  01:23:50,301 - #38 ;
INFO  01:23:50,301 - #48 Klasa
INFO  01:23:50,301 - #48 neka
INFO  01:23:50,302 - #38 ;
INFO  01:23:50,302 - #46 {
INFO  01:23:50,302 - #48 i
INFO  01:23:50,302 - #35 =
INFO  01:23:50,303 - #50 0
INFO  01:23:50,303 - #38 ;
INFO  01:23:50,304 - #9 if
INFO  01:23:50,304 - #42 (
INFO  01:23:50,304 - #50 3
INFO  01:23:50,304 - #31 <
INFO  01:23:50,304 - #50 4
INFO  01:23:50,305 - #34 ||
INFO  01:23:50,306 - #48 true||1
INFO  01:23:50,307 - #27 ==
INFO  01:23:50,308 - #50 1
INFO  01:23:50,309 - #33 &&
INFO  01:23:50,309 - #50 2
INFO  01:23:50,312 - #27 ==
INFO  01:23:50,312 - #50 2
INFO  01:23:50,312 - #43 )
INFO  01:23:50,312 - #46 {
INFO  01:23:50,312 - #13 print
INFO  01:23:50,312 - #42 (
INFO  01:23:50,312 - #50 1
INFO  01:23:50,312 - #43 )
INFO  01:23:50,312 - #38 ;
INFO  01:23:50,312 - #47 }
INFO  01:23:50,312 - #7 else
INFO  01:23:50,313 - #46 {
INFO  01:23:50,313 - #13 print
INFO  01:23:50,313 - #42 (
INFO  01:23:50,314 - #50 2
INFO  01:23:50,314 - #43 )
INFO  01:23:50,314 - #38 ;
INFO  01:23:50,314 - #47 }
INFO  01:23:50,314 - #47 }
INFO  01:23:50,314 - #47 }
INFO  01:23:50,320 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                SingleCondTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [SingleCondTerm]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            VarFactor(
                              Designator(
                                Base(
                                 true||1
                                ) [Base]
                                NoDesignatorAdded(
                                ) [NoDesignatorAdded]
                              ) [Designator]
                            ) [VarFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopEqual(
                        ) [RelopEqual]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:23:50,320 - ===================================
INFO  01:23:50,324 - Deklarisana promenljiva x na liniji 2
INFO  01:23:50,324 - Deklarisana promenljiva y na liniji 2
INFO  01:23:50,324 - Deklarisan rekord Rekord na liniji 3
INFO  01:23:50,324 - Deklarisana promenljiva d na liniji 5
INFO  01:23:50,324 - Deklarisana promenljiva c na liniji 5
INFO  01:23:50,324 - Deklarisana  klasa Klasa na liniji 7
INFO  01:23:50,324 - Deklarisana poljeb na liniji 9
INFO  01:23:50,325 - Deklarisana poljeb na liniji 9
INFO  01:23:50,325 - Deklarisana poljea na liniji 9
INFO  01:23:50,325 - Deklarisana poljea na liniji 9
INFO  01:23:50,325 - Deklarisana poljeg na liniji 9
INFO  01:23:50,325 - Deklarisana poljeg na liniji 9
INFO  01:23:50,325 - Obradjuje se funkcija nesto na liniji 16
INFO  01:23:50,325 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:23:50,325 - Obradjuje se funkcija kita na liniji 23
INFO  01:23:50,325 - Obradjuje se funkcija main na liniji 26
INFO  01:23:50,325 - Deklarisana niz promenljiva x na liniji 26
INFO  01:23:50,326 - Deklarisana promenljiva i na liniji 26
INFO  01:23:50,326 - Deklarisana promenljiva l na liniji 26
INFO  01:23:50,326 - Deklarisana promenljiva c na liniji 26
INFO  01:23:50,326 - Deklarisana promenljiva rek na liniji 26
INFO  01:23:50,326 - Deklarisana promenljiva neka na liniji 26
INFO  01:23:50,326 - Pristupa se promenljivoj i na liniji 28
ERROR 01:23:50,327 - Greska na liniji 29 :ime true||1 nije deklarisano!
ERROR 01:23:50,327 - Greska na liniji:29 nekompatibilni tipovi u izrazu za relacije!
ERROR 01:23:50,327 - Greska na liniji:29 parametri konjukcije nisu logickog tipa!
ERROR 01:23:50,327 - Greska na liniji:29 parametri disjunkcije nisu logickog tipa!
ERROR 01:23:50,327 - Greska na liniji:29 condition mora biti logickog tipa! 
INFO  01:23:50,327 -  Deklarisanih promenljivih ima = 7
INFO  01:23:50,327 - ===================================
ERROR 01:23:50,327 - Parsiranje NIJE uspesno zavrseno
INFO  01:24:02,122 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:24:02,179 - #2 program
INFO  01:24:02,179 - #48 p
INFO  01:24:02,179 - #48 int
INFO  01:24:02,180 - #48 x
INFO  01:24:02,180 - #38 ;
INFO  01:24:02,181 - #48 int
INFO  01:24:02,182 - #48 y
INFO  01:24:02,182 - #38 ;
INFO  01:24:02,182 - #21 record
INFO  01:24:02,182 - #48 Rekord
INFO  01:24:02,182 - #46 {
INFO  01:24:02,183 - #48 int
INFO  01:24:02,183 - #48 d
INFO  01:24:02,184 - #40 ,
INFO  01:24:02,184 - #48 c
INFO  01:24:02,184 - #38 ;
INFO  01:24:02,184 - #47 }
INFO  01:24:02,184 - #5 class
INFO  01:24:02,185 - #48 Klasa
INFO  01:24:02,185 - #46 {
INFO  01:24:02,185 - #48 int
INFO  01:24:02,186 - #48 b
INFO  01:24:02,186 - #40 ,
INFO  01:24:02,186 - #48 a
INFO  01:24:02,186 - #40 ,
INFO  01:24:02,186 - #48 g
INFO  01:24:02,186 - #38 ;
INFO  01:24:02,186 - #46 {
INFO  01:24:02,186 - #47 }
INFO  01:24:02,186 - #47 }
INFO  01:24:02,187 - #46 {
INFO  01:24:02,187 - #48 int
INFO  01:24:02,188 - #48 nesto
INFO  01:24:02,188 - #42 (
INFO  01:24:02,188 - #43 )
INFO  01:24:02,188 - #46 {
INFO  01:24:02,188 - #13 print
INFO  01:24:02,189 - #42 (
INFO  01:24:02,189 - #51 c
INFO  01:24:02,190 - #43 )
INFO  01:24:02,190 - #38 ;
INFO  01:24:02,190 - #13 print
INFO  01:24:02,191 - #42 (
INFO  01:24:02,191 - #50 5
INFO  01:24:02,191 - #43 )
INFO  01:24:02,191 - #38 ;
INFO  01:24:02,191 - #15 return
INFO  01:24:02,191 - #50 2
INFO  01:24:02,191 - #38 ;
INFO  01:24:02,191 - #47 }
INFO  01:24:02,191 - #3 void
INFO  01:24:02,192 - #48 kita2
INFO  01:24:02,192 - #42 (
INFO  01:24:02,192 - #43 )
INFO  01:24:02,192 - #46 {
INFO  01:24:02,192 - #47 }
INFO  01:24:02,193 - #3 void
INFO  01:24:02,193 - #48 kita
INFO  01:24:02,193 - #42 (
INFO  01:24:02,193 - #43 )
INFO  01:24:02,193 - #46 {
INFO  01:24:02,193 - #47 }
INFO  01:24:02,193 - #3 void
INFO  01:24:02,193 - #48 main
INFO  01:24:02,193 - #42 (
INFO  01:24:02,194 - #43 )
INFO  01:24:02,194 - #48 int
INFO  01:24:02,194 - #48 x
INFO  01:24:02,194 - #44 [
INFO  01:24:02,194 - #45 ]
INFO  01:24:02,194 - #40 ,
INFO  01:24:02,195 - #48 i
INFO  01:24:02,195 - #40 ,
INFO  01:24:02,195 - #48 l
INFO  01:24:02,195 - #38 ;
INFO  01:24:02,195 - #48 char
INFO  01:24:02,195 - #48 c
INFO  01:24:02,196 - #38 ;
INFO  01:24:02,196 - #48 Rekord
INFO  01:24:02,196 - #48 rek
INFO  01:24:02,196 - #38 ;
INFO  01:24:02,196 - #48 Klasa
INFO  01:24:02,196 - #48 neka
INFO  01:24:02,196 - #38 ;
INFO  01:24:02,196 - #46 {
INFO  01:24:02,196 - #48 i
INFO  01:24:02,196 - #35 =
INFO  01:24:02,197 - #50 0
INFO  01:24:02,198 - #38 ;
INFO  01:24:02,198 - #9 if
INFO  01:24:02,198 - #42 (
INFO  01:24:02,199 - #50 3
INFO  01:24:02,199 - #31 <
INFO  01:24:02,199 - #50 4
INFO  01:24:02,200 - #34 ||
INFO  01:24:02,201 - #49 true
INFO  01:24:02,201 - #34 ||
INFO  01:24:02,202 - #50 1
INFO  01:24:02,202 - #27 ==
INFO  01:24:02,202 - #50 1
INFO  01:24:02,204 - #33 &&
INFO  01:24:02,204 - #50 2
INFO  01:24:02,204 - #27 ==
INFO  01:24:02,204 - #50 2
INFO  01:24:02,204 - #43 )
INFO  01:24:02,205 - #46 {
INFO  01:24:02,205 - #13 print
INFO  01:24:02,205 - #42 (
INFO  01:24:02,205 - #50 1
INFO  01:24:02,205 - #43 )
INFO  01:24:02,205 - #38 ;
INFO  01:24:02,205 - #47 }
INFO  01:24:02,205 - #7 else
INFO  01:24:02,205 - #46 {
INFO  01:24:02,206 - #13 print
INFO  01:24:02,206 - #42 (
INFO  01:24:02,206 - #50 2
INFO  01:24:02,206 - #43 )
INFO  01:24:02,206 - #38 ;
INFO  01:24:02,206 - #47 }
INFO  01:24:02,206 - #47 }
INFO  01:24:02,206 - #47 }
INFO  01:24:02,211 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               3
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               4
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    SingleCondFactJMP(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             true
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopEqual(
                        ) [RelopEqual]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:24:02,212 - ===================================
INFO  01:24:02,215 - Deklarisana promenljiva x na liniji 2
INFO  01:24:02,216 - Deklarisana promenljiva y na liniji 2
INFO  01:24:02,216 - Deklarisan rekord Rekord na liniji 3
INFO  01:24:02,216 - Deklarisana promenljiva d na liniji 5
INFO  01:24:02,216 - Deklarisana promenljiva c na liniji 5
INFO  01:24:02,216 - Deklarisana  klasa Klasa na liniji 7
INFO  01:24:02,216 - Deklarisana poljeb na liniji 9
INFO  01:24:02,216 - Deklarisana poljeb na liniji 9
INFO  01:24:02,216 - Deklarisana poljea na liniji 9
INFO  01:24:02,216 - Deklarisana poljea na liniji 9
INFO  01:24:02,216 - Deklarisana poljeg na liniji 9
INFO  01:24:02,216 - Deklarisana poljeg na liniji 9
INFO  01:24:02,216 - Obradjuje se funkcija nesto na liniji 16
INFO  01:24:02,216 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:24:02,216 - Obradjuje se funkcija kita na liniji 23
INFO  01:24:02,217 - Obradjuje se funkcija main na liniji 26
INFO  01:24:02,217 - Deklarisana niz promenljiva x na liniji 26
INFO  01:24:02,217 - Deklarisana promenljiva i na liniji 26
INFO  01:24:02,217 - Deklarisana promenljiva l na liniji 26
INFO  01:24:02,217 - Deklarisana promenljiva c na liniji 26
INFO  01:24:02,217 - Deklarisana promenljiva rek na liniji 26
INFO  01:24:02,217 - Deklarisana promenljiva neka na liniji 26
INFO  01:24:02,217 - Pristupa se promenljivoj i na liniji 28
INFO  01:24:02,218 -  Deklarisanih promenljivih ima = 7
INFO  01:24:02,218 - ===================================
INFO  01:24:02,223 - neki kurac
INFO  01:24:02,223 - neko sranje
INFO  01:24:02,223 - neko sranje2
INFO  01:24:02,223 - neko sranje
INFO  01:24:02,223 - neko sranje2
INFO  01:24:02,223 - neko sranje
INFO  01:24:02,223 - neko sranje
INFO  01:24:02,223 - matched
INFO  01:24:02,224 - Parsiranje uspesno zavrseno!
INFO  01:24:18,362 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:24:18,417 - #2 program
INFO  01:24:18,418 - #48 p
INFO  01:24:18,418 - #48 int
INFO  01:24:18,419 - #48 x
INFO  01:24:18,420 - #38 ;
INFO  01:24:18,421 - #48 int
INFO  01:24:18,421 - #48 y
INFO  01:24:18,422 - #38 ;
INFO  01:24:18,422 - #21 record
INFO  01:24:18,422 - #48 Rekord
INFO  01:24:18,422 - #46 {
INFO  01:24:18,422 - #48 int
INFO  01:24:18,423 - #48 d
INFO  01:24:18,423 - #40 ,
INFO  01:24:18,423 - #48 c
INFO  01:24:18,423 - #38 ;
INFO  01:24:18,423 - #47 }
INFO  01:24:18,424 - #5 class
INFO  01:24:18,424 - #48 Klasa
INFO  01:24:18,424 - #46 {
INFO  01:24:18,425 - #48 int
INFO  01:24:18,425 - #48 b
INFO  01:24:18,425 - #40 ,
INFO  01:24:18,426 - #48 a
INFO  01:24:18,426 - #40 ,
INFO  01:24:18,426 - #48 g
INFO  01:24:18,426 - #38 ;
INFO  01:24:18,426 - #46 {
INFO  01:24:18,426 - #47 }
INFO  01:24:18,427 - #47 }
INFO  01:24:18,427 - #46 {
INFO  01:24:18,427 - #48 int
INFO  01:24:18,428 - #48 nesto
INFO  01:24:18,428 - #42 (
INFO  01:24:18,428 - #43 )
INFO  01:24:18,428 - #46 {
INFO  01:24:18,429 - #13 print
INFO  01:24:18,430 - #42 (
INFO  01:24:18,430 - #51 c
INFO  01:24:18,430 - #43 )
INFO  01:24:18,431 - #38 ;
INFO  01:24:18,431 - #13 print
INFO  01:24:18,431 - #42 (
INFO  01:24:18,431 - #50 5
INFO  01:24:18,431 - #43 )
INFO  01:24:18,431 - #38 ;
INFO  01:24:18,431 - #15 return
INFO  01:24:18,431 - #50 2
INFO  01:24:18,431 - #38 ;
INFO  01:24:18,432 - #47 }
INFO  01:24:18,432 - #3 void
INFO  01:24:18,432 - #48 kita2
INFO  01:24:18,432 - #42 (
INFO  01:24:18,433 - #43 )
INFO  01:24:18,433 - #46 {
INFO  01:24:18,433 - #47 }
INFO  01:24:18,433 - #3 void
INFO  01:24:18,433 - #48 kita
INFO  01:24:18,433 - #42 (
INFO  01:24:18,433 - #43 )
INFO  01:24:18,433 - #46 {
INFO  01:24:18,433 - #47 }
INFO  01:24:18,433 - #3 void
INFO  01:24:18,433 - #48 main
INFO  01:24:18,433 - #42 (
INFO  01:24:18,434 - #43 )
INFO  01:24:18,434 - #48 int
INFO  01:24:18,434 - #48 x
INFO  01:24:18,434 - #44 [
INFO  01:24:18,434 - #45 ]
INFO  01:24:18,434 - #40 ,
INFO  01:24:18,435 - #48 i
INFO  01:24:18,435 - #40 ,
INFO  01:24:18,435 - #48 l
INFO  01:24:18,435 - #38 ;
INFO  01:24:18,435 - #48 char
INFO  01:24:18,435 - #48 c
INFO  01:24:18,435 - #38 ;
INFO  01:24:18,435 - #48 Rekord
INFO  01:24:18,435 - #48 rek
INFO  01:24:18,435 - #38 ;
INFO  01:24:18,435 - #48 Klasa
INFO  01:24:18,435 - #48 neka
INFO  01:24:18,435 - #38 ;
INFO  01:24:18,435 - #46 {
INFO  01:24:18,435 - #48 i
INFO  01:24:18,435 - #35 =
INFO  01:24:18,436 - #50 0
INFO  01:24:18,437 - #38 ;
INFO  01:24:18,437 - #9 if
INFO  01:24:18,437 - #42 (
INFO  01:24:18,438 - #50 3
INFO  01:24:18,438 - #31 <
INFO  01:24:18,438 - #50 2
INFO  01:24:18,438 - #34 ||
INFO  01:24:18,439 - #49 true
INFO  01:24:18,440 - #34 ||
INFO  01:24:18,440 - #50 1
INFO  01:24:18,440 - #27 ==
INFO  01:24:18,440 - #50 1
INFO  01:24:18,442 - #33 &&
INFO  01:24:18,442 - #50 2
INFO  01:24:18,443 - #27 ==
INFO  01:24:18,443 - #50 2
INFO  01:24:18,443 - #43 )
INFO  01:24:18,443 - #46 {
INFO  01:24:18,443 - #13 print
INFO  01:24:18,443 - #42 (
INFO  01:24:18,443 - #50 1
INFO  01:24:18,443 - #43 )
INFO  01:24:18,444 - #38 ;
INFO  01:24:18,444 - #47 }
INFO  01:24:18,444 - #7 else
INFO  01:24:18,444 - #46 {
INFO  01:24:18,444 - #13 print
INFO  01:24:18,444 - #42 (
INFO  01:24:18,445 - #50 2
INFO  01:24:18,445 - #43 )
INFO  01:24:18,445 - #38 ;
INFO  01:24:18,445 - #47 }
INFO  01:24:18,445 - #47 }
INFO  01:24:18,445 - #47 }
INFO  01:24:18,451 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               3
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    SingleCondFactJMP(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             true
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopEqual(
                        ) [RelopEqual]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:24:18,451 - ===================================
INFO  01:24:18,455 - Deklarisana promenljiva x na liniji 2
INFO  01:24:18,455 - Deklarisana promenljiva y na liniji 2
INFO  01:24:18,455 - Deklarisan rekord Rekord na liniji 3
INFO  01:24:18,455 - Deklarisana promenljiva d na liniji 5
INFO  01:24:18,455 - Deklarisana promenljiva c na liniji 5
INFO  01:24:18,455 - Deklarisana  klasa Klasa na liniji 7
INFO  01:24:18,455 - Deklarisana poljeb na liniji 9
INFO  01:24:18,455 - Deklarisana poljeb na liniji 9
INFO  01:24:18,455 - Deklarisana poljea na liniji 9
INFO  01:24:18,455 - Deklarisana poljea na liniji 9
INFO  01:24:18,455 - Deklarisana poljeg na liniji 9
INFO  01:24:18,455 - Deklarisana poljeg na liniji 9
INFO  01:24:18,455 - Obradjuje se funkcija nesto na liniji 16
INFO  01:24:18,455 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:24:18,456 - Obradjuje se funkcija kita na liniji 23
INFO  01:24:18,456 - Obradjuje se funkcija main na liniji 26
INFO  01:24:18,456 - Deklarisana niz promenljiva x na liniji 26
INFO  01:24:18,456 - Deklarisana promenljiva i na liniji 26
INFO  01:24:18,456 - Deklarisana promenljiva l na liniji 26
INFO  01:24:18,456 - Deklarisana promenljiva c na liniji 26
INFO  01:24:18,456 - Deklarisana promenljiva rek na liniji 26
INFO  01:24:18,456 - Deklarisana promenljiva neka na liniji 26
INFO  01:24:18,456 - Pristupa se promenljivoj i na liniji 28
INFO  01:24:18,457 -  Deklarisanih promenljivih ima = 7
INFO  01:24:18,457 - ===================================
INFO  01:24:18,462 - neki kurac
INFO  01:24:18,462 - neko sranje
INFO  01:24:18,462 - neko sranje2
INFO  01:24:18,462 - neko sranje
INFO  01:24:18,462 - neko sranje2
INFO  01:24:18,462 - neko sranje
INFO  01:24:18,462 - neko sranje
INFO  01:24:18,462 - matched
INFO  01:24:18,463 - Parsiranje uspesno zavrseno!
INFO  01:24:29,034 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:24:29,091 - #2 program
INFO  01:24:29,091 - #48 p
INFO  01:24:29,091 - #48 int
INFO  01:24:29,092 - #48 x
INFO  01:24:29,093 - #38 ;
INFO  01:24:29,094 - #48 int
INFO  01:24:29,094 - #48 y
INFO  01:24:29,094 - #38 ;
INFO  01:24:29,094 - #21 record
INFO  01:24:29,095 - #48 Rekord
INFO  01:24:29,095 - #46 {
INFO  01:24:29,095 - #48 int
INFO  01:24:29,096 - #48 d
INFO  01:24:29,096 - #40 ,
INFO  01:24:29,096 - #48 c
INFO  01:24:29,096 - #38 ;
INFO  01:24:29,096 - #47 }
INFO  01:24:29,096 - #5 class
INFO  01:24:29,097 - #48 Klasa
INFO  01:24:29,097 - #46 {
INFO  01:24:29,098 - #48 int
INFO  01:24:29,098 - #48 b
INFO  01:24:29,098 - #40 ,
INFO  01:24:29,098 - #48 a
INFO  01:24:29,098 - #40 ,
INFO  01:24:29,099 - #48 g
INFO  01:24:29,099 - #38 ;
INFO  01:24:29,099 - #46 {
INFO  01:24:29,099 - #47 }
INFO  01:24:29,099 - #47 }
INFO  01:24:29,100 - #46 {
INFO  01:24:29,100 - #48 int
INFO  01:24:29,100 - #48 nesto
INFO  01:24:29,100 - #42 (
INFO  01:24:29,101 - #43 )
INFO  01:24:29,101 - #46 {
INFO  01:24:29,101 - #13 print
INFO  01:24:29,102 - #42 (
INFO  01:24:29,103 - #51 c
INFO  01:24:29,103 - #43 )
INFO  01:24:29,104 - #38 ;
INFO  01:24:29,104 - #13 print
INFO  01:24:29,104 - #42 (
INFO  01:24:29,104 - #50 5
INFO  01:24:29,104 - #43 )
INFO  01:24:29,104 - #38 ;
INFO  01:24:29,104 - #15 return
INFO  01:24:29,104 - #50 2
INFO  01:24:29,104 - #38 ;
INFO  01:24:29,105 - #47 }
INFO  01:24:29,105 - #3 void
INFO  01:24:29,106 - #48 kita2
INFO  01:24:29,106 - #42 (
INFO  01:24:29,106 - #43 )
INFO  01:24:29,106 - #46 {
INFO  01:24:29,106 - #47 }
INFO  01:24:29,106 - #3 void
INFO  01:24:29,107 - #48 kita
INFO  01:24:29,107 - #42 (
INFO  01:24:29,107 - #43 )
INFO  01:24:29,107 - #46 {
INFO  01:24:29,107 - #47 }
INFO  01:24:29,107 - #3 void
INFO  01:24:29,107 - #48 main
INFO  01:24:29,107 - #42 (
INFO  01:24:29,107 - #43 )
INFO  01:24:29,107 - #48 int
INFO  01:24:29,107 - #48 x
INFO  01:24:29,108 - #44 [
INFO  01:24:29,108 - #45 ]
INFO  01:24:29,108 - #40 ,
INFO  01:24:29,108 - #48 i
INFO  01:24:29,108 - #40 ,
INFO  01:24:29,108 - #48 l
INFO  01:24:29,108 - #38 ;
INFO  01:24:29,108 - #48 char
INFO  01:24:29,109 - #48 c
INFO  01:24:29,109 - #38 ;
INFO  01:24:29,109 - #48 Rekord
INFO  01:24:29,109 - #48 rek
INFO  01:24:29,109 - #38 ;
INFO  01:24:29,109 - #48 Klasa
INFO  01:24:29,109 - #48 neka
INFO  01:24:29,109 - #38 ;
INFO  01:24:29,109 - #46 {
INFO  01:24:29,109 - #48 i
INFO  01:24:29,109 - #35 =
INFO  01:24:29,110 - #50 0
INFO  01:24:29,111 - #38 ;
INFO  01:24:29,111 - #9 if
INFO  01:24:29,111 - #42 (
INFO  01:24:29,111 - #50 3
INFO  01:24:29,111 - #31 <
INFO  01:24:29,111 - #50 2
INFO  01:24:29,112 - #34 ||
INFO  01:24:29,113 - #49 true
INFO  01:24:29,113 - #34 ||
INFO  01:24:29,113 - #50 1
INFO  01:24:29,114 - #27 ==
INFO  01:24:29,114 - #50 1
INFO  01:24:29,116 - #33 &&
INFO  01:24:29,116 - #50 2
INFO  01:24:29,116 - #27 ==
INFO  01:24:29,116 - #50 2
INFO  01:24:29,116 - #43 )
INFO  01:24:29,117 - #46 {
INFO  01:24:29,117 - #13 print
INFO  01:24:29,117 - #42 (
INFO  01:24:29,117 - #50 1
INFO  01:24:29,117 - #43 )
INFO  01:24:29,117 - #38 ;
INFO  01:24:29,117 - #47 }
INFO  01:24:29,117 - #7 else
INFO  01:24:29,117 - #46 {
INFO  01:24:29,118 - #13 print
INFO  01:24:29,118 - #42 (
INFO  01:24:29,118 - #50 2
INFO  01:24:29,118 - #43 )
INFO  01:24:29,118 - #38 ;
INFO  01:24:29,118 - #47 }
INFO  01:24:29,118 - #47 }
INFO  01:24:29,119 - #47 }
INFO  01:24:29,125 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               3
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    SingleCondFactJMP(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             true
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopEqual(
                        ) [RelopEqual]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:24:29,125 - ===================================
INFO  01:24:29,129 - Deklarisana promenljiva x na liniji 2
INFO  01:24:29,129 - Deklarisana promenljiva y na liniji 2
INFO  01:24:29,129 - Deklarisan rekord Rekord na liniji 3
INFO  01:24:29,129 - Deklarisana promenljiva d na liniji 5
INFO  01:24:29,129 - Deklarisana promenljiva c na liniji 5
INFO  01:24:29,129 - Deklarisana  klasa Klasa na liniji 7
INFO  01:24:29,129 - Deklarisana poljeb na liniji 9
INFO  01:24:29,129 - Deklarisana poljeb na liniji 9
INFO  01:24:29,129 - Deklarisana poljea na liniji 9
INFO  01:24:29,129 - Deklarisana poljea na liniji 9
INFO  01:24:29,129 - Deklarisana poljeg na liniji 9
INFO  01:24:29,129 - Deklarisana poljeg na liniji 9
INFO  01:24:29,129 - Obradjuje se funkcija nesto na liniji 16
INFO  01:24:29,130 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:24:29,130 - Obradjuje se funkcija kita na liniji 23
INFO  01:24:29,130 - Obradjuje se funkcija main na liniji 26
INFO  01:24:29,130 - Deklarisana niz promenljiva x na liniji 26
INFO  01:24:29,130 - Deklarisana promenljiva i na liniji 26
INFO  01:24:29,130 - Deklarisana promenljiva l na liniji 26
INFO  01:24:29,130 - Deklarisana promenljiva c na liniji 26
INFO  01:24:29,130 - Deklarisana promenljiva rek na liniji 26
INFO  01:24:29,130 - Deklarisana promenljiva neka na liniji 26
INFO  01:24:29,130 - Pristupa se promenljivoj i na liniji 28
INFO  01:24:29,131 -  Deklarisanih promenljivih ima = 7
INFO  01:24:29,131 - ===================================
INFO  01:24:29,138 - neki kurac
INFO  01:24:29,138 - neko sranje
INFO  01:24:29,138 - neko sranje2
INFO  01:24:29,138 - neko sranje
INFO  01:24:29,138 - neko sranje2
INFO  01:24:29,138 - neko sranje
INFO  01:24:29,138 - neko sranje
INFO  01:24:29,138 - matched
INFO  01:24:29,139 - Parsiranje uspesno zavrseno!
INFO  01:24:43,168 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:24:43,224 - #2 program
INFO  01:24:43,224 - #48 p
INFO  01:24:43,224 - #48 int
INFO  01:24:43,225 - #48 x
INFO  01:24:43,226 - #38 ;
INFO  01:24:43,227 - #48 int
INFO  01:24:43,227 - #48 y
INFO  01:24:43,227 - #38 ;
INFO  01:24:43,227 - #21 record
INFO  01:24:43,227 - #48 Rekord
INFO  01:24:43,227 - #46 {
INFO  01:24:43,228 - #48 int
INFO  01:24:43,228 - #48 d
INFO  01:24:43,229 - #40 ,
INFO  01:24:43,229 - #48 c
INFO  01:24:43,229 - #38 ;
INFO  01:24:43,229 - #47 }
INFO  01:24:43,229 - #5 class
INFO  01:24:43,230 - #48 Klasa
INFO  01:24:43,230 - #46 {
INFO  01:24:43,231 - #48 int
INFO  01:24:43,231 - #48 b
INFO  01:24:43,231 - #40 ,
INFO  01:24:43,231 - #48 a
INFO  01:24:43,231 - #40 ,
INFO  01:24:43,231 - #48 g
INFO  01:24:43,231 - #38 ;
INFO  01:24:43,232 - #46 {
INFO  01:24:43,232 - #47 }
INFO  01:24:43,232 - #47 }
INFO  01:24:43,233 - #46 {
INFO  01:24:43,233 - #48 int
INFO  01:24:43,234 - #48 nesto
INFO  01:24:43,234 - #42 (
INFO  01:24:43,234 - #43 )
INFO  01:24:43,234 - #46 {
INFO  01:24:43,234 - #13 print
INFO  01:24:43,235 - #42 (
INFO  01:24:43,236 - #51 c
INFO  01:24:43,236 - #43 )
INFO  01:24:43,236 - #38 ;
INFO  01:24:43,236 - #13 print
INFO  01:24:43,237 - #42 (
INFO  01:24:43,237 - #50 5
INFO  01:24:43,237 - #43 )
INFO  01:24:43,237 - #38 ;
INFO  01:24:43,237 - #15 return
INFO  01:24:43,237 - #50 2
INFO  01:24:43,237 - #38 ;
INFO  01:24:43,238 - #47 }
INFO  01:24:43,238 - #3 void
INFO  01:24:43,239 - #48 kita2
INFO  01:24:43,239 - #42 (
INFO  01:24:43,239 - #43 )
INFO  01:24:43,239 - #46 {
INFO  01:24:43,239 - #47 }
INFO  01:24:43,239 - #3 void
INFO  01:24:43,239 - #48 kita
INFO  01:24:43,239 - #42 (
INFO  01:24:43,240 - #43 )
INFO  01:24:43,240 - #46 {
INFO  01:24:43,240 - #47 }
INFO  01:24:43,240 - #3 void
INFO  01:24:43,240 - #48 main
INFO  01:24:43,240 - #42 (
INFO  01:24:43,240 - #43 )
INFO  01:24:43,240 - #48 int
INFO  01:24:43,240 - #48 x
INFO  01:24:43,240 - #44 [
INFO  01:24:43,240 - #45 ]
INFO  01:24:43,240 - #40 ,
INFO  01:24:43,241 - #48 i
INFO  01:24:43,241 - #40 ,
INFO  01:24:43,241 - #48 l
INFO  01:24:43,241 - #38 ;
INFO  01:24:43,241 - #48 char
INFO  01:24:43,241 - #48 c
INFO  01:24:43,241 - #38 ;
INFO  01:24:43,241 - #48 Rekord
INFO  01:24:43,241 - #48 rek
INFO  01:24:43,241 - #38 ;
INFO  01:24:43,242 - #48 Klasa
INFO  01:24:43,242 - #48 neka
INFO  01:24:43,242 - #38 ;
INFO  01:24:43,242 - #46 {
INFO  01:24:43,242 - #48 i
INFO  01:24:43,242 - #35 =
INFO  01:24:43,243 - #50 0
INFO  01:24:43,244 - #38 ;
INFO  01:24:43,244 - #9 if
INFO  01:24:43,244 - #42 (
INFO  01:24:43,244 - #50 3
INFO  01:24:43,244 - #31 <
INFO  01:24:43,245 - #50 2
INFO  01:24:43,245 - #34 ||
INFO  01:24:43,246 - #49 false
INFO  01:24:43,247 - #34 ||
INFO  01:24:43,247 - #50 1
INFO  01:24:43,247 - #27 ==
INFO  01:24:43,247 - #50 1
INFO  01:24:43,249 - #33 &&
INFO  01:24:43,250 - #50 2
INFO  01:24:43,250 - #27 ==
INFO  01:24:43,250 - #50 2
INFO  01:24:43,251 - #43 )
INFO  01:24:43,251 - #46 {
INFO  01:24:43,251 - #13 print
INFO  01:24:43,251 - #42 (
INFO  01:24:43,251 - #50 1
INFO  01:24:43,251 - #43 )
INFO  01:24:43,251 - #38 ;
INFO  01:24:43,251 - #47 }
INFO  01:24:43,251 - #7 else
INFO  01:24:43,251 - #46 {
INFO  01:24:43,252 - #13 print
INFO  01:24:43,252 - #42 (
INFO  01:24:43,252 - #50 2
INFO  01:24:43,252 - #43 )
INFO  01:24:43,252 - #38 ;
INFO  01:24:43,252 - #47 }
INFO  01:24:43,252 - #47 }
INFO  01:24:43,252 - #47 }
INFO  01:24:43,258 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               3
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    SingleCondFactJMP(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             false
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopEqual(
                        ) [RelopEqual]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:24:43,258 - ===================================
INFO  01:24:43,262 - Deklarisana promenljiva x na liniji 2
INFO  01:24:43,262 - Deklarisana promenljiva y na liniji 2
INFO  01:24:43,262 - Deklarisan rekord Rekord na liniji 3
INFO  01:24:43,262 - Deklarisana promenljiva d na liniji 5
INFO  01:24:43,262 - Deklarisana promenljiva c na liniji 5
INFO  01:24:43,262 - Deklarisana  klasa Klasa na liniji 7
INFO  01:24:43,262 - Deklarisana poljeb na liniji 9
INFO  01:24:43,262 - Deklarisana poljeb na liniji 9
INFO  01:24:43,263 - Deklarisana poljea na liniji 9
INFO  01:24:43,263 - Deklarisana poljea na liniji 9
INFO  01:24:43,263 - Deklarisana poljeg na liniji 9
INFO  01:24:43,263 - Deklarisana poljeg na liniji 9
INFO  01:24:43,263 - Obradjuje se funkcija nesto na liniji 16
INFO  01:24:43,263 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:24:43,263 - Obradjuje se funkcija kita na liniji 23
INFO  01:24:43,263 - Obradjuje se funkcija main na liniji 26
INFO  01:24:43,263 - Deklarisana niz promenljiva x na liniji 26
INFO  01:24:43,263 - Deklarisana promenljiva i na liniji 26
INFO  01:24:43,263 - Deklarisana promenljiva l na liniji 26
INFO  01:24:43,263 - Deklarisana promenljiva c na liniji 26
INFO  01:24:43,263 - Deklarisana promenljiva rek na liniji 26
INFO  01:24:43,263 - Deklarisana promenljiva neka na liniji 26
INFO  01:24:43,263 - Pristupa se promenljivoj i na liniji 28
INFO  01:24:43,264 -  Deklarisanih promenljivih ima = 7
INFO  01:24:43,264 - ===================================
INFO  01:24:43,269 - neki kurac
INFO  01:24:43,269 - neko sranje
INFO  01:24:43,270 - neko sranje2
INFO  01:24:43,270 - neko sranje2
INFO  01:24:43,270 - neko sranje
INFO  01:24:43,270 - neko sranje
INFO  01:24:43,270 - matched
INFO  01:24:43,270 - Parsiranje uspesno zavrseno!
INFO  01:24:56,747 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:24:56,799 - #2 program
INFO  01:24:56,799 - #48 p
INFO  01:24:56,799 - #48 int
INFO  01:24:56,800 - #48 x
INFO  01:24:56,801 - #38 ;
INFO  01:24:56,802 - #48 int
INFO  01:24:56,802 - #48 y
INFO  01:24:56,802 - #38 ;
INFO  01:24:56,802 - #21 record
INFO  01:24:56,803 - #48 Rekord
INFO  01:24:56,803 - #46 {
INFO  01:24:56,803 - #48 int
INFO  01:24:56,804 - #48 d
INFO  01:24:56,804 - #40 ,
INFO  01:24:56,804 - #48 c
INFO  01:24:56,804 - #38 ;
INFO  01:24:56,804 - #47 }
INFO  01:24:56,804 - #5 class
INFO  01:24:56,805 - #48 Klasa
INFO  01:24:56,805 - #46 {
INFO  01:24:56,806 - #48 int
INFO  01:24:56,806 - #48 b
INFO  01:24:56,806 - #40 ,
INFO  01:24:56,806 - #48 a
INFO  01:24:56,806 - #40 ,
INFO  01:24:56,806 - #48 g
INFO  01:24:56,806 - #38 ;
INFO  01:24:56,806 - #46 {
INFO  01:24:56,807 - #47 }
INFO  01:24:56,807 - #47 }
INFO  01:24:56,807 - #46 {
INFO  01:24:56,807 - #48 int
INFO  01:24:56,808 - #48 nesto
INFO  01:24:56,808 - #42 (
INFO  01:24:56,808 - #43 )
INFO  01:24:56,808 - #46 {
INFO  01:24:56,809 - #13 print
INFO  01:24:56,810 - #42 (
INFO  01:24:56,810 - #51 c
INFO  01:24:56,810 - #43 )
INFO  01:24:56,811 - #38 ;
INFO  01:24:56,811 - #13 print
INFO  01:24:56,811 - #42 (
INFO  01:24:56,811 - #50 5
INFO  01:24:56,811 - #43 )
INFO  01:24:56,811 - #38 ;
INFO  01:24:56,811 - #15 return
INFO  01:24:56,811 - #50 2
INFO  01:24:56,811 - #38 ;
INFO  01:24:56,811 - #47 }
INFO  01:24:56,812 - #3 void
INFO  01:24:56,812 - #48 kita2
INFO  01:24:56,812 - #42 (
INFO  01:24:56,812 - #43 )
INFO  01:24:56,813 - #46 {
INFO  01:24:56,813 - #47 }
INFO  01:24:56,813 - #3 void
INFO  01:24:56,813 - #48 kita
INFO  01:24:56,813 - #42 (
INFO  01:24:56,813 - #43 )
INFO  01:24:56,813 - #46 {
INFO  01:24:56,813 - #47 }
INFO  01:24:56,813 - #3 void
INFO  01:24:56,813 - #48 main
INFO  01:24:56,813 - #42 (
INFO  01:24:56,813 - #43 )
INFO  01:24:56,813 - #48 int
INFO  01:24:56,814 - #48 x
INFO  01:24:56,814 - #44 [
INFO  01:24:56,814 - #45 ]
INFO  01:24:56,814 - #40 ,
INFO  01:24:56,814 - #48 i
INFO  01:24:56,814 - #40 ,
INFO  01:24:56,814 - #48 l
INFO  01:24:56,814 - #38 ;
INFO  01:24:56,815 - #48 char
INFO  01:24:56,815 - #48 c
INFO  01:24:56,815 - #38 ;
INFO  01:24:56,815 - #48 Rekord
INFO  01:24:56,815 - #48 rek
INFO  01:24:56,815 - #38 ;
INFO  01:24:56,815 - #48 Klasa
INFO  01:24:56,815 - #48 neka
INFO  01:24:56,815 - #38 ;
INFO  01:24:56,815 - #46 {
INFO  01:24:56,815 - #48 i
INFO  01:24:56,815 - #35 =
INFO  01:24:56,816 - #50 0
INFO  01:24:56,817 - #38 ;
INFO  01:24:56,817 - #9 if
INFO  01:24:56,817 - #42 (
INFO  01:24:56,817 - #50 3
INFO  01:24:56,817 - #31 <
INFO  01:24:56,818 - #50 2
INFO  01:24:56,819 - #34 ||
INFO  01:24:56,820 - #49 false
INFO  01:24:56,821 - #34 ||
INFO  01:24:56,821 - #50 1
INFO  01:24:56,821 - #27 ==
INFO  01:24:56,821 - #50 3
INFO  01:24:56,824 - #33 &&
INFO  01:24:56,824 - #50 2
INFO  01:24:56,824 - #27 ==
INFO  01:24:56,825 - #50 2
INFO  01:24:56,825 - #43 )
INFO  01:24:56,825 - #46 {
INFO  01:24:56,825 - #13 print
INFO  01:24:56,825 - #42 (
INFO  01:24:56,825 - #50 1
INFO  01:24:56,825 - #43 )
INFO  01:24:56,825 - #38 ;
INFO  01:24:56,825 - #47 }
INFO  01:24:56,825 - #7 else
INFO  01:24:56,825 - #46 {
INFO  01:24:56,826 - #13 print
INFO  01:24:56,826 - #42 (
INFO  01:24:56,826 - #50 2
INFO  01:24:56,826 - #43 )
INFO  01:24:56,826 - #38 ;
INFO  01:24:56,826 - #47 }
INFO  01:24:56,826 - #47 }
INFO  01:24:56,827 - #47 }
INFO  01:24:56,832 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               3
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    SingleCondFactJMP(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             false
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopEqual(
                        ) [RelopEqual]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:24:56,832 - ===================================
INFO  01:24:56,836 - Deklarisana promenljiva x na liniji 2
INFO  01:24:56,836 - Deklarisana promenljiva y na liniji 2
INFO  01:24:56,836 - Deklarisan rekord Rekord na liniji 3
INFO  01:24:56,836 - Deklarisana promenljiva d na liniji 5
INFO  01:24:56,836 - Deklarisana promenljiva c na liniji 5
INFO  01:24:56,836 - Deklarisana  klasa Klasa na liniji 7
INFO  01:24:56,836 - Deklarisana poljeb na liniji 9
INFO  01:24:56,836 - Deklarisana poljeb na liniji 9
INFO  01:24:56,836 - Deklarisana poljea na liniji 9
INFO  01:24:56,836 - Deklarisana poljea na liniji 9
INFO  01:24:56,836 - Deklarisana poljeg na liniji 9
INFO  01:24:56,836 - Deklarisana poljeg na liniji 9
INFO  01:24:56,837 - Obradjuje se funkcija nesto na liniji 16
INFO  01:24:56,837 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:24:56,837 - Obradjuje se funkcija kita na liniji 23
INFO  01:24:56,837 - Obradjuje se funkcija main na liniji 26
INFO  01:24:56,837 - Deklarisana niz promenljiva x na liniji 26
INFO  01:24:56,837 - Deklarisana promenljiva i na liniji 26
INFO  01:24:56,837 - Deklarisana promenljiva l na liniji 26
INFO  01:24:56,837 - Deklarisana promenljiva c na liniji 26
INFO  01:24:56,837 - Deklarisana promenljiva rek na liniji 26
INFO  01:24:56,837 - Deklarisana promenljiva neka na liniji 26
INFO  01:24:56,837 - Pristupa se promenljivoj i na liniji 28
INFO  01:24:56,838 -  Deklarisanih promenljivih ima = 7
INFO  01:24:56,838 - ===================================
INFO  01:24:56,843 - neki kurac
INFO  01:24:56,843 - neko sranje
INFO  01:24:56,843 - neko sranje2
INFO  01:24:56,843 - neko sranje2
INFO  01:24:56,843 - neko sranje
INFO  01:24:56,843 - neko sranje
INFO  01:24:56,843 - matched
INFO  01:24:56,844 - Parsiranje uspesno zavrseno!
INFO  01:25:20,620 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:25:20,676 - #2 program
INFO  01:25:20,676 - #48 p
INFO  01:25:20,676 - #48 int
INFO  01:25:20,677 - #48 x
INFO  01:25:20,677 - #38 ;
INFO  01:25:20,678 - #48 int
INFO  01:25:20,679 - #48 y
INFO  01:25:20,679 - #38 ;
INFO  01:25:20,679 - #21 record
INFO  01:25:20,679 - #48 Rekord
INFO  01:25:20,679 - #46 {
INFO  01:25:20,679 - #48 int
INFO  01:25:20,680 - #48 d
INFO  01:25:20,680 - #40 ,
INFO  01:25:20,680 - #48 c
INFO  01:25:20,680 - #38 ;
INFO  01:25:20,680 - #47 }
INFO  01:25:20,680 - #5 class
INFO  01:25:20,681 - #48 Klasa
INFO  01:25:20,681 - #46 {
INFO  01:25:20,682 - #48 int
INFO  01:25:20,682 - #48 b
INFO  01:25:20,682 - #40 ,
INFO  01:25:20,683 - #48 a
INFO  01:25:20,683 - #40 ,
INFO  01:25:20,683 - #48 g
INFO  01:25:20,683 - #38 ;
INFO  01:25:20,683 - #46 {
INFO  01:25:20,683 - #47 }
INFO  01:25:20,683 - #47 }
INFO  01:25:20,684 - #46 {
INFO  01:25:20,684 - #48 int
INFO  01:25:20,684 - #48 nesto
INFO  01:25:20,685 - #42 (
INFO  01:25:20,685 - #43 )
INFO  01:25:20,685 - #46 {
INFO  01:25:20,685 - #13 print
INFO  01:25:20,686 - #42 (
INFO  01:25:20,686 - #51 c
INFO  01:25:20,686 - #43 )
INFO  01:25:20,687 - #38 ;
INFO  01:25:20,687 - #13 print
INFO  01:25:20,687 - #42 (
INFO  01:25:20,688 - #50 5
INFO  01:25:20,688 - #43 )
INFO  01:25:20,688 - #38 ;
INFO  01:25:20,688 - #15 return
INFO  01:25:20,688 - #50 2
INFO  01:25:20,688 - #38 ;
INFO  01:25:20,688 - #47 }
INFO  01:25:20,688 - #3 void
INFO  01:25:20,689 - #48 kita2
INFO  01:25:20,689 - #42 (
INFO  01:25:20,689 - #43 )
INFO  01:25:20,689 - #46 {
INFO  01:25:20,689 - #47 }
INFO  01:25:20,689 - #3 void
INFO  01:25:20,689 - #48 kita
INFO  01:25:20,689 - #42 (
INFO  01:25:20,690 - #43 )
INFO  01:25:20,690 - #46 {
INFO  01:25:20,690 - #47 }
INFO  01:25:20,690 - #3 void
INFO  01:25:20,690 - #48 main
INFO  01:25:20,690 - #42 (
INFO  01:25:20,690 - #43 )
INFO  01:25:20,690 - #48 int
INFO  01:25:20,690 - #48 x
INFO  01:25:20,690 - #44 [
INFO  01:25:20,690 - #45 ]
INFO  01:25:20,690 - #40 ,
INFO  01:25:20,691 - #48 i
INFO  01:25:20,691 - #40 ,
INFO  01:25:20,691 - #48 l
INFO  01:25:20,691 - #38 ;
INFO  01:25:20,691 - #48 char
INFO  01:25:20,691 - #48 c
INFO  01:25:20,691 - #38 ;
INFO  01:25:20,691 - #48 Rekord
INFO  01:25:20,692 - #48 rek
INFO  01:25:20,692 - #38 ;
INFO  01:25:20,692 - #48 Klasa
INFO  01:25:20,692 - #48 neka
INFO  01:25:20,692 - #38 ;
INFO  01:25:20,692 - #46 {
INFO  01:25:20,692 - #48 i
INFO  01:25:20,692 - #35 =
INFO  01:25:20,693 - #50 0
INFO  01:25:20,694 - #38 ;
INFO  01:25:20,694 - #9 if
INFO  01:25:20,694 - #42 (
INFO  01:25:20,694 - #50 3
INFO  01:25:20,694 - #31 <
INFO  01:25:20,694 - #50 2
INFO  01:25:20,695 - #34 ||
INFO  01:25:20,696 - #49 false
INFO  01:25:20,697 - #43 )
INFO  01:25:20,697 - #46 {
INFO  01:25:20,697 - #13 print
INFO  01:25:20,697 - #42 (
INFO  01:25:20,697 - #50 1
INFO  01:25:20,697 - #43 )
INFO  01:25:20,697 - #38 ;
INFO  01:25:20,697 - #47 }
INFO  01:25:20,697 - #7 else
INFO  01:25:20,698 - #46 {
INFO  01:25:20,698 - #13 print
INFO  01:25:20,698 - #42 (
INFO  01:25:20,699 - #50 2
INFO  01:25:20,699 - #43 )
INFO  01:25:20,699 - #38 ;
INFO  01:25:20,699 - #47 }
INFO  01:25:20,699 - #47 }
INFO  01:25:20,699 - #47 }
INFO  01:25:20,705 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                SingleCondTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [SingleCondTerm]
                Or(
                ) [Or]
                SingleCondFact(
                  SingleCondFactJMP(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           false
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFactJMP]
                ) [SingleCondFact]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:25:20,705 - ===================================
INFO  01:25:20,709 - Deklarisana promenljiva x na liniji 2
INFO  01:25:20,709 - Deklarisana promenljiva y na liniji 2
INFO  01:25:20,709 - Deklarisan rekord Rekord na liniji 3
INFO  01:25:20,709 - Deklarisana promenljiva d na liniji 5
INFO  01:25:20,709 - Deklarisana promenljiva c na liniji 5
INFO  01:25:20,710 - Deklarisana  klasa Klasa na liniji 7
INFO  01:25:20,710 - Deklarisana poljeb na liniji 9
INFO  01:25:20,710 - Deklarisana poljeb na liniji 9
INFO  01:25:20,710 - Deklarisana poljea na liniji 9
INFO  01:25:20,710 - Deklarisana poljea na liniji 9
INFO  01:25:20,710 - Deklarisana poljeg na liniji 9
INFO  01:25:20,710 - Deklarisana poljeg na liniji 9
INFO  01:25:20,710 - Obradjuje se funkcija nesto na liniji 16
INFO  01:25:20,710 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:25:20,710 - Obradjuje se funkcija kita na liniji 23
INFO  01:25:20,710 - Obradjuje se funkcija main na liniji 26
INFO  01:25:20,710 - Deklarisana niz promenljiva x na liniji 26
INFO  01:25:20,710 - Deklarisana promenljiva i na liniji 26
INFO  01:25:20,710 - Deklarisana promenljiva l na liniji 26
INFO  01:25:20,710 - Deklarisana promenljiva c na liniji 26
INFO  01:25:20,710 - Deklarisana promenljiva rek na liniji 26
INFO  01:25:20,711 - Deklarisana promenljiva neka na liniji 26
INFO  01:25:20,711 - Pristupa se promenljivoj i na liniji 28
INFO  01:25:20,712 -  Deklarisanih promenljivih ima = 7
INFO  01:25:20,712 - ===================================
INFO  01:25:20,717 - neki kurac
INFO  01:25:20,717 - neko sranje
INFO  01:25:20,717 - neko sranje2
INFO  01:25:20,718 - bratskalovskiii
INFO  01:25:20,718 - matched
INFO  01:25:20,718 - Parsiranje uspesno zavrseno!
INFO  01:25:35,496 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:25:35,554 - #2 program
INFO  01:25:35,554 - #48 p
INFO  01:25:35,554 - #48 int
INFO  01:25:35,555 - #48 x
INFO  01:25:35,556 - #38 ;
INFO  01:25:35,557 - #48 int
INFO  01:25:35,557 - #48 y
INFO  01:25:35,557 - #38 ;
INFO  01:25:35,557 - #21 record
INFO  01:25:35,557 - #48 Rekord
INFO  01:25:35,558 - #46 {
INFO  01:25:35,558 - #48 int
INFO  01:25:35,559 - #48 d
INFO  01:25:35,559 - #40 ,
INFO  01:25:35,559 - #48 c
INFO  01:25:35,559 - #38 ;
INFO  01:25:35,559 - #47 }
INFO  01:25:35,559 - #5 class
INFO  01:25:35,561 - #48 Klasa
INFO  01:25:35,561 - #46 {
INFO  01:25:35,562 - #48 int
INFO  01:25:35,562 - #48 b
INFO  01:25:35,562 - #40 ,
INFO  01:25:35,562 - #48 a
INFO  01:25:35,562 - #40 ,
INFO  01:25:35,562 - #48 g
INFO  01:25:35,562 - #38 ;
INFO  01:25:35,562 - #46 {
INFO  01:25:35,563 - #47 }
INFO  01:25:35,563 - #47 }
INFO  01:25:35,563 - #46 {
INFO  01:25:35,563 - #48 int
INFO  01:25:35,564 - #48 nesto
INFO  01:25:35,564 - #42 (
INFO  01:25:35,564 - #43 )
INFO  01:25:35,564 - #46 {
INFO  01:25:35,565 - #13 print
INFO  01:25:35,566 - #42 (
INFO  01:25:35,566 - #51 c
INFO  01:25:35,566 - #43 )
INFO  01:25:35,567 - #38 ;
INFO  01:25:35,567 - #13 print
INFO  01:25:35,567 - #42 (
INFO  01:25:35,567 - #50 5
INFO  01:25:35,567 - #43 )
INFO  01:25:35,567 - #38 ;
INFO  01:25:35,568 - #15 return
INFO  01:25:35,568 - #50 2
INFO  01:25:35,568 - #38 ;
INFO  01:25:35,568 - #47 }
INFO  01:25:35,568 - #3 void
INFO  01:25:35,569 - #48 kita2
INFO  01:25:35,569 - #42 (
INFO  01:25:35,569 - #43 )
INFO  01:25:35,569 - #46 {
INFO  01:25:35,569 - #47 }
INFO  01:25:35,569 - #3 void
INFO  01:25:35,569 - #48 kita
INFO  01:25:35,569 - #42 (
INFO  01:25:35,569 - #43 )
INFO  01:25:35,569 - #46 {
INFO  01:25:35,570 - #47 }
INFO  01:25:35,570 - #3 void
INFO  01:25:35,570 - #48 main
INFO  01:25:35,570 - #42 (
INFO  01:25:35,570 - #43 )
INFO  01:25:35,570 - #48 int
INFO  01:25:35,570 - #48 x
INFO  01:25:35,570 - #44 [
INFO  01:25:35,570 - #45 ]
INFO  01:25:35,570 - #40 ,
INFO  01:25:35,571 - #48 i
INFO  01:25:35,571 - #40 ,
INFO  01:25:35,571 - #48 l
INFO  01:25:35,571 - #38 ;
INFO  01:25:35,571 - #48 char
INFO  01:25:35,571 - #48 c
INFO  01:25:35,571 - #38 ;
INFO  01:25:35,571 - #48 Rekord
INFO  01:25:35,571 - #48 rek
INFO  01:25:35,571 - #38 ;
INFO  01:25:35,571 - #48 Klasa
INFO  01:25:35,571 - #48 neka
INFO  01:25:35,572 - #38 ;
INFO  01:25:35,572 - #46 {
INFO  01:25:35,572 - #48 i
INFO  01:25:35,572 - #35 =
INFO  01:25:35,573 - #50 0
INFO  01:25:35,573 - #38 ;
INFO  01:25:35,573 - #9 if
INFO  01:25:35,574 - #42 (
INFO  01:25:35,574 - #50 3
INFO  01:25:35,574 - #31 <
INFO  01:25:35,574 - #50 2
INFO  01:25:35,576 - #34 ||
INFO  01:25:35,577 - #48 false||4
INFO  01:25:35,577 - #31 <
INFO  01:25:35,577 - #50 2
INFO  01:25:35,577 - #43 )
INFO  01:25:35,578 - #46 {
INFO  01:25:35,579 - #13 print
INFO  01:25:35,579 - #42 (
INFO  01:25:35,579 - #50 1
INFO  01:25:35,579 - #43 )
INFO  01:25:35,579 - #38 ;
INFO  01:25:35,580 - #47 }
INFO  01:25:35,580 - #7 else
INFO  01:25:35,580 - #46 {
INFO  01:25:35,580 - #13 print
INFO  01:25:35,580 - #42 (
INFO  01:25:35,580 - #50 2
INFO  01:25:35,580 - #43 )
INFO  01:25:35,580 - #38 ;
INFO  01:25:35,580 - #47 }
INFO  01:25:35,581 - #47 }
INFO  01:25:35,581 - #47 }
INFO  01:25:35,586 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                SingleCondTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [SingleCondTerm]
                Or(
                ) [Or]
                SingleCondFact(
                  SingleCondFactJMP(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          VarFactor(
                            Designator(
                              Base(
                               false||4
                              ) [Base]
                              NoDesignatorAdded(
                              ) [NoDesignatorAdded]
                            ) [Designator]
                          ) [VarFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopLess(
                      ) [RelopLess]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           2
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFactJMP]
                ) [SingleCondFact]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:25:35,587 - ===================================
INFO  01:25:35,590 - Deklarisana promenljiva x na liniji 2
INFO  01:25:35,590 - Deklarisana promenljiva y na liniji 2
INFO  01:25:35,591 - Deklarisan rekord Rekord na liniji 3
INFO  01:25:35,591 - Deklarisana promenljiva d na liniji 5
INFO  01:25:35,591 - Deklarisana promenljiva c na liniji 5
INFO  01:25:35,591 - Deklarisana  klasa Klasa na liniji 7
INFO  01:25:35,591 - Deklarisana poljeb na liniji 9
INFO  01:25:35,591 - Deklarisana poljeb na liniji 9
INFO  01:25:35,591 - Deklarisana poljea na liniji 9
INFO  01:25:35,591 - Deklarisana poljea na liniji 9
INFO  01:25:35,591 - Deklarisana poljeg na liniji 9
INFO  01:25:35,591 - Deklarisana poljeg na liniji 9
INFO  01:25:35,591 - Obradjuje se funkcija nesto na liniji 16
INFO  01:25:35,591 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:25:35,591 - Obradjuje se funkcija kita na liniji 23
INFO  01:25:35,591 - Obradjuje se funkcija main na liniji 26
INFO  01:25:35,591 - Deklarisana niz promenljiva x na liniji 26
INFO  01:25:35,592 - Deklarisana promenljiva i na liniji 26
INFO  01:25:35,592 - Deklarisana promenljiva l na liniji 26
INFO  01:25:35,592 - Deklarisana promenljiva c na liniji 26
INFO  01:25:35,592 - Deklarisana promenljiva rek na liniji 26
INFO  01:25:35,592 - Deklarisana promenljiva neka na liniji 26
INFO  01:25:35,592 - Pristupa se promenljivoj i na liniji 28
ERROR 01:25:35,593 - Greska na liniji 29 :ime false||4 nije deklarisano!
ERROR 01:25:35,593 - Greska na liniji:29 nekompatibilni tipovi u izrazu za relacije!
ERROR 01:25:35,593 - Greska na liniji:29 parametri disjunkcije nisu logickog tipa!
ERROR 01:25:35,593 - Greska na liniji:29 condition mora biti logickog tipa! 
INFO  01:25:35,594 -  Deklarisanih promenljivih ima = 7
INFO  01:25:35,594 - ===================================
ERROR 01:25:35,594 - Parsiranje NIJE uspesno zavrseno
INFO  01:25:45,621 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:25:45,676 - #2 program
INFO  01:25:45,676 - #48 p
INFO  01:25:45,676 - #48 int
INFO  01:25:45,677 - #48 x
INFO  01:25:45,677 - #38 ;
INFO  01:25:45,678 - #48 int
INFO  01:25:45,679 - #48 y
INFO  01:25:45,679 - #38 ;
INFO  01:25:45,679 - #21 record
INFO  01:25:45,679 - #48 Rekord
INFO  01:25:45,679 - #46 {
INFO  01:25:45,680 - #48 int
INFO  01:25:45,680 - #48 d
INFO  01:25:45,680 - #40 ,
INFO  01:25:45,680 - #48 c
INFO  01:25:45,680 - #38 ;
INFO  01:25:45,681 - #47 }
INFO  01:25:45,681 - #5 class
INFO  01:25:45,681 - #48 Klasa
INFO  01:25:45,681 - #46 {
INFO  01:25:45,682 - #48 int
INFO  01:25:45,682 - #48 b
INFO  01:25:45,682 - #40 ,
INFO  01:25:45,683 - #48 a
INFO  01:25:45,683 - #40 ,
INFO  01:25:45,683 - #48 g
INFO  01:25:45,683 - #38 ;
INFO  01:25:45,683 - #46 {
INFO  01:25:45,683 - #47 }
INFO  01:25:45,683 - #47 }
INFO  01:25:45,684 - #46 {
INFO  01:25:45,684 - #48 int
INFO  01:25:45,685 - #48 nesto
INFO  01:25:45,685 - #42 (
INFO  01:25:45,685 - #43 )
INFO  01:25:45,685 - #46 {
INFO  01:25:45,685 - #13 print
INFO  01:25:45,687 - #42 (
INFO  01:25:45,687 - #51 c
INFO  01:25:45,687 - #43 )
INFO  01:25:45,688 - #38 ;
INFO  01:25:45,688 - #13 print
INFO  01:25:45,688 - #42 (
INFO  01:25:45,688 - #50 5
INFO  01:25:45,688 - #43 )
INFO  01:25:45,688 - #38 ;
INFO  01:25:45,688 - #15 return
INFO  01:25:45,688 - #50 2
INFO  01:25:45,688 - #38 ;
INFO  01:25:45,689 - #47 }
INFO  01:25:45,689 - #3 void
INFO  01:25:45,689 - #48 kita2
INFO  01:25:45,689 - #42 (
INFO  01:25:45,690 - #43 )
INFO  01:25:45,690 - #46 {
INFO  01:25:45,690 - #47 }
INFO  01:25:45,690 - #3 void
INFO  01:25:45,690 - #48 kita
INFO  01:25:45,690 - #42 (
INFO  01:25:45,690 - #43 )
INFO  01:25:45,690 - #46 {
INFO  01:25:45,691 - #47 }
INFO  01:25:45,691 - #3 void
INFO  01:25:45,691 - #48 main
INFO  01:25:45,691 - #42 (
INFO  01:25:45,691 - #43 )
INFO  01:25:45,691 - #48 int
INFO  01:25:45,691 - #48 x
INFO  01:25:45,691 - #44 [
INFO  01:25:45,691 - #45 ]
INFO  01:25:45,691 - #40 ,
INFO  01:25:45,692 - #48 i
INFO  01:25:45,692 - #40 ,
INFO  01:25:45,692 - #48 l
INFO  01:25:45,692 - #38 ;
INFO  01:25:45,692 - #48 char
INFO  01:25:45,692 - #48 c
INFO  01:25:45,692 - #38 ;
INFO  01:25:45,692 - #48 Rekord
INFO  01:25:45,692 - #48 rek
INFO  01:25:45,692 - #38 ;
INFO  01:25:45,692 - #48 Klasa
INFO  01:25:45,692 - #48 neka
INFO  01:25:45,692 - #38 ;
INFO  01:25:45,693 - #46 {
INFO  01:25:45,693 - #48 i
INFO  01:25:45,693 - #35 =
INFO  01:25:45,694 - #50 0
INFO  01:25:45,694 - #38 ;
INFO  01:25:45,694 - #9 if
INFO  01:25:45,695 - #42 (
INFO  01:25:45,695 - #50 3
INFO  01:25:45,695 - #31 <
INFO  01:25:45,695 - #50 2
INFO  01:25:45,696 - #34 ||
INFO  01:25:45,697 - #48 false||
INFO  01:25:45,698 - #50 4
ERROR 01:25:45,698 - 
Sintaksna greska na liniji 29
INFO  01:25:45,698 - #31 <
INFO  01:25:45,698 - #50 2
INFO  01:25:45,700 - #43 )
INFO  01:25:45,700 - #46 {
ERROR 01:25:45,700 - Izvrsen oporavak logickog izraza unutar if-a u liniji 29
INFO  01:25:45,701 - #13 print
INFO  01:25:45,701 - #42 (
INFO  01:25:45,701 - #50 1
INFO  01:25:45,701 - #43 )
INFO  01:25:45,701 - #38 ;
INFO  01:25:45,701 - #47 }
INFO  01:25:45,701 - #7 else
INFO  01:25:45,701 - #46 {
INFO  01:25:45,702 - #13 print
INFO  01:25:45,702 - #42 (
INFO  01:25:45,702 - #50 2
INFO  01:25:45,702 - #43 )
INFO  01:25:45,702 - #38 ;
INFO  01:25:45,702 - #47 }
INFO  01:25:45,702 - #47 }
INFO  01:25:45,703 - #47 }
INFO  01:25:45,709 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                SingleCondTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [SingleCondTerm]
                Or(
                ) [Or]
                SingleCondFact(
                  SingleCondFactJMP(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          ErrorFactor(
                          ) [ErrorFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopLess(
                      ) [RelopLess]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           2
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFactJMP]
                ) [SingleCondFact]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:25:45,710 - ===================================
INFO  01:25:45,713 - Deklarisana promenljiva x na liniji 2
INFO  01:25:45,713 - Deklarisana promenljiva y na liniji 2
INFO  01:25:45,714 - Deklarisan rekord Rekord na liniji 3
INFO  01:25:45,714 - Deklarisana promenljiva d na liniji 5
INFO  01:25:45,714 - Deklarisana promenljiva c na liniji 5
INFO  01:25:45,714 - Deklarisana  klasa Klasa na liniji 7
INFO  01:25:45,714 - Deklarisana poljeb na liniji 9
INFO  01:25:45,714 - Deklarisana poljeb na liniji 9
INFO  01:25:45,714 - Deklarisana poljea na liniji 9
INFO  01:25:45,714 - Deklarisana poljea na liniji 9
INFO  01:25:45,714 - Deklarisana poljeg na liniji 9
INFO  01:25:45,714 - Deklarisana poljeg na liniji 9
INFO  01:25:45,714 - Obradjuje se funkcija nesto na liniji 16
INFO  01:25:45,714 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:25:45,714 - Obradjuje se funkcija kita na liniji 23
INFO  01:25:45,714 - Obradjuje se funkcija main na liniji 26
INFO  01:25:45,714 - Deklarisana niz promenljiva x na liniji 26
INFO  01:25:45,715 - Deklarisana promenljiva i na liniji 26
INFO  01:25:45,715 - Deklarisana promenljiva l na liniji 26
INFO  01:25:45,715 - Deklarisana promenljiva c na liniji 26
INFO  01:25:45,715 - Deklarisana promenljiva rek na liniji 26
INFO  01:25:45,715 - Deklarisana promenljiva neka na liniji 26
INFO  01:25:45,715 - Pristupa se promenljivoj i na liniji 28
INFO  01:25:54,289 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:25:54,342 - #2 program
INFO  01:25:54,342 - #48 p
INFO  01:25:54,342 - #48 int
INFO  01:25:54,343 - #48 x
INFO  01:25:54,344 - #38 ;
INFO  01:25:54,345 - #48 int
INFO  01:25:54,345 - #48 y
INFO  01:25:54,345 - #38 ;
INFO  01:25:54,345 - #21 record
INFO  01:25:54,345 - #48 Rekord
INFO  01:25:54,345 - #46 {
INFO  01:25:54,346 - #48 int
INFO  01:25:54,346 - #48 d
INFO  01:25:54,346 - #40 ,
INFO  01:25:54,346 - #48 c
INFO  01:25:54,347 - #38 ;
INFO  01:25:54,347 - #47 }
INFO  01:25:54,347 - #5 class
INFO  01:25:54,347 - #48 Klasa
INFO  01:25:54,347 - #46 {
INFO  01:25:54,348 - #48 int
INFO  01:25:54,348 - #48 b
INFO  01:25:54,348 - #40 ,
INFO  01:25:54,349 - #48 a
INFO  01:25:54,349 - #40 ,
INFO  01:25:54,349 - #48 g
INFO  01:25:54,349 - #38 ;
INFO  01:25:54,349 - #46 {
INFO  01:25:54,349 - #47 }
INFO  01:25:54,349 - #47 }
INFO  01:25:54,350 - #46 {
INFO  01:25:54,350 - #48 int
INFO  01:25:54,350 - #48 nesto
INFO  01:25:54,351 - #42 (
INFO  01:25:54,351 - #43 )
INFO  01:25:54,351 - #46 {
INFO  01:25:54,351 - #13 print
INFO  01:25:54,352 - #42 (
INFO  01:25:54,353 - #51 c
INFO  01:25:54,353 - #43 )
INFO  01:25:54,353 - #38 ;
INFO  01:25:54,353 - #13 print
INFO  01:25:54,354 - #42 (
INFO  01:25:54,354 - #50 5
INFO  01:25:54,354 - #43 )
INFO  01:25:54,354 - #38 ;
INFO  01:25:54,354 - #15 return
INFO  01:25:54,354 - #50 2
INFO  01:25:54,354 - #38 ;
INFO  01:25:54,354 - #47 }
INFO  01:25:54,354 - #3 void
INFO  01:25:54,355 - #48 kita2
INFO  01:25:54,355 - #42 (
INFO  01:25:54,355 - #43 )
INFO  01:25:54,355 - #46 {
INFO  01:25:54,355 - #47 }
INFO  01:25:54,355 - #3 void
INFO  01:25:54,355 - #48 kita
INFO  01:25:54,355 - #42 (
INFO  01:25:54,355 - #43 )
INFO  01:25:54,356 - #46 {
INFO  01:25:54,356 - #47 }
INFO  01:25:54,356 - #3 void
INFO  01:25:54,356 - #48 main
INFO  01:25:54,356 - #42 (
INFO  01:25:54,356 - #43 )
INFO  01:25:54,356 - #48 int
INFO  01:25:54,356 - #48 x
INFO  01:25:54,356 - #44 [
INFO  01:25:54,356 - #45 ]
INFO  01:25:54,356 - #40 ,
INFO  01:25:54,357 - #48 i
INFO  01:25:54,357 - #40 ,
INFO  01:25:54,357 - #48 l
INFO  01:25:54,357 - #38 ;
INFO  01:25:54,357 - #48 char
INFO  01:25:54,357 - #48 c
INFO  01:25:54,357 - #38 ;
INFO  01:25:54,357 - #48 Rekord
INFO  01:25:54,357 - #48 rek
INFO  01:25:54,357 - #38 ;
INFO  01:25:54,357 - #48 Klasa
INFO  01:25:54,357 - #48 neka
INFO  01:25:54,357 - #38 ;
INFO  01:25:54,357 - #46 {
INFO  01:25:54,357 - #48 i
INFO  01:25:54,357 - #35 =
INFO  01:25:54,358 - #50 0
INFO  01:25:54,359 - #38 ;
INFO  01:25:54,359 - #9 if
INFO  01:25:54,359 - #42 (
INFO  01:25:54,359 - #50 3
INFO  01:25:54,360 - #31 <
INFO  01:25:54,360 - #50 2
INFO  01:25:54,360 - #34 ||
INFO  01:25:54,361 - #49 false
INFO  01:25:54,362 - #34 ||
INFO  01:25:54,362 - #50 4
INFO  01:25:54,362 - #31 <
INFO  01:25:54,362 - #50 2
INFO  01:25:54,362 - #43 )
INFO  01:25:54,362 - #46 {
INFO  01:25:54,362 - #13 print
INFO  01:25:54,362 - #42 (
INFO  01:25:54,362 - #50 1
INFO  01:25:54,362 - #43 )
INFO  01:25:54,362 - #38 ;
INFO  01:25:54,362 - #47 }
INFO  01:25:54,362 - #7 else
INFO  01:25:54,363 - #46 {
INFO  01:25:54,363 - #13 print
INFO  01:25:54,363 - #42 (
INFO  01:25:54,363 - #50 2
INFO  01:25:54,363 - #43 )
INFO  01:25:54,363 - #38 ;
INFO  01:25:54,363 - #47 }
INFO  01:25:54,363 - #47 }
INFO  01:25:54,364 - #47 }
INFO  01:25:54,370 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               3
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    SingleCondFactJMP(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             false
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                SingleCondFact(
                  SingleCondFactJMP(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           4
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopLess(
                      ) [RelopLess]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           2
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFactJMP]
                ) [SingleCondFact]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:25:54,371 - ===================================
INFO  01:25:54,377 - Deklarisana promenljiva x na liniji 2
INFO  01:25:54,377 - Deklarisana promenljiva y na liniji 2
INFO  01:25:54,377 - Deklarisan rekord Rekord na liniji 3
INFO  01:25:54,377 - Deklarisana promenljiva d na liniji 5
INFO  01:25:54,377 - Deklarisana promenljiva c na liniji 5
INFO  01:25:54,377 - Deklarisana  klasa Klasa na liniji 7
INFO  01:25:54,377 - Deklarisana poljeb na liniji 9
INFO  01:25:54,377 - Deklarisana poljeb na liniji 9
INFO  01:25:54,377 - Deklarisana poljea na liniji 9
INFO  01:25:54,377 - Deklarisana poljea na liniji 9
INFO  01:25:54,377 - Deklarisana poljeg na liniji 9
INFO  01:25:54,377 - Deklarisana poljeg na liniji 9
INFO  01:25:54,378 - Obradjuje se funkcija nesto na liniji 16
INFO  01:25:54,378 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:25:54,378 - Obradjuje se funkcija kita na liniji 23
INFO  01:25:54,378 - Obradjuje se funkcija main na liniji 26
INFO  01:25:54,378 - Deklarisana niz promenljiva x na liniji 26
INFO  01:25:54,378 - Deklarisana promenljiva i na liniji 26
INFO  01:25:54,378 - Deklarisana promenljiva l na liniji 26
INFO  01:25:54,378 - Deklarisana promenljiva c na liniji 26
INFO  01:25:54,378 - Deklarisana promenljiva rek na liniji 26
INFO  01:25:54,378 - Deklarisana promenljiva neka na liniji 26
INFO  01:25:54,378 - Pristupa se promenljivoj i na liniji 28
INFO  01:25:54,379 -  Deklarisanih promenljivih ima = 7
INFO  01:25:54,379 - ===================================
INFO  01:25:54,385 - neki kurac
INFO  01:25:54,385 - neko sranje
INFO  01:25:54,385 - neko sranje2
INFO  01:25:54,385 - neko sranje2
INFO  01:25:54,385 - bratskalovskiii
INFO  01:25:54,386 - neko sranje
INFO  01:25:54,386 - matched
INFO  01:25:54,386 - Parsiranje uspesno zavrseno!
INFO  01:26:11,418 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:26:11,471 - #2 program
INFO  01:26:11,471 - #48 p
INFO  01:26:11,471 - #48 int
INFO  01:26:11,472 - #48 x
INFO  01:26:11,473 - #38 ;
INFO  01:26:11,474 - #48 int
INFO  01:26:11,474 - #48 y
INFO  01:26:11,474 - #38 ;
INFO  01:26:11,474 - #21 record
INFO  01:26:11,474 - #48 Rekord
INFO  01:26:11,474 - #46 {
INFO  01:26:11,475 - #48 int
INFO  01:26:11,475 - #48 d
INFO  01:26:11,475 - #40 ,
INFO  01:26:11,476 - #48 c
INFO  01:26:11,476 - #38 ;
INFO  01:26:11,476 - #47 }
INFO  01:26:11,476 - #5 class
INFO  01:26:11,477 - #48 Klasa
INFO  01:26:11,477 - #46 {
INFO  01:26:11,477 - #48 int
INFO  01:26:11,478 - #48 b
INFO  01:26:11,478 - #40 ,
INFO  01:26:11,478 - #48 a
INFO  01:26:11,478 - #40 ,
INFO  01:26:11,478 - #48 g
INFO  01:26:11,478 - #38 ;
INFO  01:26:11,478 - #46 {
INFO  01:26:11,478 - #47 }
INFO  01:26:11,478 - #47 }
INFO  01:26:11,479 - #46 {
INFO  01:26:11,479 - #48 int
INFO  01:26:11,480 - #48 nesto
INFO  01:26:11,480 - #42 (
INFO  01:26:11,480 - #43 )
INFO  01:26:11,480 - #46 {
INFO  01:26:11,480 - #13 print
INFO  01:26:11,481 - #42 (
INFO  01:26:11,482 - #51 c
INFO  01:26:11,482 - #43 )
INFO  01:26:11,482 - #38 ;
INFO  01:26:11,482 - #13 print
INFO  01:26:11,483 - #42 (
INFO  01:26:11,483 - #50 5
INFO  01:26:11,483 - #43 )
INFO  01:26:11,483 - #38 ;
INFO  01:26:11,483 - #15 return
INFO  01:26:11,483 - #50 2
INFO  01:26:11,483 - #38 ;
INFO  01:26:11,483 - #47 }
INFO  01:26:11,483 - #3 void
INFO  01:26:11,484 - #48 kita2
INFO  01:26:11,484 - #42 (
INFO  01:26:11,484 - #43 )
INFO  01:26:11,484 - #46 {
INFO  01:26:11,484 - #47 }
INFO  01:26:11,485 - #3 void
INFO  01:26:11,485 - #48 kita
INFO  01:26:11,485 - #42 (
INFO  01:26:11,485 - #43 )
INFO  01:26:11,485 - #46 {
INFO  01:26:11,485 - #47 }
INFO  01:26:11,485 - #3 void
INFO  01:26:11,485 - #48 main
INFO  01:26:11,485 - #42 (
INFO  01:26:11,485 - #43 )
INFO  01:26:11,485 - #48 int
INFO  01:26:11,485 - #48 x
INFO  01:26:11,485 - #44 [
INFO  01:26:11,485 - #45 ]
INFO  01:26:11,485 - #40 ,
INFO  01:26:11,486 - #48 i
INFO  01:26:11,486 - #40 ,
INFO  01:26:11,486 - #48 l
INFO  01:26:11,486 - #38 ;
INFO  01:26:11,486 - #48 char
INFO  01:26:11,486 - #48 c
INFO  01:26:11,486 - #38 ;
INFO  01:26:11,486 - #48 Rekord
INFO  01:26:11,486 - #48 rek
INFO  01:26:11,486 - #38 ;
INFO  01:26:11,486 - #48 Klasa
INFO  01:26:11,486 - #48 neka
INFO  01:26:11,486 - #38 ;
INFO  01:26:11,486 - #46 {
INFO  01:26:11,487 - #48 i
INFO  01:26:11,487 - #35 =
INFO  01:26:11,488 - #50 0
INFO  01:26:11,488 - #38 ;
INFO  01:26:11,488 - #9 if
INFO  01:26:11,488 - #42 (
INFO  01:26:11,489 - #50 3
INFO  01:26:11,489 - #31 <
INFO  01:26:11,489 - #50 2
INFO  01:26:11,490 - #34 ||
INFO  01:26:11,490 - #49 false
INFO  01:26:11,491 - #34 ||
INFO  01:26:11,491 - #50 4
INFO  01:26:11,491 - #31 <
INFO  01:26:11,491 - #50 2
INFO  01:26:11,491 - #33 &&
INFO  01:26:11,491 - #50 1
INFO  01:26:11,492 - #27 ==
INFO  01:26:11,492 - #50 1
INFO  01:26:11,493 - #43 )
INFO  01:26:11,493 - #46 {
INFO  01:26:11,493 - #13 print
INFO  01:26:11,493 - #42 (
INFO  01:26:11,493 - #50 1
INFO  01:26:11,493 - #43 )
INFO  01:26:11,493 - #38 ;
INFO  01:26:11,493 - #47 }
INFO  01:26:11,494 - #7 else
INFO  01:26:11,494 - #46 {
INFO  01:26:11,494 - #13 print
INFO  01:26:11,494 - #42 (
INFO  01:26:11,494 - #50 2
INFO  01:26:11,494 - #43 )
INFO  01:26:11,494 - #38 ;
INFO  01:26:11,495 - #47 }
INFO  01:26:11,495 - #47 }
INFO  01:26:11,495 - #47 }
INFO  01:26:11,501 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               3
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    SingleCondFactJMP(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             false
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:26:11,506 - ===================================
INFO  01:26:11,510 - Deklarisana promenljiva x na liniji 2
INFO  01:26:11,510 - Deklarisana promenljiva y na liniji 2
INFO  01:26:11,510 - Deklarisan rekord Rekord na liniji 3
INFO  01:26:11,510 - Deklarisana promenljiva d na liniji 5
INFO  01:26:11,510 - Deklarisana promenljiva c na liniji 5
INFO  01:26:11,510 - Deklarisana  klasa Klasa na liniji 7
INFO  01:26:11,510 - Deklarisana poljeb na liniji 9
INFO  01:26:11,510 - Deklarisana poljeb na liniji 9
INFO  01:26:11,510 - Deklarisana poljea na liniji 9
INFO  01:26:11,510 - Deklarisana poljea na liniji 9
INFO  01:26:11,510 - Deklarisana poljeg na liniji 9
INFO  01:26:11,510 - Deklarisana poljeg na liniji 9
INFO  01:26:11,510 - Obradjuje se funkcija nesto na liniji 16
INFO  01:26:11,511 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:26:11,511 - Obradjuje se funkcija kita na liniji 23
INFO  01:26:11,511 - Obradjuje se funkcija main na liniji 26
INFO  01:26:11,511 - Deklarisana niz promenljiva x na liniji 26
INFO  01:26:11,511 - Deklarisana promenljiva i na liniji 26
INFO  01:26:11,511 - Deklarisana promenljiva l na liniji 26
INFO  01:26:11,511 - Deklarisana promenljiva c na liniji 26
INFO  01:26:11,511 - Deklarisana promenljiva rek na liniji 26
INFO  01:26:11,511 - Deklarisana promenljiva neka na liniji 26
INFO  01:26:11,511 - Pristupa se promenljivoj i na liniji 28
INFO  01:26:11,512 -  Deklarisanih promenljivih ima = 7
INFO  01:26:11,512 - ===================================
INFO  01:26:11,517 - neki kurac
INFO  01:26:11,517 - neko sranje
INFO  01:26:11,517 - neko sranje2
INFO  01:26:11,517 - neko sranje2
INFO  01:26:11,517 - neko sranje
INFO  01:26:11,517 - neko sranje
INFO  01:26:11,518 - matched
INFO  01:26:11,518 - Parsiranje uspesno zavrseno!
INFO  01:28:53,712 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:28:53,774 - #2 program
INFO  01:28:53,774 - #48 p
INFO  01:28:53,774 - #48 int
INFO  01:28:53,775 - #48 x
INFO  01:28:53,776 - #38 ;
INFO  01:28:53,777 - #48 int
INFO  01:28:53,777 - #48 y
INFO  01:28:53,777 - #38 ;
INFO  01:28:53,777 - #21 record
INFO  01:28:53,778 - #48 Rekord
INFO  01:28:53,778 - #46 {
INFO  01:28:53,778 - #48 int
INFO  01:28:53,779 - #48 d
INFO  01:28:53,779 - #40 ,
INFO  01:28:53,779 - #48 c
INFO  01:28:53,779 - #38 ;
INFO  01:28:53,779 - #47 }
INFO  01:28:53,779 - #5 class
INFO  01:28:53,780 - #48 Klasa
INFO  01:28:53,780 - #46 {
INFO  01:28:53,781 - #48 int
INFO  01:28:53,781 - #48 b
INFO  01:28:53,781 - #40 ,
INFO  01:28:53,781 - #48 a
INFO  01:28:53,781 - #40 ,
INFO  01:28:53,781 - #48 g
INFO  01:28:53,781 - #38 ;
INFO  01:28:53,781 - #46 {
INFO  01:28:53,782 - #47 }
INFO  01:28:53,782 - #47 }
INFO  01:28:53,782 - #46 {
INFO  01:28:53,782 - #48 int
INFO  01:28:53,783 - #48 nesto
INFO  01:28:53,783 - #42 (
INFO  01:28:53,783 - #43 )
INFO  01:28:53,784 - #46 {
INFO  01:28:53,784 - #13 print
INFO  01:28:53,785 - #42 (
INFO  01:28:53,786 - #51 c
INFO  01:28:53,786 - #43 )
INFO  01:28:53,787 - #38 ;
INFO  01:28:53,787 - #13 print
INFO  01:28:53,787 - #42 (
INFO  01:28:53,787 - #50 5
INFO  01:28:53,787 - #43 )
INFO  01:28:53,787 - #38 ;
INFO  01:28:53,787 - #15 return
INFO  01:28:53,788 - #50 2
INFO  01:28:53,788 - #38 ;
INFO  01:28:53,788 - #47 }
INFO  01:28:53,788 - #3 void
INFO  01:28:53,789 - #48 kita2
INFO  01:28:53,789 - #42 (
INFO  01:28:53,789 - #43 )
INFO  01:28:53,789 - #46 {
INFO  01:28:53,789 - #47 }
INFO  01:28:53,789 - #3 void
INFO  01:28:53,789 - #48 kita
INFO  01:28:53,789 - #42 (
INFO  01:28:53,789 - #43 )
INFO  01:28:53,789 - #46 {
INFO  01:28:53,789 - #47 }
INFO  01:28:53,789 - #3 void
INFO  01:28:53,789 - #48 main
INFO  01:28:53,790 - #42 (
INFO  01:28:53,790 - #43 )
INFO  01:28:53,790 - #48 int
INFO  01:28:53,790 - #48 x
INFO  01:28:53,790 - #44 [
INFO  01:28:53,790 - #45 ]
INFO  01:28:53,790 - #40 ,
INFO  01:28:53,790 - #48 i
INFO  01:28:53,790 - #40 ,
INFO  01:28:53,790 - #48 l
INFO  01:28:53,790 - #38 ;
INFO  01:28:53,791 - #48 char
INFO  01:28:53,791 - #48 c
INFO  01:28:53,791 - #38 ;
INFO  01:28:53,791 - #48 Rekord
INFO  01:28:53,791 - #48 rek
INFO  01:28:53,791 - #38 ;
INFO  01:28:53,791 - #48 Klasa
INFO  01:28:53,791 - #48 neka
INFO  01:28:53,791 - #38 ;
INFO  01:28:53,791 - #46 {
INFO  01:28:53,791 - #48 i
INFO  01:28:53,791 - #35 =
INFO  01:28:53,792 - #50 0
INFO  01:28:53,793 - #38 ;
INFO  01:28:53,793 - #9 if
INFO  01:28:53,793 - #42 (
INFO  01:28:53,794 - #50 3
INFO  01:28:53,794 - #31 <
INFO  01:28:53,794 - #50 2
INFO  01:28:53,795 - #34 ||
INFO  01:28:53,795 - #49 false
INFO  01:28:53,796 - #34 ||
INFO  01:28:53,796 - #50 4
INFO  01:28:53,796 - #31 <
INFO  01:28:53,796 - #50 2
INFO  01:28:53,798 - #33 &&
INFO  01:28:53,798 - #50 1
INFO  01:28:53,799 - #27 ==
INFO  01:28:53,799 - #50 1
INFO  01:28:53,799 - #43 )
INFO  01:28:53,799 - #46 {
INFO  01:28:53,799 - #13 print
INFO  01:28:53,799 - #42 (
INFO  01:28:53,799 - #50 1
INFO  01:28:53,799 - #43 )
INFO  01:28:53,799 - #38 ;
INFO  01:28:53,800 - #47 }
INFO  01:28:53,800 - #7 else
INFO  01:28:53,800 - #46 {
INFO  01:28:53,800 - #13 print
INFO  01:28:53,800 - #42 (
INFO  01:28:53,800 - #50 2
INFO  01:28:53,800 - #43 )
INFO  01:28:53,800 - #38 ;
INFO  01:28:53,801 - #47 }
INFO  01:28:53,801 - #47 }
INFO  01:28:53,801 - #47 }
INFO  01:28:53,806 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               3
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    SingleCondFactJMP(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             false
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:28:53,807 - ===================================
INFO  01:28:53,811 - Deklarisana promenljiva x na liniji 2
INFO  01:28:53,811 - Deklarisana promenljiva y na liniji 2
INFO  01:28:53,811 - Deklarisan rekord Rekord na liniji 3
INFO  01:28:53,811 - Deklarisana promenljiva d na liniji 5
INFO  01:28:53,811 - Deklarisana promenljiva c na liniji 5
INFO  01:28:53,811 - Deklarisana  klasa Klasa na liniji 7
INFO  01:28:53,811 - Deklarisana poljeb na liniji 9
INFO  01:28:53,811 - Deklarisana poljeb na liniji 9
INFO  01:28:53,811 - Deklarisana poljea na liniji 9
INFO  01:28:53,811 - Deklarisana poljea na liniji 9
INFO  01:28:53,811 - Deklarisana poljeg na liniji 9
INFO  01:28:53,811 - Deklarisana poljeg na liniji 9
INFO  01:28:53,812 - Obradjuje se funkcija nesto na liniji 16
INFO  01:28:53,812 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:28:53,812 - Obradjuje se funkcija kita na liniji 23
INFO  01:28:53,812 - Obradjuje se funkcija main na liniji 26
INFO  01:28:53,812 - Deklarisana niz promenljiva x na liniji 26
INFO  01:28:53,812 - Deklarisana promenljiva i na liniji 26
INFO  01:28:53,812 - Deklarisana promenljiva l na liniji 26
INFO  01:28:53,812 - Deklarisana promenljiva c na liniji 26
INFO  01:28:53,812 - Deklarisana promenljiva rek na liniji 26
INFO  01:28:53,812 - Deklarisana promenljiva neka na liniji 26
INFO  01:28:53,812 - Pristupa se promenljivoj i na liniji 28
INFO  01:28:53,813 -  Deklarisanih promenljivih ima = 7
INFO  01:28:53,813 - ===================================
INFO  01:28:53,818 - neki kurac
INFO  01:28:53,818 - neko sranje
INFO  01:28:53,818 - neko sranje2
INFO  01:28:53,818 - neko sranje2
INFO  01:28:53,819 - neko sranje
INFO  01:28:53,819 - neko sranje
INFO  01:28:53,819 - matched
INFO  01:28:53,819 - Parsiranje uspesno zavrseno!
INFO  01:30:15,982 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:30:16,036 - #2 program
INFO  01:30:16,036 - #48 p
INFO  01:30:16,036 - #48 int
INFO  01:30:16,037 - #48 x
INFO  01:30:16,037 - #38 ;
INFO  01:30:16,038 - #48 int
INFO  01:30:16,039 - #48 y
INFO  01:30:16,039 - #38 ;
INFO  01:30:16,039 - #21 record
INFO  01:30:16,039 - #48 Rekord
INFO  01:30:16,039 - #46 {
INFO  01:30:16,039 - #48 int
INFO  01:30:16,040 - #48 d
INFO  01:30:16,040 - #40 ,
INFO  01:30:16,040 - #48 c
INFO  01:30:16,040 - #38 ;
INFO  01:30:16,040 - #47 }
INFO  01:30:16,041 - #5 class
INFO  01:30:16,041 - #48 Klasa
INFO  01:30:16,041 - #46 {
INFO  01:30:16,042 - #48 int
INFO  01:30:16,042 - #48 b
INFO  01:30:16,042 - #40 ,
INFO  01:30:16,043 - #48 a
INFO  01:30:16,043 - #40 ,
INFO  01:30:16,043 - #48 g
INFO  01:30:16,043 - #38 ;
INFO  01:30:16,043 - #46 {
INFO  01:30:16,043 - #47 }
INFO  01:30:16,043 - #47 }
INFO  01:30:16,044 - #46 {
INFO  01:30:16,044 - #48 int
INFO  01:30:16,044 - #48 nesto
INFO  01:30:16,045 - #42 (
INFO  01:30:16,045 - #43 )
INFO  01:30:16,045 - #46 {
INFO  01:30:16,045 - #13 print
INFO  01:30:16,047 - #42 (
INFO  01:30:16,047 - #51 c
INFO  01:30:16,047 - #43 )
INFO  01:30:16,047 - #38 ;
INFO  01:30:16,047 - #13 print
INFO  01:30:16,048 - #42 (
INFO  01:30:16,048 - #50 5
INFO  01:30:16,048 - #43 )
INFO  01:30:16,048 - #38 ;
INFO  01:30:16,048 - #15 return
INFO  01:30:16,048 - #50 2
INFO  01:30:16,048 - #38 ;
INFO  01:30:16,048 - #47 }
INFO  01:30:16,048 - #3 void
INFO  01:30:16,049 - #48 kita2
INFO  01:30:16,049 - #42 (
INFO  01:30:16,050 - #43 )
INFO  01:30:16,050 - #46 {
INFO  01:30:16,050 - #47 }
INFO  01:30:16,050 - #3 void
INFO  01:30:16,050 - #48 kita
INFO  01:30:16,050 - #42 (
INFO  01:30:16,050 - #43 )
INFO  01:30:16,050 - #46 {
INFO  01:30:16,050 - #47 }
INFO  01:30:16,050 - #3 void
INFO  01:30:16,050 - #48 main
INFO  01:30:16,051 - #42 (
INFO  01:30:16,051 - #43 )
INFO  01:30:16,051 - #48 int
INFO  01:30:16,051 - #48 x
INFO  01:30:16,051 - #44 [
INFO  01:30:16,051 - #45 ]
INFO  01:30:16,051 - #40 ,
INFO  01:30:16,051 - #48 i
INFO  01:30:16,052 - #40 ,
INFO  01:30:16,052 - #48 l
INFO  01:30:16,052 - #38 ;
INFO  01:30:16,052 - #48 char
INFO  01:30:16,052 - #48 c
INFO  01:30:16,052 - #38 ;
INFO  01:30:16,052 - #48 Rekord
INFO  01:30:16,052 - #48 rek
INFO  01:30:16,052 - #38 ;
INFO  01:30:16,052 - #48 Klasa
INFO  01:30:16,052 - #48 neka
INFO  01:30:16,052 - #38 ;
INFO  01:30:16,052 - #46 {
INFO  01:30:16,052 - #48 i
INFO  01:30:16,052 - #35 =
INFO  01:30:16,053 - #50 0
INFO  01:30:16,054 - #38 ;
INFO  01:30:16,054 - #9 if
INFO  01:30:16,054 - #42 (
INFO  01:30:16,054 - #50 3
INFO  01:30:16,055 - #31 <
INFO  01:30:16,055 - #50 2
INFO  01:30:16,055 - #34 ||
INFO  01:30:16,056 - #49 false
INFO  01:30:16,056 - #34 ||
INFO  01:30:16,057 - #50 4
INFO  01:30:16,057 - #31 <
INFO  01:30:16,057 - #50 2
INFO  01:30:16,057 - #33 &&
INFO  01:30:16,057 - #50 1
INFO  01:30:16,057 - #27 ==
INFO  01:30:16,057 - #50 2
INFO  01:30:16,058 - #43 )
INFO  01:30:16,058 - #46 {
INFO  01:30:16,058 - #13 print
INFO  01:30:16,058 - #42 (
INFO  01:30:16,058 - #50 1
INFO  01:30:16,058 - #43 )
INFO  01:30:16,058 - #38 ;
INFO  01:30:16,058 - #47 }
INFO  01:30:16,058 - #7 else
INFO  01:30:16,059 - #46 {
INFO  01:30:16,059 - #13 print
INFO  01:30:16,059 - #42 (
INFO  01:30:16,059 - #50 2
INFO  01:30:16,059 - #43 )
INFO  01:30:16,059 - #38 ;
INFO  01:30:16,059 - #47 }
INFO  01:30:16,060 - #47 }
INFO  01:30:16,060 - #47 }
INFO  01:30:16,065 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               3
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    SingleCondFactJMP(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             false
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:30:16,065 - ===================================
INFO  01:30:16,069 - Deklarisana promenljiva x na liniji 2
INFO  01:30:16,069 - Deklarisana promenljiva y na liniji 2
INFO  01:30:16,069 - Deklarisan rekord Rekord na liniji 3
INFO  01:30:16,069 - Deklarisana promenljiva d na liniji 5
INFO  01:30:16,069 - Deklarisana promenljiva c na liniji 5
INFO  01:30:16,069 - Deklarisana  klasa Klasa na liniji 7
INFO  01:30:16,069 - Deklarisana poljeb na liniji 9
INFO  01:30:16,069 - Deklarisana poljeb na liniji 9
INFO  01:30:16,069 - Deklarisana poljea na liniji 9
INFO  01:30:16,069 - Deklarisana poljea na liniji 9
INFO  01:30:16,069 - Deklarisana poljeg na liniji 9
INFO  01:30:16,070 - Deklarisana poljeg na liniji 9
INFO  01:30:16,070 - Obradjuje se funkcija nesto na liniji 16
INFO  01:30:16,070 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:30:16,070 - Obradjuje se funkcija kita na liniji 23
INFO  01:30:16,070 - Obradjuje se funkcija main na liniji 26
INFO  01:30:16,070 - Deklarisana niz promenljiva x na liniji 26
INFO  01:30:16,070 - Deklarisana promenljiva i na liniji 26
INFO  01:30:16,070 - Deklarisana promenljiva l na liniji 26
INFO  01:30:16,070 - Deklarisana promenljiva c na liniji 26
INFO  01:30:16,070 - Deklarisana promenljiva rek na liniji 26
INFO  01:30:16,070 - Deklarisana promenljiva neka na liniji 26
INFO  01:30:16,070 - Pristupa se promenljivoj i na liniji 28
INFO  01:30:16,071 -  Deklarisanih promenljivih ima = 7
INFO  01:30:16,071 - ===================================
INFO  01:30:16,076 - neki kurac
INFO  01:30:16,076 - neko sranje
INFO  01:30:16,076 - neko sranje2
INFO  01:30:16,076 - neko sranje2
INFO  01:30:16,076 - neko sranje
INFO  01:30:16,076 - neko sranje
INFO  01:30:16,076 - matched
INFO  01:30:16,077 - Parsiranje uspesno zavrseno!
INFO  01:31:25,911 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:31:25,965 - #2 program
INFO  01:31:25,965 - #48 p
INFO  01:31:25,965 - #48 int
INFO  01:31:25,967 - #48 x
INFO  01:31:25,967 - #38 ;
INFO  01:31:25,968 - #48 int
INFO  01:31:25,969 - #48 y
INFO  01:31:25,969 - #38 ;
INFO  01:31:25,969 - #21 record
INFO  01:31:25,969 - #48 Rekord
INFO  01:31:25,969 - #46 {
INFO  01:31:25,970 - #48 int
INFO  01:31:25,970 - #48 d
INFO  01:31:25,970 - #40 ,
INFO  01:31:25,970 - #48 c
INFO  01:31:25,970 - #38 ;
INFO  01:31:25,970 - #47 }
INFO  01:31:25,971 - #5 class
INFO  01:31:25,971 - #48 Klasa
INFO  01:31:25,971 - #46 {
INFO  01:31:25,972 - #48 int
INFO  01:31:25,972 - #48 b
INFO  01:31:25,972 - #40 ,
INFO  01:31:25,972 - #48 a
INFO  01:31:25,972 - #40 ,
INFO  01:31:25,973 - #48 g
INFO  01:31:25,973 - #38 ;
INFO  01:31:25,973 - #46 {
INFO  01:31:25,973 - #47 }
INFO  01:31:25,973 - #47 }
INFO  01:31:25,973 - #46 {
INFO  01:31:25,974 - #48 int
INFO  01:31:25,974 - #48 nesto
INFO  01:31:25,974 - #42 (
INFO  01:31:25,974 - #43 )
INFO  01:31:25,975 - #46 {
INFO  01:31:25,975 - #13 print
INFO  01:31:25,976 - #42 (
INFO  01:31:25,976 - #51 c
INFO  01:31:25,976 - #43 )
INFO  01:31:25,977 - #38 ;
INFO  01:31:25,977 - #13 print
INFO  01:31:25,977 - #42 (
INFO  01:31:25,977 - #50 5
INFO  01:31:25,977 - #43 )
INFO  01:31:25,977 - #38 ;
INFO  01:31:25,977 - #15 return
INFO  01:31:25,978 - #50 2
INFO  01:31:25,978 - #38 ;
INFO  01:31:25,978 - #47 }
INFO  01:31:25,978 - #3 void
INFO  01:31:25,979 - #48 kita2
INFO  01:31:25,979 - #42 (
INFO  01:31:25,979 - #43 )
INFO  01:31:25,979 - #46 {
INFO  01:31:25,979 - #47 }
INFO  01:31:25,979 - #3 void
INFO  01:31:25,979 - #48 kita
INFO  01:31:25,979 - #42 (
INFO  01:31:25,979 - #43 )
INFO  01:31:25,979 - #46 {
INFO  01:31:25,979 - #47 }
INFO  01:31:25,979 - #3 void
INFO  01:31:25,980 - #48 main
INFO  01:31:25,980 - #42 (
INFO  01:31:25,980 - #43 )
INFO  01:31:25,980 - #48 int
INFO  01:31:25,980 - #48 x
INFO  01:31:25,980 - #44 [
INFO  01:31:25,980 - #45 ]
INFO  01:31:25,980 - #40 ,
INFO  01:31:25,981 - #48 i
INFO  01:31:25,981 - #40 ,
INFO  01:31:25,981 - #48 l
INFO  01:31:25,981 - #38 ;
INFO  01:31:25,981 - #48 char
INFO  01:31:25,981 - #48 c
INFO  01:31:25,981 - #38 ;
INFO  01:31:25,981 - #48 Rekord
INFO  01:31:25,981 - #48 rek
INFO  01:31:25,981 - #38 ;
INFO  01:31:25,981 - #48 Klasa
INFO  01:31:25,982 - #48 neka
INFO  01:31:25,982 - #38 ;
INFO  01:31:25,982 - #46 {
INFO  01:31:25,982 - #48 i
INFO  01:31:25,982 - #35 =
INFO  01:31:25,983 - #50 0
INFO  01:31:25,983 - #38 ;
INFO  01:31:25,983 - #9 if
INFO  01:31:25,984 - #42 (
INFO  01:31:25,984 - #50 3
INFO  01:31:25,984 - #31 <
INFO  01:31:25,984 - #50 2
INFO  01:31:25,985 - #34 ||
INFO  01:31:25,986 - #49 false
INFO  01:31:25,987 - #34 ||
INFO  01:31:25,987 - #50 4
INFO  01:31:25,987 - #31 <
INFO  01:31:25,987 - #50 2
INFO  01:31:25,987 - #33 &&
INFO  01:31:25,987 - #50 1
INFO  01:31:25,988 - #27 ==
INFO  01:31:25,988 - #50 2
INFO  01:31:25,988 - #43 )
INFO  01:31:25,989 - #46 {
INFO  01:31:25,989 - #13 print
INFO  01:31:25,989 - #42 (
INFO  01:31:25,989 - #50 1
INFO  01:31:25,989 - #43 )
INFO  01:31:25,989 - #38 ;
INFO  01:31:25,989 - #47 }
INFO  01:31:25,989 - #7 else
INFO  01:31:25,989 - #46 {
INFO  01:31:25,990 - #13 print
INFO  01:31:25,990 - #42 (
INFO  01:31:25,990 - #50 2
INFO  01:31:25,990 - #43 )
INFO  01:31:25,990 - #38 ;
INFO  01:31:25,990 - #47 }
INFO  01:31:25,990 - #47 }
INFO  01:31:25,990 - #47 }
INFO  01:31:25,995 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               3
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    SingleCondFactJMP(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             false
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:31:25,996 - ===================================
INFO  01:31:25,999 - Deklarisana promenljiva x na liniji 2
INFO  01:31:25,999 - Deklarisana promenljiva y na liniji 2
INFO  01:31:25,999 - Deklarisan rekord Rekord na liniji 3
INFO  01:31:25,999 - Deklarisana promenljiva d na liniji 5
INFO  01:31:25,999 - Deklarisana promenljiva c na liniji 5
INFO  01:31:26,000 - Deklarisana  klasa Klasa na liniji 7
INFO  01:31:26,000 - Deklarisana poljeb na liniji 9
INFO  01:31:26,000 - Deklarisana poljeb na liniji 9
INFO  01:31:26,000 - Deklarisana poljea na liniji 9
INFO  01:31:26,000 - Deklarisana poljea na liniji 9
INFO  01:31:26,000 - Deklarisana poljeg na liniji 9
INFO  01:31:26,000 - Deklarisana poljeg na liniji 9
INFO  01:31:26,000 - Obradjuje se funkcija nesto na liniji 16
INFO  01:31:26,000 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:31:26,000 - Obradjuje se funkcija kita na liniji 23
INFO  01:31:26,000 - Obradjuje se funkcija main na liniji 26
INFO  01:31:26,000 - Deklarisana niz promenljiva x na liniji 26
INFO  01:31:26,000 - Deklarisana promenljiva i na liniji 26
INFO  01:31:26,000 - Deklarisana promenljiva l na liniji 26
INFO  01:31:26,001 - Deklarisana promenljiva c na liniji 26
INFO  01:31:26,001 - Deklarisana promenljiva rek na liniji 26
INFO  01:31:26,001 - Deklarisana promenljiva neka na liniji 26
INFO  01:31:26,001 - Pristupa se promenljivoj i na liniji 28
INFO  01:31:26,001 -  Deklarisanih promenljivih ima = 7
INFO  01:31:26,001 - ===================================
INFO  01:31:26,007 - neki kurac
INFO  01:31:26,007 - neko sranje
INFO  01:31:26,007 - neko sranje2
INFO  01:31:26,007 - neko sranje2
INFO  01:31:26,007 - neko sranje
INFO  01:31:26,007 - neko sranje
INFO  01:31:26,007 - matched
INFO  01:31:26,008 - Parsiranje uspesno zavrseno!
INFO  01:31:53,324 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:31:53,378 - #2 program
INFO  01:31:53,378 - #48 p
INFO  01:31:53,378 - #48 int
INFO  01:31:53,379 - #48 x
INFO  01:31:53,380 - #38 ;
INFO  01:31:53,381 - #48 int
INFO  01:31:53,381 - #48 y
INFO  01:31:53,381 - #38 ;
INFO  01:31:53,382 - #21 record
INFO  01:31:53,382 - #48 Rekord
INFO  01:31:53,382 - #46 {
INFO  01:31:53,382 - #48 int
INFO  01:31:53,383 - #48 d
INFO  01:31:53,383 - #40 ,
INFO  01:31:53,383 - #48 c
INFO  01:31:53,383 - #38 ;
INFO  01:31:53,383 - #47 }
INFO  01:31:53,383 - #5 class
INFO  01:31:53,384 - #48 Klasa
INFO  01:31:53,384 - #46 {
INFO  01:31:53,385 - #48 int
INFO  01:31:53,385 - #48 b
INFO  01:31:53,385 - #40 ,
INFO  01:31:53,385 - #48 a
INFO  01:31:53,385 - #40 ,
INFO  01:31:53,386 - #48 g
INFO  01:31:53,386 - #38 ;
INFO  01:31:53,386 - #46 {
INFO  01:31:53,386 - #47 }
INFO  01:31:53,386 - #47 }
INFO  01:31:53,386 - #46 {
INFO  01:31:53,387 - #48 int
INFO  01:31:53,387 - #48 nesto
INFO  01:31:53,387 - #42 (
INFO  01:31:53,388 - #43 )
INFO  01:31:53,388 - #46 {
INFO  01:31:53,388 - #13 print
INFO  01:31:53,389 - #42 (
INFO  01:31:53,390 - #51 c
INFO  01:31:53,390 - #43 )
INFO  01:31:53,391 - #38 ;
INFO  01:31:53,391 - #13 print
INFO  01:31:53,391 - #42 (
INFO  01:31:53,391 - #50 5
INFO  01:31:53,391 - #43 )
INFO  01:31:53,391 - #38 ;
INFO  01:31:53,391 - #15 return
INFO  01:31:53,391 - #50 2
INFO  01:31:53,392 - #38 ;
INFO  01:31:53,392 - #47 }
INFO  01:31:53,392 - #3 void
INFO  01:31:53,392 - #48 kita2
INFO  01:31:53,393 - #42 (
INFO  01:31:53,393 - #43 )
INFO  01:31:53,393 - #46 {
INFO  01:31:53,393 - #47 }
INFO  01:31:53,393 - #3 void
INFO  01:31:53,393 - #48 kita
INFO  01:31:53,393 - #42 (
INFO  01:31:53,393 - #43 )
INFO  01:31:53,393 - #46 {
INFO  01:31:53,393 - #47 }
INFO  01:31:53,393 - #3 void
INFO  01:31:53,393 - #48 main
INFO  01:31:53,393 - #42 (
INFO  01:31:53,393 - #43 )
INFO  01:31:53,394 - #48 int
INFO  01:31:53,394 - #48 x
INFO  01:31:53,394 - #44 [
INFO  01:31:53,394 - #45 ]
INFO  01:31:53,394 - #40 ,
INFO  01:31:53,395 - #48 i
INFO  01:31:53,395 - #40 ,
INFO  01:31:53,395 - #48 l
INFO  01:31:53,395 - #38 ;
INFO  01:31:53,395 - #48 char
INFO  01:31:53,395 - #48 c
INFO  01:31:53,395 - #38 ;
INFO  01:31:53,395 - #48 Rekord
INFO  01:31:53,395 - #48 rek
INFO  01:31:53,395 - #38 ;
INFO  01:31:53,395 - #48 Klasa
INFO  01:31:53,395 - #48 neka
INFO  01:31:53,395 - #38 ;
INFO  01:31:53,395 - #46 {
INFO  01:31:53,395 - #48 i
INFO  01:31:53,395 - #35 =
INFO  01:31:53,396 - #50 0
INFO  01:31:53,397 - #38 ;
INFO  01:31:53,397 - #9 if
INFO  01:31:53,397 - #42 (
INFO  01:31:53,397 - #50 3
INFO  01:31:53,398 - #31 <
INFO  01:31:53,398 - #50 2
INFO  01:31:53,398 - #34 ||
INFO  01:31:53,399 - #49 false
INFO  01:31:53,400 - #34 ||
INFO  01:31:53,400 - #50 4
INFO  01:31:53,400 - #31 <
INFO  01:31:53,400 - #50 2
INFO  01:31:53,400 - #33 &&
INFO  01:31:53,400 - #50 1
INFO  01:31:53,401 - #27 ==
INFO  01:31:53,401 - #50 2
INFO  01:31:53,401 - #43 )
INFO  01:31:53,401 - #46 {
INFO  01:31:53,401 - #13 print
INFO  01:31:53,401 - #42 (
INFO  01:31:53,401 - #50 1
INFO  01:31:53,401 - #43 )
INFO  01:31:53,402 - #38 ;
INFO  01:31:53,402 - #47 }
INFO  01:31:53,402 - #7 else
INFO  01:31:53,402 - #46 {
INFO  01:31:53,402 - #13 print
INFO  01:31:53,402 - #42 (
INFO  01:31:53,402 - #50 2
INFO  01:31:53,402 - #43 )
INFO  01:31:53,402 - #38 ;
INFO  01:31:53,403 - #47 }
INFO  01:31:53,403 - #47 }
INFO  01:31:53,403 - #47 }
INFO  01:31:53,408 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               3
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    SingleCondFactJMP(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             false
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:31:53,409 - ===================================
INFO  01:31:53,412 - Deklarisana promenljiva x na liniji 2
INFO  01:31:53,412 - Deklarisana promenljiva y na liniji 2
INFO  01:31:53,412 - Deklarisan rekord Rekord na liniji 3
INFO  01:31:53,413 - Deklarisana promenljiva d na liniji 5
INFO  01:31:53,413 - Deklarisana promenljiva c na liniji 5
INFO  01:31:53,413 - Deklarisana  klasa Klasa na liniji 7
INFO  01:31:53,413 - Deklarisana poljeb na liniji 9
INFO  01:31:53,413 - Deklarisana poljeb na liniji 9
INFO  01:31:53,413 - Deklarisana poljea na liniji 9
INFO  01:31:53,413 - Deklarisana poljea na liniji 9
INFO  01:31:53,413 - Deklarisana poljeg na liniji 9
INFO  01:31:53,413 - Deklarisana poljeg na liniji 9
INFO  01:31:53,413 - Obradjuje se funkcija nesto na liniji 16
INFO  01:31:53,413 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:31:53,413 - Obradjuje se funkcija kita na liniji 23
INFO  01:31:53,413 - Obradjuje se funkcija main na liniji 26
INFO  01:31:53,413 - Deklarisana niz promenljiva x na liniji 26
INFO  01:31:53,413 - Deklarisana promenljiva i na liniji 26
INFO  01:31:53,413 - Deklarisana promenljiva l na liniji 26
INFO  01:31:53,413 - Deklarisana promenljiva c na liniji 26
INFO  01:31:53,414 - Deklarisana promenljiva rek na liniji 26
INFO  01:31:53,414 - Deklarisana promenljiva neka na liniji 26
INFO  01:31:53,414 - Pristupa se promenljivoj i na liniji 28
INFO  01:31:53,414 -  Deklarisanih promenljivih ima = 7
INFO  01:31:53,414 - ===================================
INFO  01:31:53,419 - bratskalovskiii2
INFO  01:31:53,419 - neki kurac
INFO  01:31:53,419 - neko sranje
INFO  01:31:53,419 - neko sranje2
INFO  01:31:53,419 - bratskalovskiii2
INFO  01:31:53,419 - neko sranje2
INFO  01:31:53,419 - bratskalovskiii2
INFO  01:31:53,420 - neko sranje
INFO  01:31:53,420 - neko sranje
INFO  01:31:53,420 - matched
INFO  01:31:53,420 - Parsiranje uspesno zavrseno!
INFO  01:32:18,397 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:32:18,450 - #2 program
INFO  01:32:18,450 - #48 p
INFO  01:32:18,450 - #48 int
INFO  01:32:18,451 - #48 x
INFO  01:32:18,452 - #38 ;
INFO  01:32:18,453 - #48 int
INFO  01:32:18,453 - #48 y
INFO  01:32:18,453 - #38 ;
INFO  01:32:18,454 - #21 record
INFO  01:32:18,454 - #48 Rekord
INFO  01:32:18,454 - #46 {
INFO  01:32:18,454 - #48 int
INFO  01:32:18,455 - #48 d
INFO  01:32:18,455 - #40 ,
INFO  01:32:18,455 - #48 c
INFO  01:32:18,455 - #38 ;
INFO  01:32:18,455 - #47 }
INFO  01:32:18,455 - #5 class
INFO  01:32:18,456 - #48 Klasa
INFO  01:32:18,456 - #46 {
INFO  01:32:18,457 - #48 int
INFO  01:32:18,457 - #48 b
INFO  01:32:18,457 - #40 ,
INFO  01:32:18,457 - #48 a
INFO  01:32:18,457 - #40 ,
INFO  01:32:18,458 - #48 g
INFO  01:32:18,458 - #38 ;
INFO  01:32:18,458 - #46 {
INFO  01:32:18,458 - #47 }
INFO  01:32:18,458 - #47 }
INFO  01:32:18,459 - #46 {
INFO  01:32:18,459 - #48 int
INFO  01:32:18,459 - #48 nesto
INFO  01:32:18,459 - #42 (
INFO  01:32:18,459 - #43 )
INFO  01:32:18,460 - #46 {
INFO  01:32:18,460 - #13 print
INFO  01:32:18,461 - #42 (
INFO  01:32:18,461 - #51 c
INFO  01:32:18,461 - #43 )
INFO  01:32:18,462 - #38 ;
INFO  01:32:18,462 - #13 print
INFO  01:32:18,463 - #42 (
INFO  01:32:18,463 - #50 5
INFO  01:32:18,463 - #43 )
INFO  01:32:18,463 - #38 ;
INFO  01:32:18,463 - #15 return
INFO  01:32:18,463 - #50 2
INFO  01:32:18,463 - #38 ;
INFO  01:32:18,463 - #47 }
INFO  01:32:18,463 - #3 void
INFO  01:32:18,464 - #48 kita2
INFO  01:32:18,464 - #42 (
INFO  01:32:18,464 - #43 )
INFO  01:32:18,464 - #46 {
INFO  01:32:18,464 - #47 }
INFO  01:32:18,464 - #3 void
INFO  01:32:18,465 - #48 kita
INFO  01:32:18,465 - #42 (
INFO  01:32:18,465 - #43 )
INFO  01:32:18,465 - #46 {
INFO  01:32:18,465 - #47 }
INFO  01:32:18,465 - #3 void
INFO  01:32:18,465 - #48 main
INFO  01:32:18,465 - #42 (
INFO  01:32:18,465 - #43 )
INFO  01:32:18,465 - #48 int
INFO  01:32:18,465 - #48 x
INFO  01:32:18,465 - #44 [
INFO  01:32:18,465 - #45 ]
INFO  01:32:18,466 - #40 ,
INFO  01:32:18,466 - #48 i
INFO  01:32:18,466 - #40 ,
INFO  01:32:18,466 - #48 l
INFO  01:32:18,466 - #38 ;
INFO  01:32:18,466 - #48 char
INFO  01:32:18,466 - #48 c
INFO  01:32:18,466 - #38 ;
INFO  01:32:18,467 - #48 Rekord
INFO  01:32:18,467 - #48 rek
INFO  01:32:18,467 - #38 ;
INFO  01:32:18,467 - #48 Klasa
INFO  01:32:18,467 - #48 neka
INFO  01:32:18,467 - #38 ;
INFO  01:32:18,467 - #46 {
INFO  01:32:18,467 - #48 i
INFO  01:32:18,467 - #35 =
INFO  01:32:18,468 - #50 0
INFO  01:32:18,468 - #38 ;
INFO  01:32:18,469 - #9 if
INFO  01:32:18,469 - #42 (
INFO  01:32:18,469 - #50 3
INFO  01:32:18,469 - #31 <
INFO  01:32:18,469 - #50 2
INFO  01:32:18,470 - #34 ||
INFO  01:32:18,471 - #49 false
INFO  01:32:18,471 - #34 ||
INFO  01:32:18,471 - #50 4
INFO  01:32:18,472 - #31 <
INFO  01:32:18,472 - #50 2
INFO  01:32:18,472 - #33 &&
INFO  01:32:18,472 - #50 1
INFO  01:32:18,472 - #27 ==
INFO  01:32:18,472 - #50 2
INFO  01:32:18,473 - #43 )
INFO  01:32:18,473 - #46 {
INFO  01:32:18,473 - #13 print
INFO  01:32:18,473 - #42 (
INFO  01:32:18,473 - #50 1
INFO  01:32:18,473 - #43 )
INFO  01:32:18,473 - #38 ;
INFO  01:32:18,473 - #47 }
INFO  01:32:18,473 - #7 else
INFO  01:32:18,474 - #46 {
INFO  01:32:18,474 - #13 print
INFO  01:32:18,474 - #42 (
INFO  01:32:18,474 - #50 2
INFO  01:32:18,474 - #43 )
INFO  01:32:18,475 - #38 ;
INFO  01:32:18,475 - #47 }
INFO  01:32:18,475 - #47 }
INFO  01:32:18,475 - #47 }
INFO  01:32:18,480 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               3
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    SingleCondFactJMP(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             false
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:32:18,481 - ===================================
INFO  01:32:18,484 - Deklarisana promenljiva x na liniji 2
INFO  01:32:18,484 - Deklarisana promenljiva y na liniji 2
INFO  01:32:18,484 - Deklarisan rekord Rekord na liniji 3
INFO  01:32:18,484 - Deklarisana promenljiva d na liniji 5
INFO  01:32:18,484 - Deklarisana promenljiva c na liniji 5
INFO  01:32:18,485 - Deklarisana  klasa Klasa na liniji 7
INFO  01:32:18,485 - Deklarisana poljeb na liniji 9
INFO  01:32:18,485 - Deklarisana poljeb na liniji 9
INFO  01:32:18,485 - Deklarisana poljea na liniji 9
INFO  01:32:18,485 - Deklarisana poljea na liniji 9
INFO  01:32:18,485 - Deklarisana poljeg na liniji 9
INFO  01:32:18,485 - Deklarisana poljeg na liniji 9
INFO  01:32:18,485 - Obradjuje se funkcija nesto na liniji 16
INFO  01:32:18,485 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:32:18,485 - Obradjuje se funkcija kita na liniji 23
INFO  01:32:18,485 - Obradjuje se funkcija main na liniji 26
INFO  01:32:18,485 - Deklarisana niz promenljiva x na liniji 26
INFO  01:32:18,485 - Deklarisana promenljiva i na liniji 26
INFO  01:32:18,485 - Deklarisana promenljiva l na liniji 26
INFO  01:32:18,486 - Deklarisana promenljiva c na liniji 26
INFO  01:32:18,486 - Deklarisana promenljiva rek na liniji 26
INFO  01:32:18,486 - Deklarisana promenljiva neka na liniji 26
INFO  01:32:18,486 - Pristupa se promenljivoj i na liniji 28
INFO  01:32:18,486 -  Deklarisanih promenljivih ima = 7
INFO  01:32:18,486 - ===================================
INFO  01:32:18,491 - neki kurac
INFO  01:32:18,491 - neko sranje
INFO  01:32:18,491 - neko sranje2
INFO  01:32:18,491 - neko sranje2
INFO  01:32:18,491 - neko sranje
INFO  01:32:18,491 - neko sranje
INFO  01:32:18,492 - matched
INFO  01:32:18,492 - Parsiranje uspesno zavrseno!
INFO  01:32:33,090 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:32:33,144 - #2 program
INFO  01:32:33,144 - #48 p
INFO  01:32:33,144 - #48 int
INFO  01:32:33,145 - #48 x
INFO  01:32:33,146 - #38 ;
INFO  01:32:33,147 - #48 int
INFO  01:32:33,147 - #48 y
INFO  01:32:33,147 - #38 ;
INFO  01:32:33,147 - #21 record
INFO  01:32:33,147 - #48 Rekord
INFO  01:32:33,147 - #46 {
INFO  01:32:33,148 - #48 int
INFO  01:32:33,148 - #48 d
INFO  01:32:33,148 - #40 ,
INFO  01:32:33,149 - #48 c
INFO  01:32:33,149 - #38 ;
INFO  01:32:33,149 - #47 }
INFO  01:32:33,149 - #5 class
INFO  01:32:33,150 - #48 Klasa
INFO  01:32:33,150 - #46 {
INFO  01:32:33,150 - #48 int
INFO  01:32:33,150 - #48 b
INFO  01:32:33,151 - #40 ,
INFO  01:32:33,151 - #48 a
INFO  01:32:33,151 - #40 ,
INFO  01:32:33,151 - #48 g
INFO  01:32:33,151 - #38 ;
INFO  01:32:33,151 - #46 {
INFO  01:32:33,151 - #47 }
INFO  01:32:33,151 - #47 }
INFO  01:32:33,152 - #46 {
INFO  01:32:33,152 - #48 int
INFO  01:32:33,153 - #48 nesto
INFO  01:32:33,153 - #42 (
INFO  01:32:33,153 - #43 )
INFO  01:32:33,154 - #46 {
INFO  01:32:33,154 - #13 print
INFO  01:32:33,155 - #42 (
INFO  01:32:33,155 - #51 c
INFO  01:32:33,155 - #43 )
INFO  01:32:33,156 - #38 ;
INFO  01:32:33,156 - #13 print
INFO  01:32:33,156 - #42 (
INFO  01:32:33,156 - #50 5
INFO  01:32:33,157 - #43 )
INFO  01:32:33,157 - #38 ;
INFO  01:32:33,157 - #15 return
INFO  01:32:33,157 - #50 2
INFO  01:32:33,157 - #38 ;
INFO  01:32:33,157 - #47 }
INFO  01:32:33,157 - #3 void
INFO  01:32:33,158 - #48 kita2
INFO  01:32:33,158 - #42 (
INFO  01:32:33,158 - #43 )
INFO  01:32:33,158 - #46 {
INFO  01:32:33,158 - #47 }
INFO  01:32:33,158 - #3 void
INFO  01:32:33,158 - #48 kita
INFO  01:32:33,159 - #42 (
INFO  01:32:33,159 - #43 )
INFO  01:32:33,159 - #46 {
INFO  01:32:33,159 - #47 }
INFO  01:32:33,159 - #3 void
INFO  01:32:33,159 - #48 main
INFO  01:32:33,159 - #42 (
INFO  01:32:33,159 - #43 )
INFO  01:32:33,159 - #48 int
INFO  01:32:33,159 - #48 x
INFO  01:32:33,159 - #44 [
INFO  01:32:33,159 - #45 ]
INFO  01:32:33,159 - #40 ,
INFO  01:32:33,160 - #48 i
INFO  01:32:33,160 - #40 ,
INFO  01:32:33,160 - #48 l
INFO  01:32:33,160 - #38 ;
INFO  01:32:33,160 - #48 char
INFO  01:32:33,160 - #48 c
INFO  01:32:33,160 - #38 ;
INFO  01:32:33,160 - #48 Rekord
INFO  01:32:33,161 - #48 rek
INFO  01:32:33,161 - #38 ;
INFO  01:32:33,161 - #48 Klasa
INFO  01:32:33,161 - #48 neka
INFO  01:32:33,161 - #38 ;
INFO  01:32:33,161 - #46 {
INFO  01:32:33,161 - #48 i
INFO  01:32:33,161 - #35 =
INFO  01:32:33,163 - #50 0
INFO  01:32:33,163 - #38 ;
INFO  01:32:33,163 - #9 if
INFO  01:32:33,164 - #42 (
INFO  01:32:33,164 - #50 3
INFO  01:32:33,164 - #31 <
INFO  01:32:33,165 - #50 2
INFO  01:32:33,166 - #34 ||
INFO  01:32:33,167 - #49 false
INFO  01:32:33,168 - #34 ||
INFO  01:32:33,168 - #50 4
INFO  01:32:33,168 - #31 <
INFO  01:32:33,168 - #50 2
INFO  01:32:33,168 - #33 &&
INFO  01:32:33,168 - #50 1
INFO  01:32:33,169 - #27 ==
INFO  01:32:33,169 - #50 2
INFO  01:32:33,169 - #43 )
INFO  01:32:33,169 - #46 {
INFO  01:32:33,169 - #13 print
INFO  01:32:33,170 - #42 (
INFO  01:32:33,170 - #50 1
INFO  01:32:33,170 - #43 )
INFO  01:32:33,170 - #38 ;
INFO  01:32:33,170 - #47 }
INFO  01:32:33,170 - #7 else
INFO  01:32:33,170 - #46 {
INFO  01:32:33,171 - #13 print
INFO  01:32:33,171 - #42 (
INFO  01:32:33,171 - #50 2
INFO  01:32:33,171 - #43 )
INFO  01:32:33,171 - #38 ;
INFO  01:32:33,171 - #47 }
INFO  01:32:33,171 - #47 }
INFO  01:32:33,171 - #47 }
INFO  01:32:33,176 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               3
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    SingleCondFactJMP(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             false
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:32:33,177 - ===================================
INFO  01:32:33,180 - Deklarisana promenljiva x na liniji 2
INFO  01:32:33,181 - Deklarisana promenljiva y na liniji 2
INFO  01:32:33,181 - Deklarisan rekord Rekord na liniji 3
INFO  01:32:33,181 - Deklarisana promenljiva d na liniji 5
INFO  01:32:33,181 - Deklarisana promenljiva c na liniji 5
INFO  01:32:33,181 - Deklarisana  klasa Klasa na liniji 7
INFO  01:32:33,181 - Deklarisana poljeb na liniji 9
INFO  01:32:33,181 - Deklarisana poljeb na liniji 9
INFO  01:32:33,181 - Deklarisana poljea na liniji 9
INFO  01:32:33,181 - Deklarisana poljea na liniji 9
INFO  01:32:33,181 - Deklarisana poljeg na liniji 9
INFO  01:32:33,181 - Deklarisana poljeg na liniji 9
INFO  01:32:33,181 - Obradjuje se funkcija nesto na liniji 16
INFO  01:32:33,181 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:32:33,181 - Obradjuje se funkcija kita na liniji 23
INFO  01:32:33,181 - Obradjuje se funkcija main na liniji 26
INFO  01:32:33,181 - Deklarisana niz promenljiva x na liniji 26
INFO  01:32:33,182 - Deklarisana promenljiva i na liniji 26
INFO  01:32:33,182 - Deklarisana promenljiva l na liniji 26
INFO  01:32:33,182 - Deklarisana promenljiva c na liniji 26
INFO  01:32:33,182 - Deklarisana promenljiva rek na liniji 26
INFO  01:32:33,182 - Deklarisana promenljiva neka na liniji 26
INFO  01:32:33,182 - Pristupa se promenljivoj i na liniji 28
INFO  01:32:33,182 -  Deklarisanih promenljivih ima = 7
INFO  01:32:33,182 - ===================================
INFO  01:32:33,187 - neki kurac
INFO  01:32:33,187 - neko sranje
INFO  01:32:33,187 - neko sranje2
INFO  01:32:33,187 - bratskalovskiii
INFO  01:32:33,187 - neko sranje2
INFO  01:32:33,187 - bratskalovskiii
INFO  01:32:33,188 - neko sranje
INFO  01:32:33,188 - neko sranje
INFO  01:32:33,188 - matched
INFO  01:32:33,189 - Parsiranje uspesno zavrseno!
INFO  01:34:19,536 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:34:19,590 - #2 program
INFO  01:34:19,591 - #48 p
INFO  01:34:19,591 - #48 int
INFO  01:34:19,592 - #48 x
INFO  01:34:19,592 - #38 ;
INFO  01:34:19,593 - #48 int
INFO  01:34:19,593 - #48 y
INFO  01:34:19,594 - #38 ;
INFO  01:34:19,594 - #21 record
INFO  01:34:19,594 - #48 Rekord
INFO  01:34:19,594 - #46 {
INFO  01:34:19,594 - #48 int
INFO  01:34:19,595 - #48 d
INFO  01:34:19,595 - #40 ,
INFO  01:34:19,595 - #48 c
INFO  01:34:19,595 - #38 ;
INFO  01:34:19,595 - #47 }
INFO  01:34:19,596 - #5 class
INFO  01:34:19,596 - #48 Klasa
INFO  01:34:19,596 - #46 {
INFO  01:34:19,597 - #48 int
INFO  01:34:19,597 - #48 b
INFO  01:34:19,597 - #40 ,
INFO  01:34:19,597 - #48 a
INFO  01:34:19,597 - #40 ,
INFO  01:34:19,598 - #48 g
INFO  01:34:19,598 - #38 ;
INFO  01:34:19,598 - #46 {
INFO  01:34:19,598 - #47 }
INFO  01:34:19,598 - #47 }
INFO  01:34:19,599 - #46 {
INFO  01:34:19,599 - #48 int
INFO  01:34:19,599 - #48 nesto
INFO  01:34:19,599 - #42 (
INFO  01:34:19,600 - #43 )
INFO  01:34:19,600 - #46 {
INFO  01:34:19,600 - #13 print
INFO  01:34:19,602 - #42 (
INFO  01:34:19,602 - #51 c
INFO  01:34:19,602 - #43 )
INFO  01:34:19,603 - #38 ;
INFO  01:34:19,603 - #13 print
INFO  01:34:19,603 - #42 (
INFO  01:34:19,603 - #50 5
INFO  01:34:19,603 - #43 )
INFO  01:34:19,604 - #38 ;
INFO  01:34:19,604 - #15 return
INFO  01:34:19,604 - #50 2
INFO  01:34:19,604 - #38 ;
INFO  01:34:19,604 - #47 }
INFO  01:34:19,604 - #3 void
INFO  01:34:19,605 - #48 kita2
INFO  01:34:19,605 - #42 (
INFO  01:34:19,605 - #43 )
INFO  01:34:19,605 - #46 {
INFO  01:34:19,606 - #47 }
INFO  01:34:19,606 - #3 void
INFO  01:34:19,606 - #48 kita
INFO  01:34:19,606 - #42 (
INFO  01:34:19,606 - #43 )
INFO  01:34:19,606 - #46 {
INFO  01:34:19,606 - #47 }
INFO  01:34:19,606 - #3 void
INFO  01:34:19,606 - #48 main
INFO  01:34:19,606 - #42 (
INFO  01:34:19,606 - #43 )
INFO  01:34:19,606 - #48 int
INFO  01:34:19,606 - #48 x
INFO  01:34:19,607 - #44 [
INFO  01:34:19,607 - #45 ]
INFO  01:34:19,607 - #40 ,
INFO  01:34:19,608 - #48 i
INFO  01:34:19,608 - #40 ,
INFO  01:34:19,608 - #48 l
INFO  01:34:19,608 - #38 ;
INFO  01:34:19,608 - #48 char
INFO  01:34:19,608 - #48 c
INFO  01:34:19,609 - #38 ;
INFO  01:34:19,609 - #48 Rekord
INFO  01:34:19,609 - #48 rek
INFO  01:34:19,609 - #38 ;
INFO  01:34:19,609 - #48 Klasa
INFO  01:34:19,609 - #48 neka
INFO  01:34:19,609 - #38 ;
INFO  01:34:19,609 - #46 {
INFO  01:34:19,610 - #48 i
INFO  01:34:19,610 - #35 =
INFO  01:34:19,611 - #50 0
INFO  01:34:19,612 - #38 ;
INFO  01:34:19,612 - #9 if
INFO  01:34:19,613 - #42 (
INFO  01:34:19,613 - #50 3
INFO  01:34:19,613 - #31 <
INFO  01:34:19,613 - #50 2
INFO  01:34:19,614 - #34 ||
INFO  01:34:19,615 - #49 false
INFO  01:34:19,616 - #34 ||
INFO  01:34:19,616 - #50 4
INFO  01:34:19,616 - #31 <
INFO  01:34:19,616 - #50 2
INFO  01:34:19,616 - #33 &&
INFO  01:34:19,616 - #50 1
INFO  01:34:19,617 - #27 ==
INFO  01:34:19,617 - #50 2
INFO  01:34:19,617 - #43 )
INFO  01:34:19,618 - #46 {
INFO  01:34:19,618 - #13 print
INFO  01:34:19,618 - #42 (
INFO  01:34:19,618 - #50 1
INFO  01:34:19,618 - #43 )
INFO  01:34:19,618 - #38 ;
INFO  01:34:19,618 - #47 }
INFO  01:34:19,618 - #7 else
INFO  01:34:19,618 - #46 {
INFO  01:34:19,619 - #13 print
INFO  01:34:19,619 - #42 (
INFO  01:34:19,619 - #50 2
INFO  01:34:19,619 - #43 )
INFO  01:34:19,619 - #38 ;
INFO  01:34:19,619 - #47 }
INFO  01:34:19,619 - #47 }
INFO  01:34:19,619 - #47 }
INFO  01:34:19,625 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               3
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    SingleCondFactJMP(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             false
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:34:19,626 - ===================================
INFO  01:34:19,629 - Deklarisana promenljiva x na liniji 2
INFO  01:34:19,629 - Deklarisana promenljiva y na liniji 2
INFO  01:34:19,629 - Deklarisan rekord Rekord na liniji 3
INFO  01:34:19,629 - Deklarisana promenljiva d na liniji 5
INFO  01:34:19,629 - Deklarisana promenljiva c na liniji 5
INFO  01:34:19,629 - Deklarisana  klasa Klasa na liniji 7
INFO  01:34:19,629 - Deklarisana poljeb na liniji 9
INFO  01:34:19,629 - Deklarisana poljeb na liniji 9
INFO  01:34:19,629 - Deklarisana poljea na liniji 9
INFO  01:34:19,630 - Deklarisana poljea na liniji 9
INFO  01:34:19,630 - Deklarisana poljeg na liniji 9
INFO  01:34:19,630 - Deklarisana poljeg na liniji 9
INFO  01:34:19,630 - Obradjuje se funkcija nesto na liniji 16
INFO  01:34:19,630 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:34:19,630 - Obradjuje se funkcija kita na liniji 23
INFO  01:34:19,630 - Obradjuje se funkcija main na liniji 26
INFO  01:34:19,630 - Deklarisana niz promenljiva x na liniji 26
INFO  01:34:19,630 - Deklarisana promenljiva i na liniji 26
INFO  01:34:19,630 - Deklarisana promenljiva l na liniji 26
INFO  01:34:19,630 - Deklarisana promenljiva c na liniji 26
INFO  01:34:19,630 - Deklarisana promenljiva rek na liniji 26
INFO  01:34:19,630 - Deklarisana promenljiva neka na liniji 26
INFO  01:34:19,630 - Pristupa se promenljivoj i na liniji 28
INFO  01:34:19,631 -  Deklarisanih promenljivih ima = 7
INFO  01:34:19,631 - ===================================
INFO  01:34:31,228 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:34:31,283 - #2 program
INFO  01:34:31,283 - #48 p
INFO  01:34:31,283 - #48 int
INFO  01:34:31,284 - #48 x
INFO  01:34:31,285 - #38 ;
INFO  01:34:31,286 - #48 int
INFO  01:34:31,287 - #48 y
INFO  01:34:31,287 - #38 ;
INFO  01:34:31,287 - #21 record
INFO  01:34:31,287 - #48 Rekord
INFO  01:34:31,287 - #46 {
INFO  01:34:31,288 - #48 int
INFO  01:34:31,288 - #48 d
INFO  01:34:31,288 - #40 ,
INFO  01:34:31,288 - #48 c
INFO  01:34:31,288 - #38 ;
INFO  01:34:31,289 - #47 }
INFO  01:34:31,289 - #5 class
INFO  01:34:31,289 - #48 Klasa
INFO  01:34:31,289 - #46 {
INFO  01:34:31,291 - #48 int
INFO  01:34:31,291 - #48 b
INFO  01:34:31,291 - #40 ,
INFO  01:34:31,291 - #48 a
INFO  01:34:31,291 - #40 ,
INFO  01:34:31,291 - #48 g
INFO  01:34:31,291 - #38 ;
INFO  01:34:31,291 - #46 {
INFO  01:34:31,291 - #47 }
INFO  01:34:31,292 - #47 }
INFO  01:34:31,292 - #46 {
INFO  01:34:31,292 - #48 int
INFO  01:34:31,293 - #48 nesto
INFO  01:34:31,293 - #42 (
INFO  01:34:31,293 - #43 )
INFO  01:34:31,294 - #46 {
INFO  01:34:31,294 - #13 print
INFO  01:34:31,295 - #42 (
INFO  01:34:31,295 - #51 c
INFO  01:34:31,295 - #43 )
INFO  01:34:31,296 - #38 ;
INFO  01:34:31,296 - #13 print
INFO  01:34:31,296 - #42 (
INFO  01:34:31,296 - #50 5
INFO  01:34:31,297 - #43 )
INFO  01:34:31,297 - #38 ;
INFO  01:34:31,297 - #15 return
INFO  01:34:31,297 - #50 2
INFO  01:34:31,297 - #38 ;
INFO  01:34:31,297 - #47 }
INFO  01:34:31,297 - #3 void
INFO  01:34:31,298 - #48 kita2
INFO  01:34:31,298 - #42 (
INFO  01:34:31,298 - #43 )
INFO  01:34:31,298 - #46 {
INFO  01:34:31,298 - #47 }
INFO  01:34:31,298 - #3 void
INFO  01:34:31,298 - #48 kita
INFO  01:34:31,298 - #42 (
INFO  01:34:31,298 - #43 )
INFO  01:34:31,298 - #46 {
INFO  01:34:31,299 - #47 }
INFO  01:34:31,299 - #3 void
INFO  01:34:31,299 - #48 main
INFO  01:34:31,299 - #42 (
INFO  01:34:31,299 - #43 )
INFO  01:34:31,299 - #48 int
INFO  01:34:31,299 - #48 x
INFO  01:34:31,299 - #44 [
INFO  01:34:31,299 - #45 ]
INFO  01:34:31,299 - #40 ,
INFO  01:34:31,300 - #48 i
INFO  01:34:31,300 - #40 ,
INFO  01:34:31,300 - #48 l
INFO  01:34:31,300 - #38 ;
INFO  01:34:31,300 - #48 char
INFO  01:34:31,300 - #48 c
INFO  01:34:31,300 - #38 ;
INFO  01:34:31,300 - #48 Rekord
INFO  01:34:31,300 - #48 rek
INFO  01:34:31,300 - #38 ;
INFO  01:34:31,300 - #48 Klasa
INFO  01:34:31,300 - #48 neka
INFO  01:34:31,301 - #38 ;
INFO  01:34:31,301 - #46 {
INFO  01:34:31,301 - #48 i
INFO  01:34:31,301 - #35 =
INFO  01:34:31,302 - #50 0
INFO  01:34:31,302 - #38 ;
INFO  01:34:31,303 - #9 if
INFO  01:34:31,303 - #42 (
INFO  01:34:31,303 - #50 3
INFO  01:34:31,303 - #31 <
INFO  01:34:31,303 - #50 2
INFO  01:34:31,304 - #34 ||
INFO  01:34:31,305 - #49 false
INFO  01:34:31,305 - #34 ||
INFO  01:34:31,305 - #50 4
INFO  01:34:31,306 - #31 <
INFO  01:34:31,306 - #50 2
INFO  01:34:31,308 - #33 &&
INFO  01:34:31,308 - #50 1
INFO  01:34:31,309 - #27 ==
INFO  01:34:31,309 - #50 2
INFO  01:34:31,309 - #43 )
INFO  01:34:31,310 - #46 {
INFO  01:34:31,310 - #13 print
INFO  01:34:31,310 - #42 (
INFO  01:34:31,310 - #50 1
INFO  01:34:31,310 - #43 )
INFO  01:34:31,310 - #38 ;
INFO  01:34:31,310 - #47 }
INFO  01:34:31,310 - #7 else
INFO  01:34:31,310 - #46 {
INFO  01:34:31,311 - #13 print
INFO  01:34:31,311 - #42 (
INFO  01:34:31,311 - #50 2
INFO  01:34:31,311 - #43 )
INFO  01:34:31,311 - #38 ;
INFO  01:34:31,311 - #47 }
INFO  01:34:31,311 - #47 }
INFO  01:34:31,311 - #47 }
INFO  01:34:31,317 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               3
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    SingleCondFactJMP(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             false
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:34:31,318 - ===================================
INFO  01:34:31,322 - Deklarisana promenljiva x na liniji 2
INFO  01:34:31,322 - Deklarisana promenljiva y na liniji 2
INFO  01:34:31,322 - Deklarisan rekord Rekord na liniji 3
INFO  01:34:31,322 - Deklarisana promenljiva d na liniji 5
INFO  01:34:31,322 - Deklarisana promenljiva c na liniji 5
INFO  01:34:31,322 - Deklarisana  klasa Klasa na liniji 7
INFO  01:34:31,322 - Deklarisana poljeb na liniji 9
INFO  01:34:31,323 - Deklarisana poljeb na liniji 9
INFO  01:34:31,323 - Deklarisana poljea na liniji 9
INFO  01:34:31,323 - Deklarisana poljea na liniji 9
INFO  01:34:31,323 - Deklarisana poljeg na liniji 9
INFO  01:34:31,323 - Deklarisana poljeg na liniji 9
INFO  01:34:31,323 - Obradjuje se funkcija nesto na liniji 16
INFO  01:34:31,323 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:34:31,323 - Obradjuje se funkcija kita na liniji 23
INFO  01:34:31,323 - Obradjuje se funkcija main na liniji 26
INFO  01:34:31,323 - Deklarisana niz promenljiva x na liniji 26
INFO  01:34:31,323 - Deklarisana promenljiva i na liniji 26
INFO  01:34:31,323 - Deklarisana promenljiva l na liniji 26
INFO  01:34:31,323 - Deklarisana promenljiva c na liniji 26
INFO  01:34:31,323 - Deklarisana promenljiva rek na liniji 26
INFO  01:34:31,323 - Deklarisana promenljiva neka na liniji 26
INFO  01:34:31,323 - Pristupa se promenljivoj i na liniji 28
INFO  01:34:31,324 -  Deklarisanih promenljivih ima = 7
INFO  01:34:31,324 - ===================================
INFO  01:34:31,328 - bratskalovskiii
INFO  01:34:31,328 - neki kurac
INFO  01:34:31,329 - neko sranje
INFO  01:34:31,329 - neko sranje2
INFO  01:34:31,329 - bratskalovskiii
INFO  01:34:31,329 - neko sranje2
INFO  01:34:31,329 - bratskalovskiii
INFO  01:34:31,329 - neko sranje
INFO  01:34:31,329 - neko sranje
INFO  01:34:31,329 - matched
INFO  01:34:31,330 - Parsiranje uspesno zavrseno!
INFO  01:34:47,345 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:34:47,401 - #2 program
INFO  01:34:47,401 - #48 p
INFO  01:34:47,401 - #48 int
INFO  01:34:47,402 - #48 x
INFO  01:34:47,402 - #38 ;
INFO  01:34:47,403 - #48 int
INFO  01:34:47,403 - #48 y
INFO  01:34:47,403 - #38 ;
INFO  01:34:47,404 - #21 record
INFO  01:34:47,404 - #48 Rekord
INFO  01:34:47,404 - #46 {
INFO  01:34:47,404 - #48 int
INFO  01:34:47,405 - #48 d
INFO  01:34:47,405 - #40 ,
INFO  01:34:47,405 - #48 c
INFO  01:34:47,405 - #38 ;
INFO  01:34:47,405 - #47 }
INFO  01:34:47,405 - #5 class
INFO  01:34:47,406 - #48 Klasa
INFO  01:34:47,406 - #46 {
INFO  01:34:47,407 - #48 int
INFO  01:34:47,407 - #48 b
INFO  01:34:47,407 - #40 ,
INFO  01:34:47,407 - #48 a
INFO  01:34:47,407 - #40 ,
INFO  01:34:47,407 - #48 g
INFO  01:34:47,407 - #38 ;
INFO  01:34:47,407 - #46 {
INFO  01:34:47,408 - #47 }
INFO  01:34:47,408 - #47 }
INFO  01:34:47,408 - #46 {
INFO  01:34:47,408 - #48 int
INFO  01:34:47,409 - #48 nesto
INFO  01:34:47,409 - #42 (
INFO  01:34:47,409 - #43 )
INFO  01:34:47,410 - #46 {
INFO  01:34:47,410 - #13 print
INFO  01:34:47,411 - #42 (
INFO  01:34:47,411 - #51 c
INFO  01:34:47,411 - #43 )
INFO  01:34:47,412 - #38 ;
INFO  01:34:47,412 - #13 print
INFO  01:34:47,412 - #42 (
INFO  01:34:47,412 - #50 5
INFO  01:34:47,412 - #43 )
INFO  01:34:47,412 - #38 ;
INFO  01:34:47,412 - #15 return
INFO  01:34:47,412 - #50 2
INFO  01:34:47,412 - #38 ;
INFO  01:34:47,413 - #47 }
INFO  01:34:47,413 - #3 void
INFO  01:34:47,413 - #48 kita2
INFO  01:34:47,413 - #42 (
INFO  01:34:47,414 - #43 )
INFO  01:34:47,414 - #46 {
INFO  01:34:47,414 - #47 }
INFO  01:34:47,414 - #3 void
INFO  01:34:47,414 - #48 kita
INFO  01:34:47,414 - #42 (
INFO  01:34:47,414 - #43 )
INFO  01:34:47,414 - #46 {
INFO  01:34:47,414 - #47 }
INFO  01:34:47,414 - #3 void
INFO  01:34:47,414 - #48 main
INFO  01:34:47,414 - #42 (
INFO  01:34:47,414 - #43 )
INFO  01:34:47,414 - #48 int
INFO  01:34:47,414 - #48 x
INFO  01:34:47,414 - #44 [
INFO  01:34:47,414 - #45 ]
INFO  01:34:47,415 - #40 ,
INFO  01:34:47,415 - #48 i
INFO  01:34:47,415 - #40 ,
INFO  01:34:47,415 - #48 l
INFO  01:34:47,415 - #38 ;
INFO  01:34:47,415 - #48 char
INFO  01:34:47,415 - #48 c
INFO  01:34:47,415 - #38 ;
INFO  01:34:47,415 - #48 Rekord
INFO  01:34:47,415 - #48 rek
INFO  01:34:47,415 - #38 ;
INFO  01:34:47,416 - #48 Klasa
INFO  01:34:47,416 - #48 neka
INFO  01:34:47,416 - #38 ;
INFO  01:34:47,416 - #46 {
INFO  01:34:47,416 - #48 i
INFO  01:34:47,416 - #35 =
INFO  01:34:47,417 - #50 0
INFO  01:34:47,417 - #38 ;
INFO  01:34:47,418 - #9 if
INFO  01:34:47,418 - #42 (
INFO  01:34:47,418 - #50 3
INFO  01:34:47,418 - #31 <
INFO  01:34:47,418 - #50 2
INFO  01:34:47,419 - #34 ||
INFO  01:34:47,420 - #49 false
INFO  01:34:47,420 - #34 ||
INFO  01:34:47,421 - #50 4
INFO  01:34:47,421 - #31 <
INFO  01:34:47,421 - #50 2
INFO  01:34:47,421 - #33 &&
INFO  01:34:47,421 - #50 1
INFO  01:34:47,421 - #27 ==
INFO  01:34:47,422 - #50 1
INFO  01:34:47,422 - #43 )
INFO  01:34:47,422 - #46 {
INFO  01:34:47,422 - #13 print
INFO  01:34:47,422 - #42 (
INFO  01:34:47,422 - #50 1
INFO  01:34:47,423 - #43 )
INFO  01:34:47,423 - #38 ;
INFO  01:34:47,423 - #47 }
INFO  01:34:47,423 - #7 else
INFO  01:34:47,423 - #46 {
INFO  01:34:47,423 - #13 print
INFO  01:34:47,423 - #42 (
INFO  01:34:47,423 - #50 2
INFO  01:34:47,424 - #43 )
INFO  01:34:47,424 - #38 ;
INFO  01:34:47,424 - #47 }
INFO  01:34:47,424 - #47 }
INFO  01:34:47,424 - #47 }
INFO  01:34:47,429 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               3
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    SingleCondFactJMP(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             false
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:34:47,430 - ===================================
INFO  01:34:47,434 - Deklarisana promenljiva x na liniji 2
INFO  01:34:47,434 - Deklarisana promenljiva y na liniji 2
INFO  01:34:47,434 - Deklarisan rekord Rekord na liniji 3
INFO  01:34:47,434 - Deklarisana promenljiva d na liniji 5
INFO  01:34:47,434 - Deklarisana promenljiva c na liniji 5
INFO  01:34:47,434 - Deklarisana  klasa Klasa na liniji 7
INFO  01:34:47,435 - Deklarisana poljeb na liniji 9
INFO  01:34:47,435 - Deklarisana poljeb na liniji 9
INFO  01:34:47,435 - Deklarisana poljea na liniji 9
INFO  01:34:47,435 - Deklarisana poljea na liniji 9
INFO  01:34:47,435 - Deklarisana poljeg na liniji 9
INFO  01:34:47,435 - Deklarisana poljeg na liniji 9
INFO  01:34:47,435 - Obradjuje se funkcija nesto na liniji 16
INFO  01:34:47,435 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:34:47,435 - Obradjuje se funkcija kita na liniji 23
INFO  01:34:47,435 - Obradjuje se funkcija main na liniji 26
INFO  01:34:47,435 - Deklarisana niz promenljiva x na liniji 26
INFO  01:34:47,435 - Deklarisana promenljiva i na liniji 26
INFO  01:34:47,435 - Deklarisana promenljiva l na liniji 26
INFO  01:34:47,435 - Deklarisana promenljiva c na liniji 26
INFO  01:34:47,435 - Deklarisana promenljiva rek na liniji 26
INFO  01:34:47,436 - Deklarisana promenljiva neka na liniji 26
INFO  01:34:47,436 - Pristupa se promenljivoj i na liniji 28
INFO  01:34:47,436 -  Deklarisanih promenljivih ima = 7
INFO  01:34:47,436 - ===================================
INFO  01:34:47,442 - bratskalovskiii
INFO  01:34:47,442 - neki kurac
INFO  01:34:47,442 - neko sranje
INFO  01:34:47,442 - neko sranje2
INFO  01:34:47,442 - bratskalovskiii
INFO  01:34:47,442 - neko sranje2
INFO  01:34:47,442 - bratskalovskiii
INFO  01:34:47,442 - neko sranje
INFO  01:34:47,443 - neko sranje
INFO  01:34:47,443 - matched
INFO  01:34:47,443 - Parsiranje uspesno zavrseno!
INFO  01:35:03,659 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:35:03,713 - #2 program
INFO  01:35:03,713 - #48 p
INFO  01:35:03,713 - #48 int
INFO  01:35:03,715 - #48 x
INFO  01:35:03,715 - #38 ;
INFO  01:35:03,716 - #48 int
INFO  01:35:03,716 - #48 y
INFO  01:35:03,716 - #38 ;
INFO  01:35:03,716 - #21 record
INFO  01:35:03,717 - #48 Rekord
INFO  01:35:03,717 - #46 {
INFO  01:35:03,717 - #48 int
INFO  01:35:03,718 - #48 d
INFO  01:35:03,718 - #40 ,
INFO  01:35:03,718 - #48 c
INFO  01:35:03,718 - #38 ;
INFO  01:35:03,718 - #47 }
INFO  01:35:03,718 - #5 class
INFO  01:35:03,719 - #48 Klasa
INFO  01:35:03,719 - #46 {
INFO  01:35:03,720 - #48 int
INFO  01:35:03,720 - #48 b
INFO  01:35:03,720 - #40 ,
INFO  01:35:03,720 - #48 a
INFO  01:35:03,720 - #40 ,
INFO  01:35:03,720 - #48 g
INFO  01:35:03,720 - #38 ;
INFO  01:35:03,720 - #46 {
INFO  01:35:03,721 - #47 }
INFO  01:35:03,721 - #47 }
INFO  01:35:03,721 - #46 {
INFO  01:35:03,721 - #48 int
INFO  01:35:03,722 - #48 nesto
INFO  01:35:03,722 - #42 (
INFO  01:35:03,722 - #43 )
INFO  01:35:03,723 - #46 {
INFO  01:35:03,723 - #13 print
INFO  01:35:03,724 - #42 (
INFO  01:35:03,724 - #51 c
INFO  01:35:03,724 - #43 )
INFO  01:35:03,725 - #38 ;
INFO  01:35:03,725 - #13 print
INFO  01:35:03,725 - #42 (
INFO  01:35:03,725 - #50 5
INFO  01:35:03,725 - #43 )
INFO  01:35:03,725 - #38 ;
INFO  01:35:03,725 - #15 return
INFO  01:35:03,725 - #50 2
INFO  01:35:03,725 - #38 ;
INFO  01:35:03,725 - #47 }
INFO  01:35:03,725 - #3 void
INFO  01:35:03,726 - #48 kita2
INFO  01:35:03,726 - #42 (
INFO  01:35:03,726 - #43 )
INFO  01:35:03,726 - #46 {
INFO  01:35:03,726 - #47 }
INFO  01:35:03,726 - #3 void
INFO  01:35:03,727 - #48 kita
INFO  01:35:03,727 - #42 (
INFO  01:35:03,727 - #43 )
INFO  01:35:03,727 - #46 {
INFO  01:35:03,727 - #47 }
INFO  01:35:03,727 - #3 void
INFO  01:35:03,727 - #48 main
INFO  01:35:03,728 - #42 (
INFO  01:35:03,728 - #43 )
INFO  01:35:03,728 - #48 int
INFO  01:35:03,728 - #48 x
INFO  01:35:03,728 - #44 [
INFO  01:35:03,728 - #45 ]
INFO  01:35:03,728 - #40 ,
INFO  01:35:03,728 - #48 i
INFO  01:35:03,728 - #40 ,
INFO  01:35:03,728 - #48 l
INFO  01:35:03,729 - #38 ;
INFO  01:35:03,729 - #48 char
INFO  01:35:03,729 - #48 c
INFO  01:35:03,729 - #38 ;
INFO  01:35:03,729 - #48 Rekord
INFO  01:35:03,729 - #48 rek
INFO  01:35:03,729 - #38 ;
INFO  01:35:03,729 - #48 Klasa
INFO  01:35:03,729 - #48 neka
INFO  01:35:03,729 - #38 ;
INFO  01:35:03,729 - #46 {
INFO  01:35:03,729 - #48 i
INFO  01:35:03,729 - #35 =
INFO  01:35:03,730 - #50 0
INFO  01:35:03,731 - #38 ;
INFO  01:35:03,731 - #9 if
INFO  01:35:03,731 - #42 (
INFO  01:35:03,731 - #50 3
INFO  01:35:03,731 - #31 <
INFO  01:35:03,732 - #50 2
INFO  01:35:03,733 - #34 ||
INFO  01:35:03,734 - #49 true
INFO  01:35:03,734 - #34 ||
INFO  01:35:03,734 - #50 4
INFO  01:35:03,735 - #31 <
INFO  01:35:03,735 - #50 2
INFO  01:35:03,735 - #33 &&
INFO  01:35:03,735 - #50 1
INFO  01:35:03,735 - #27 ==
INFO  01:35:03,736 - #50 3
INFO  01:35:03,736 - #43 )
INFO  01:35:03,736 - #46 {
INFO  01:35:03,736 - #13 print
INFO  01:35:03,736 - #42 (
INFO  01:35:03,736 - #50 1
INFO  01:35:03,737 - #43 )
INFO  01:35:03,737 - #38 ;
INFO  01:35:03,737 - #47 }
INFO  01:35:03,737 - #7 else
INFO  01:35:03,737 - #46 {
INFO  01:35:03,738 - #13 print
INFO  01:35:03,738 - #42 (
INFO  01:35:03,738 - #50 2
INFO  01:35:03,738 - #43 )
INFO  01:35:03,738 - #38 ;
INFO  01:35:03,738 - #47 }
INFO  01:35:03,738 - #47 }
INFO  01:35:03,738 - #47 }
INFO  01:35:03,744 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               3
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    SingleCondFactJMP(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             true
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         3
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:35:03,744 - ===================================
INFO  01:35:03,747 - Deklarisana promenljiva x na liniji 2
INFO  01:35:03,748 - Deklarisana promenljiva y na liniji 2
INFO  01:35:03,748 - Deklarisan rekord Rekord na liniji 3
INFO  01:35:03,748 - Deklarisana promenljiva d na liniji 5
INFO  01:35:03,748 - Deklarisana promenljiva c na liniji 5
INFO  01:35:03,748 - Deklarisana  klasa Klasa na liniji 7
INFO  01:35:03,748 - Deklarisana poljeb na liniji 9
INFO  01:35:03,748 - Deklarisana poljeb na liniji 9
INFO  01:35:03,748 - Deklarisana poljea na liniji 9
INFO  01:35:03,748 - Deklarisana poljea na liniji 9
INFO  01:35:03,748 - Deklarisana poljeg na liniji 9
INFO  01:35:03,748 - Deklarisana poljeg na liniji 9
INFO  01:35:03,748 - Obradjuje se funkcija nesto na liniji 16
INFO  01:35:03,749 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:35:03,749 - Obradjuje se funkcija kita na liniji 23
INFO  01:35:03,749 - Obradjuje se funkcija main na liniji 26
INFO  01:35:03,749 - Deklarisana niz promenljiva x na liniji 26
INFO  01:35:03,749 - Deklarisana promenljiva i na liniji 26
INFO  01:35:03,749 - Deklarisana promenljiva l na liniji 26
INFO  01:35:03,749 - Deklarisana promenljiva c na liniji 26
INFO  01:35:03,749 - Deklarisana promenljiva rek na liniji 26
INFO  01:35:03,749 - Deklarisana promenljiva neka na liniji 26
INFO  01:35:03,749 - Pristupa se promenljivoj i na liniji 28
INFO  01:35:03,750 -  Deklarisanih promenljivih ima = 7
INFO  01:35:03,750 - ===================================
INFO  01:35:03,755 - bratskalovskiii
INFO  01:35:03,755 - neki kurac
INFO  01:35:03,755 - neko sranje
INFO  01:35:03,755 - neko sranje2
INFO  01:35:03,755 - bratskalovskiii
INFO  01:35:03,755 - neko sranje
INFO  01:35:03,755 - neko sranje2
INFO  01:35:03,755 - bratskalovskiii
INFO  01:35:03,755 - neko sranje
INFO  01:35:03,755 - neko sranje
INFO  01:35:03,755 - matched
INFO  01:35:03,756 - Parsiranje uspesno zavrseno!
INFO  01:35:23,462 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:35:23,519 - #2 program
INFO  01:35:23,519 - #48 p
INFO  01:35:23,519 - #48 int
INFO  01:35:23,520 - #48 x
INFO  01:35:23,521 - #38 ;
INFO  01:35:23,522 - #48 int
INFO  01:35:23,522 - #48 y
INFO  01:35:23,522 - #38 ;
INFO  01:35:23,522 - #21 record
INFO  01:35:23,522 - #48 Rekord
INFO  01:35:23,522 - #46 {
INFO  01:35:23,523 - #48 int
INFO  01:35:23,523 - #48 d
INFO  01:35:23,524 - #40 ,
INFO  01:35:23,524 - #48 c
INFO  01:35:23,524 - #38 ;
INFO  01:35:23,524 - #47 }
INFO  01:35:23,524 - #5 class
INFO  01:35:23,525 - #48 Klasa
INFO  01:35:23,525 - #46 {
INFO  01:35:23,526 - #48 int
INFO  01:35:23,526 - #48 b
INFO  01:35:23,526 - #40 ,
INFO  01:35:23,526 - #48 a
INFO  01:35:23,526 - #40 ,
INFO  01:35:23,527 - #48 g
INFO  01:35:23,527 - #38 ;
INFO  01:35:23,527 - #46 {
INFO  01:35:23,527 - #47 }
INFO  01:35:23,527 - #47 }
INFO  01:35:23,528 - #46 {
INFO  01:35:23,528 - #48 int
INFO  01:35:23,529 - #48 nesto
INFO  01:35:23,529 - #42 (
INFO  01:35:23,529 - #43 )
INFO  01:35:23,530 - #46 {
INFO  01:35:23,530 - #13 print
INFO  01:35:23,532 - #42 (
INFO  01:35:23,532 - #51 c
INFO  01:35:23,532 - #43 )
INFO  01:35:23,532 - #38 ;
INFO  01:35:23,533 - #13 print
INFO  01:35:23,533 - #42 (
INFO  01:35:23,533 - #50 5
INFO  01:35:23,533 - #43 )
INFO  01:35:23,533 - #38 ;
INFO  01:35:23,533 - #15 return
INFO  01:35:23,533 - #50 2
INFO  01:35:23,533 - #38 ;
INFO  01:35:23,533 - #47 }
INFO  01:35:23,534 - #3 void
INFO  01:35:23,535 - #48 kita2
INFO  01:35:23,535 - #42 (
INFO  01:35:23,535 - #43 )
INFO  01:35:23,535 - #46 {
INFO  01:35:23,535 - #47 }
INFO  01:35:23,535 - #3 void
INFO  01:35:23,535 - #48 kita
INFO  01:35:23,535 - #42 (
INFO  01:35:23,536 - #43 )
INFO  01:35:23,536 - #46 {
INFO  01:35:23,536 - #47 }
INFO  01:35:23,536 - #3 void
INFO  01:35:23,536 - #48 main
INFO  01:35:23,536 - #42 (
INFO  01:35:23,536 - #43 )
INFO  01:35:23,536 - #48 int
INFO  01:35:23,536 - #48 x
INFO  01:35:23,536 - #44 [
INFO  01:35:23,536 - #45 ]
INFO  01:35:23,536 - #40 ,
INFO  01:35:23,537 - #48 i
INFO  01:35:23,537 - #40 ,
INFO  01:35:23,537 - #48 l
INFO  01:35:23,537 - #38 ;
INFO  01:35:23,537 - #48 char
INFO  01:35:23,537 - #48 c
INFO  01:35:23,537 - #38 ;
INFO  01:35:23,537 - #48 Rekord
INFO  01:35:23,537 - #48 rek
INFO  01:35:23,537 - #38 ;
INFO  01:35:23,537 - #48 Klasa
INFO  01:35:23,537 - #48 neka
INFO  01:35:23,537 - #38 ;
INFO  01:35:23,538 - #46 {
INFO  01:35:23,538 - #48 i
INFO  01:35:23,538 - #35 =
INFO  01:35:23,539 - #50 0
INFO  01:35:23,539 - #38 ;
INFO  01:35:23,539 - #9 if
INFO  01:35:23,539 - #42 (
INFO  01:35:23,540 - #50 3
INFO  01:35:23,540 - #31 <
INFO  01:35:23,540 - #50 2
INFO  01:35:23,541 - #34 ||
INFO  01:35:23,542 - #49 true
INFO  01:35:23,543 - #34 ||
INFO  01:35:23,543 - #50 4
INFO  01:35:23,543 - #27 ==
INFO  01:35:23,543 - #50 4
INFO  01:35:23,546 - #33 &&
INFO  01:35:23,546 - #50 1
INFO  01:35:23,547 - #27 ==
INFO  01:35:23,547 - #50 3
INFO  01:35:23,547 - #43 )
INFO  01:35:23,547 - #46 {
INFO  01:35:23,547 - #13 print
INFO  01:35:23,547 - #42 (
INFO  01:35:23,547 - #50 1
INFO  01:35:23,547 - #43 )
INFO  01:35:23,547 - #38 ;
INFO  01:35:23,548 - #47 }
INFO  01:35:23,548 - #7 else
INFO  01:35:23,548 - #46 {
INFO  01:35:23,548 - #13 print
INFO  01:35:23,548 - #42 (
INFO  01:35:23,549 - #50 2
INFO  01:35:23,549 - #43 )
INFO  01:35:23,549 - #38 ;
INFO  01:35:23,549 - #47 }
INFO  01:35:23,549 - #47 }
INFO  01:35:23,549 - #47 }
INFO  01:35:23,555 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               3
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    SingleCondFactJMP(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             true
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopEqual(
                        ) [RelopEqual]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         3
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:35:23,555 - ===================================
INFO  01:35:23,559 - Deklarisana promenljiva x na liniji 2
INFO  01:35:23,559 - Deklarisana promenljiva y na liniji 2
INFO  01:35:23,559 - Deklarisan rekord Rekord na liniji 3
INFO  01:35:23,559 - Deklarisana promenljiva d na liniji 5
INFO  01:35:23,559 - Deklarisana promenljiva c na liniji 5
INFO  01:35:23,560 - Deklarisana  klasa Klasa na liniji 7
INFO  01:35:23,560 - Deklarisana poljeb na liniji 9
INFO  01:35:23,560 - Deklarisana poljeb na liniji 9
INFO  01:35:23,560 - Deklarisana poljea na liniji 9
INFO  01:35:23,560 - Deklarisana poljea na liniji 9
INFO  01:35:23,560 - Deklarisana poljeg na liniji 9
INFO  01:35:23,560 - Deklarisana poljeg na liniji 9
INFO  01:35:23,560 - Obradjuje se funkcija nesto na liniji 16
INFO  01:35:23,560 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:35:23,560 - Obradjuje se funkcija kita na liniji 23
INFO  01:35:23,560 - Obradjuje se funkcija main na liniji 26
INFO  01:35:23,560 - Deklarisana niz promenljiva x na liniji 26
INFO  01:35:23,561 - Deklarisana promenljiva i na liniji 26
INFO  01:35:23,561 - Deklarisana promenljiva l na liniji 26
INFO  01:35:23,561 - Deklarisana promenljiva c na liniji 26
INFO  01:35:23,561 - Deklarisana promenljiva rek na liniji 26
INFO  01:35:23,561 - Deklarisana promenljiva neka na liniji 26
INFO  01:35:23,561 - Pristupa se promenljivoj i na liniji 28
INFO  01:35:23,562 -  Deklarisanih promenljivih ima = 7
INFO  01:35:23,562 - ===================================
INFO  01:35:23,568 - bratskalovskiii
INFO  01:35:23,568 - neki kurac
INFO  01:35:23,568 - neko sranje
INFO  01:35:23,568 - neko sranje2
INFO  01:35:23,568 - bratskalovskiii
INFO  01:35:23,568 - neko sranje
INFO  01:35:23,568 - neko sranje2
INFO  01:35:23,568 - bratskalovskiii
INFO  01:35:23,568 - neko sranje
INFO  01:35:23,568 - neko sranje
INFO  01:35:23,568 - matched
INFO  01:35:23,569 - Parsiranje uspesno zavrseno!
INFO  01:35:37,518 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:35:37,576 - #2 program
INFO  01:35:37,577 - #48 p
INFO  01:35:37,577 - #48 int
INFO  01:35:37,578 - #48 x
INFO  01:35:37,578 - #38 ;
INFO  01:35:37,579 - #48 int
INFO  01:35:37,579 - #48 y
INFO  01:35:37,579 - #38 ;
INFO  01:35:37,579 - #21 record
INFO  01:35:37,580 - #48 Rekord
INFO  01:35:37,580 - #46 {
INFO  01:35:37,580 - #48 int
INFO  01:35:37,581 - #48 d
INFO  01:35:37,581 - #40 ,
INFO  01:35:37,581 - #48 c
INFO  01:35:37,581 - #38 ;
INFO  01:35:37,581 - #47 }
INFO  01:35:37,581 - #5 class
INFO  01:35:37,582 - #48 Klasa
INFO  01:35:37,582 - #46 {
INFO  01:35:37,583 - #48 int
INFO  01:35:37,583 - #48 b
INFO  01:35:37,583 - #40 ,
INFO  01:35:37,583 - #48 a
INFO  01:35:37,583 - #40 ,
INFO  01:35:37,583 - #48 g
INFO  01:35:37,583 - #38 ;
INFO  01:35:37,583 - #46 {
INFO  01:35:37,584 - #47 }
INFO  01:35:37,584 - #47 }
INFO  01:35:37,584 - #46 {
INFO  01:35:37,585 - #48 int
INFO  01:35:37,585 - #48 nesto
INFO  01:35:37,585 - #42 (
INFO  01:35:37,586 - #43 )
INFO  01:35:37,586 - #46 {
INFO  01:35:37,586 - #13 print
INFO  01:35:37,587 - #42 (
INFO  01:35:37,587 - #51 c
INFO  01:35:37,588 - #43 )
INFO  01:35:37,589 - #38 ;
INFO  01:35:37,589 - #13 print
INFO  01:35:37,589 - #42 (
INFO  01:35:37,589 - #50 5
INFO  01:35:37,589 - #43 )
INFO  01:35:37,589 - #38 ;
INFO  01:35:37,590 - #15 return
INFO  01:35:37,590 - #50 2
INFO  01:35:37,590 - #38 ;
INFO  01:35:37,590 - #47 }
INFO  01:35:37,590 - #3 void
INFO  01:35:37,591 - #48 kita2
INFO  01:35:37,591 - #42 (
INFO  01:35:37,591 - #43 )
INFO  01:35:37,591 - #46 {
INFO  01:35:37,591 - #47 }
INFO  01:35:37,591 - #3 void
INFO  01:35:37,591 - #48 kita
INFO  01:35:37,591 - #42 (
INFO  01:35:37,591 - #43 )
INFO  01:35:37,591 - #46 {
INFO  01:35:37,591 - #47 }
INFO  01:35:37,592 - #3 void
INFO  01:35:37,592 - #48 main
INFO  01:35:37,592 - #42 (
INFO  01:35:37,592 - #43 )
INFO  01:35:37,592 - #48 int
INFO  01:35:37,592 - #48 x
INFO  01:35:37,592 - #44 [
INFO  01:35:37,592 - #45 ]
INFO  01:35:37,592 - #40 ,
INFO  01:35:37,593 - #48 i
INFO  01:35:37,593 - #40 ,
INFO  01:35:37,593 - #48 l
INFO  01:35:37,593 - #38 ;
INFO  01:35:37,593 - #48 char
INFO  01:35:37,593 - #48 c
INFO  01:35:37,593 - #38 ;
INFO  01:35:37,593 - #48 Rekord
INFO  01:35:37,593 - #48 rek
INFO  01:35:37,593 - #38 ;
INFO  01:35:37,593 - #48 Klasa
INFO  01:35:37,593 - #48 neka
INFO  01:35:37,593 - #38 ;
INFO  01:35:37,594 - #46 {
INFO  01:35:37,594 - #48 i
INFO  01:35:37,594 - #35 =
INFO  01:35:37,595 - #50 0
INFO  01:35:37,595 - #38 ;
INFO  01:35:37,595 - #9 if
INFO  01:35:37,595 - #42 (
INFO  01:35:37,596 - #50 3
INFO  01:35:37,596 - #31 <
INFO  01:35:37,596 - #50 2
INFO  01:35:37,597 - #34 ||
INFO  01:35:37,597 - #49 true
INFO  01:35:37,598 - #34 ||
INFO  01:35:37,598 - #50 4
INFO  01:35:37,598 - #27 ==
INFO  01:35:37,598 - #50 4
INFO  01:35:37,600 - #33 &&
INFO  01:35:37,601 - #50 1
INFO  01:35:37,601 - #27 ==
INFO  01:35:37,601 - #50 1
INFO  01:35:37,601 - #43 )
INFO  01:35:37,601 - #46 {
INFO  01:35:37,601 - #13 print
INFO  01:35:37,602 - #42 (
INFO  01:35:37,602 - #50 1
INFO  01:35:37,602 - #43 )
INFO  01:35:37,602 - #38 ;
INFO  01:35:37,602 - #47 }
INFO  01:35:37,602 - #7 else
INFO  01:35:37,602 - #46 {
INFO  01:35:37,603 - #13 print
INFO  01:35:37,603 - #42 (
INFO  01:35:37,603 - #50 2
INFO  01:35:37,603 - #43 )
INFO  01:35:37,603 - #38 ;
INFO  01:35:37,603 - #47 }
INFO  01:35:37,603 - #47 }
INFO  01:35:37,603 - #47 }
INFO  01:35:37,609 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               3
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    SingleCondFactJMP(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             true
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopEqual(
                        ) [RelopEqual]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:35:37,609 - ===================================
INFO  01:35:37,613 - Deklarisana promenljiva x na liniji 2
INFO  01:35:37,613 - Deklarisana promenljiva y na liniji 2
INFO  01:35:37,613 - Deklarisan rekord Rekord na liniji 3
INFO  01:35:37,613 - Deklarisana promenljiva d na liniji 5
INFO  01:35:37,613 - Deklarisana promenljiva c na liniji 5
INFO  01:35:37,613 - Deklarisana  klasa Klasa na liniji 7
INFO  01:35:37,613 - Deklarisana poljeb na liniji 9
INFO  01:35:37,613 - Deklarisana poljeb na liniji 9
INFO  01:35:37,613 - Deklarisana poljea na liniji 9
INFO  01:35:37,613 - Deklarisana poljea na liniji 9
INFO  01:35:37,613 - Deklarisana poljeg na liniji 9
INFO  01:35:37,613 - Deklarisana poljeg na liniji 9
INFO  01:35:37,614 - Obradjuje se funkcija nesto na liniji 16
INFO  01:35:37,614 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:35:37,614 - Obradjuje se funkcija kita na liniji 23
INFO  01:35:37,614 - Obradjuje se funkcija main na liniji 26
INFO  01:35:37,614 - Deklarisana niz promenljiva x na liniji 26
INFO  01:35:37,614 - Deklarisana promenljiva i na liniji 26
INFO  01:35:37,614 - Deklarisana promenljiva l na liniji 26
INFO  01:35:37,614 - Deklarisana promenljiva c na liniji 26
INFO  01:35:37,614 - Deklarisana promenljiva rek na liniji 26
INFO  01:35:37,614 - Deklarisana promenljiva neka na liniji 26
INFO  01:35:37,614 - Pristupa se promenljivoj i na liniji 28
INFO  01:35:37,615 -  Deklarisanih promenljivih ima = 7
INFO  01:35:37,615 - ===================================
INFO  01:35:37,620 - bratskalovskiii
INFO  01:35:37,620 - neki kurac
INFO  01:35:37,620 - neko sranje
INFO  01:35:37,620 - neko sranje2
INFO  01:35:37,621 - bratskalovskiii
INFO  01:35:37,621 - neko sranje
INFO  01:35:37,621 - neko sranje2
INFO  01:35:37,621 - bratskalovskiii
INFO  01:35:37,621 - neko sranje
INFO  01:35:37,621 - neko sranje
INFO  01:35:37,621 - matched
INFO  01:35:37,622 - Parsiranje uspesno zavrseno!
INFO  01:44:56,419 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:44:56,477 - #2 program
INFO  01:44:56,477 - #48 p
INFO  01:44:56,477 - #48 int
INFO  01:44:56,478 - #48 x
INFO  01:44:56,479 - #38 ;
INFO  01:44:56,479 - #48 int
INFO  01:44:56,480 - #48 y
INFO  01:44:56,480 - #38 ;
INFO  01:44:56,480 - #21 record
INFO  01:44:56,480 - #48 Rekord
INFO  01:44:56,480 - #46 {
INFO  01:44:56,481 - #48 int
INFO  01:44:56,481 - #48 d
INFO  01:44:56,481 - #40 ,
INFO  01:44:56,481 - #48 c
INFO  01:44:56,481 - #38 ;
INFO  01:44:56,482 - #47 }
INFO  01:44:56,482 - #5 class
INFO  01:44:56,482 - #48 Klasa
INFO  01:44:56,482 - #46 {
INFO  01:44:56,483 - #48 int
INFO  01:44:56,483 - #48 b
INFO  01:44:56,483 - #40 ,
INFO  01:44:56,484 - #48 a
INFO  01:44:56,484 - #40 ,
INFO  01:44:56,484 - #48 g
INFO  01:44:56,484 - #38 ;
INFO  01:44:56,484 - #46 {
INFO  01:44:56,484 - #47 }
INFO  01:44:56,484 - #47 }
INFO  01:44:56,485 - #46 {
INFO  01:44:56,485 - #48 int
INFO  01:44:56,486 - #48 nesto
INFO  01:44:56,486 - #42 (
INFO  01:44:56,486 - #43 )
INFO  01:44:56,486 - #46 {
INFO  01:44:56,486 - #13 print
INFO  01:44:56,488 - #42 (
INFO  01:44:56,488 - #51 c
INFO  01:44:56,488 - #43 )
INFO  01:44:56,489 - #38 ;
INFO  01:44:56,489 - #13 print
INFO  01:44:56,489 - #42 (
INFO  01:44:56,489 - #50 5
INFO  01:44:56,489 - #43 )
INFO  01:44:56,489 - #38 ;
INFO  01:44:56,489 - #15 return
INFO  01:44:56,489 - #50 2
INFO  01:44:56,489 - #38 ;
INFO  01:44:56,490 - #47 }
INFO  01:44:56,490 - #3 void
INFO  01:44:56,491 - #48 kita2
INFO  01:44:56,491 - #42 (
INFO  01:44:56,491 - #43 )
INFO  01:44:56,491 - #46 {
INFO  01:44:56,491 - #47 }
INFO  01:44:56,491 - #3 void
INFO  01:44:56,492 - #48 kita
INFO  01:44:56,492 - #42 (
INFO  01:44:56,492 - #43 )
INFO  01:44:56,492 - #46 {
INFO  01:44:56,492 - #47 }
INFO  01:44:56,492 - #3 void
INFO  01:44:56,492 - #48 main
INFO  01:44:56,492 - #42 (
INFO  01:44:56,493 - #43 )
INFO  01:44:56,493 - #48 int
INFO  01:44:56,493 - #48 x
INFO  01:44:56,493 - #44 [
INFO  01:44:56,493 - #45 ]
INFO  01:44:56,493 - #40 ,
INFO  01:44:56,494 - #48 i
INFO  01:44:56,494 - #40 ,
INFO  01:44:56,494 - #48 l
INFO  01:44:56,494 - #38 ;
INFO  01:44:56,494 - #48 char
INFO  01:44:56,494 - #48 c
INFO  01:44:56,494 - #38 ;
INFO  01:44:56,494 - #48 Rekord
INFO  01:44:56,494 - #48 rek
INFO  01:44:56,494 - #38 ;
INFO  01:44:56,494 - #48 Klasa
INFO  01:44:56,494 - #48 neka
INFO  01:44:56,494 - #38 ;
INFO  01:44:56,494 - #46 {
INFO  01:44:56,495 - #48 i
INFO  01:44:56,495 - #35 =
INFO  01:44:56,496 - #50 0
INFO  01:44:56,496 - #38 ;
INFO  01:44:56,496 - #9 if
INFO  01:44:56,496 - #42 (
INFO  01:44:56,497 - #50 3
INFO  01:44:56,497 - #31 <
INFO  01:44:56,497 - #50 2
INFO  01:44:56,498 - #34 ||
INFO  01:44:56,499 - #49 true
INFO  01:44:56,499 - #34 ||
INFO  01:44:56,499 - #50 4
INFO  01:44:56,499 - #27 ==
INFO  01:44:56,499 - #50 4
INFO  01:44:56,501 - #33 &&
INFO  01:44:56,502 - #50 1
INFO  01:44:56,502 - #27 ==
INFO  01:44:56,502 - #50 1
INFO  01:44:56,502 - #43 )
INFO  01:44:56,503 - #46 {
INFO  01:44:56,503 - #13 print
INFO  01:44:56,503 - #42 (
INFO  01:44:56,503 - #50 1
INFO  01:44:56,503 - #43 )
INFO  01:44:56,503 - #38 ;
INFO  01:44:56,503 - #47 }
INFO  01:44:56,503 - #7 else
INFO  01:44:56,503 - #46 {
INFO  01:44:56,504 - #13 print
INFO  01:44:56,504 - #42 (
INFO  01:44:56,504 - #50 2
INFO  01:44:56,504 - #43 )
INFO  01:44:56,504 - #38 ;
INFO  01:44:56,504 - #47 }
INFO  01:44:56,505 - #47 }
INFO  01:44:56,505 - #47 }
INFO  01:44:56,510 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               3
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    SingleCondFactJMP(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             true
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopEqual(
                        ) [RelopEqual]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:44:56,510 - ===================================
INFO  01:44:56,514 - Deklarisana promenljiva x na liniji 2
INFO  01:44:56,514 - Deklarisana promenljiva y na liniji 2
INFO  01:44:56,514 - Deklarisan rekord Rekord na liniji 3
INFO  01:44:56,514 - Deklarisana promenljiva d na liniji 5
INFO  01:44:56,514 - Deklarisana promenljiva c na liniji 5
INFO  01:44:56,514 - Deklarisana  klasa Klasa na liniji 7
INFO  01:44:56,514 - Deklarisana poljeb na liniji 9
INFO  01:44:56,514 - Deklarisana poljeb na liniji 9
INFO  01:44:56,514 - Deklarisana poljea na liniji 9
INFO  01:44:56,514 - Deklarisana poljea na liniji 9
INFO  01:44:56,514 - Deklarisana poljeg na liniji 9
INFO  01:44:56,514 - Deklarisana poljeg na liniji 9
INFO  01:44:56,514 - Obradjuje se funkcija nesto na liniji 16
INFO  01:44:56,515 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:44:56,515 - Obradjuje se funkcija kita na liniji 23
INFO  01:44:56,515 - Obradjuje se funkcija main na liniji 26
INFO  01:44:56,515 - Deklarisana niz promenljiva x na liniji 26
INFO  01:44:56,515 - Deklarisana promenljiva i na liniji 26
INFO  01:44:56,515 - Deklarisana promenljiva l na liniji 26
INFO  01:44:56,515 - Deklarisana promenljiva c na liniji 26
INFO  01:44:56,515 - Deklarisana promenljiva rek na liniji 26
INFO  01:44:56,515 - Deklarisana promenljiva neka na liniji 26
INFO  01:44:56,515 - Pristupa se promenljivoj i na liniji 28
INFO  01:44:56,516 -  Deklarisanih promenljivih ima = 7
INFO  01:44:56,516 - ===================================
INFO  01:44:56,521 - bratskalovskiii
INFO  01:44:56,521 - neki kurac
INFO  01:44:56,521 - neko sranje
INFO  01:44:56,522 - neko sranje2
INFO  01:44:56,522 - bratskalovskiii
INFO  01:44:56,522 - neko sranje2
INFO  01:44:56,522 - bratskalovskiii
INFO  01:44:56,522 - neko sranje
INFO  01:44:56,522 - neko sranje
INFO  01:44:56,522 - matched
INFO  01:44:56,522 - Parsiranje uspesno zavrseno!
INFO  01:47:07,863 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:47:07,918 - #2 program
INFO  01:47:07,918 - #48 p
INFO  01:47:07,918 - #48 int
INFO  01:47:07,919 - #48 x
INFO  01:47:07,920 - #38 ;
INFO  01:47:07,921 - #48 int
INFO  01:47:07,921 - #48 y
INFO  01:47:07,921 - #38 ;
INFO  01:47:07,921 - #21 record
INFO  01:47:07,921 - #48 Rekord
INFO  01:47:07,921 - #46 {
INFO  01:47:07,922 - #48 int
INFO  01:47:07,923 - #48 d
INFO  01:47:07,923 - #40 ,
INFO  01:47:07,923 - #48 c
INFO  01:47:07,923 - #38 ;
INFO  01:47:07,923 - #47 }
INFO  01:47:07,923 - #5 class
INFO  01:47:07,924 - #48 Klasa
INFO  01:47:07,924 - #46 {
INFO  01:47:07,925 - #48 int
INFO  01:47:07,925 - #48 b
INFO  01:47:07,925 - #40 ,
INFO  01:47:07,925 - #48 a
INFO  01:47:07,925 - #40 ,
INFO  01:47:07,925 - #48 g
INFO  01:47:07,925 - #38 ;
INFO  01:47:07,925 - #46 {
INFO  01:47:07,925 - #47 }
INFO  01:47:07,926 - #47 }
INFO  01:47:07,926 - #46 {
INFO  01:47:07,926 - #48 int
INFO  01:47:07,927 - #48 nesto
INFO  01:47:07,927 - #42 (
INFO  01:47:07,927 - #43 )
INFO  01:47:07,928 - #46 {
INFO  01:47:07,928 - #13 print
INFO  01:47:07,929 - #42 (
INFO  01:47:07,929 - #51 c
INFO  01:47:07,929 - #43 )
INFO  01:47:07,930 - #38 ;
INFO  01:47:07,930 - #13 print
INFO  01:47:07,930 - #42 (
INFO  01:47:07,930 - #50 5
INFO  01:47:07,931 - #43 )
INFO  01:47:07,931 - #38 ;
INFO  01:47:07,931 - #15 return
INFO  01:47:07,931 - #50 2
INFO  01:47:07,931 - #38 ;
INFO  01:47:07,931 - #47 }
INFO  01:47:07,931 - #3 void
INFO  01:47:07,932 - #48 kita2
INFO  01:47:07,932 - #42 (
INFO  01:47:07,932 - #43 )
INFO  01:47:07,932 - #46 {
INFO  01:47:07,932 - #47 }
INFO  01:47:07,932 - #3 void
INFO  01:47:07,933 - #48 kita
INFO  01:47:07,933 - #42 (
INFO  01:47:07,933 - #43 )
INFO  01:47:07,933 - #46 {
INFO  01:47:07,933 - #47 }
INFO  01:47:07,933 - #3 void
INFO  01:47:07,933 - #48 main
INFO  01:47:07,933 - #42 (
INFO  01:47:07,933 - #43 )
INFO  01:47:07,933 - #48 int
INFO  01:47:07,933 - #48 x
INFO  01:47:07,933 - #44 [
INFO  01:47:07,933 - #45 ]
INFO  01:47:07,934 - #40 ,
INFO  01:47:07,934 - #48 i
INFO  01:47:07,934 - #40 ,
INFO  01:47:07,934 - #48 l
INFO  01:47:07,934 - #38 ;
INFO  01:47:07,934 - #48 char
INFO  01:47:07,935 - #48 c
INFO  01:47:07,935 - #38 ;
INFO  01:47:07,935 - #48 Rekord
INFO  01:47:07,935 - #48 rek
INFO  01:47:07,935 - #38 ;
INFO  01:47:07,935 - #48 Klasa
INFO  01:47:07,935 - #48 neka
INFO  01:47:07,935 - #38 ;
INFO  01:47:07,935 - #46 {
INFO  01:47:07,935 - #48 i
INFO  01:47:07,935 - #35 =
INFO  01:47:07,936 - #50 0
INFO  01:47:07,937 - #38 ;
INFO  01:47:07,937 - #9 if
INFO  01:47:07,937 - #42 (
INFO  01:47:07,938 - #50 64
INFO  01:47:07,938 - #31 <
INFO  01:47:07,938 - #50 65
INFO  01:47:07,939 - #34 ||
INFO  01:47:07,940 - #49 true
INFO  01:47:07,940 - #34 ||
INFO  01:47:07,941 - #50 4
INFO  01:47:07,941 - #27 ==
INFO  01:47:07,941 - #50 4
INFO  01:47:07,943 - #33 &&
INFO  01:47:07,943 - #50 1
INFO  01:47:07,944 - #27 ==
INFO  01:47:07,944 - #50 1
INFO  01:47:07,944 - #43 )
INFO  01:47:07,944 - #46 {
INFO  01:47:07,944 - #13 print
INFO  01:47:07,944 - #42 (
INFO  01:47:07,944 - #50 1
INFO  01:47:07,944 - #43 )
INFO  01:47:07,944 - #38 ;
INFO  01:47:07,945 - #47 }
INFO  01:47:07,945 - #7 else
INFO  01:47:07,945 - #46 {
INFO  01:47:07,945 - #13 print
INFO  01:47:07,945 - #42 (
INFO  01:47:07,946 - #50 2
INFO  01:47:07,946 - #43 )
INFO  01:47:07,946 - #38 ;
INFO  01:47:07,946 - #47 }
INFO  01:47:07,946 - #47 }
INFO  01:47:07,946 - #47 }
INFO  01:47:07,951 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               64
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               65
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    SingleCondFactJMP(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             true
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopEqual(
                        ) [RelopEqual]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:47:07,952 - ===================================
INFO  01:47:07,955 - Deklarisana promenljiva x na liniji 2
INFO  01:47:07,956 - Deklarisana promenljiva y na liniji 2
INFO  01:47:07,956 - Deklarisan rekord Rekord na liniji 3
INFO  01:47:07,956 - Deklarisana promenljiva d na liniji 5
INFO  01:47:07,956 - Deklarisana promenljiva c na liniji 5
INFO  01:47:07,956 - Deklarisana  klasa Klasa na liniji 7
INFO  01:47:07,956 - Deklarisana poljeb na liniji 9
INFO  01:47:07,956 - Deklarisana poljeb na liniji 9
INFO  01:47:07,956 - Deklarisana poljea na liniji 9
INFO  01:47:07,956 - Deklarisana poljea na liniji 9
INFO  01:47:07,956 - Deklarisana poljeg na liniji 9
INFO  01:47:07,956 - Deklarisana poljeg na liniji 9
INFO  01:47:07,956 - Obradjuje se funkcija nesto na liniji 16
INFO  01:47:07,957 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:47:07,957 - Obradjuje se funkcija kita na liniji 23
INFO  01:47:07,957 - Obradjuje se funkcija main na liniji 26
INFO  01:47:07,957 - Deklarisana niz promenljiva x na liniji 26
INFO  01:47:07,957 - Deklarisana promenljiva i na liniji 26
INFO  01:47:07,957 - Deklarisana promenljiva l na liniji 26
INFO  01:47:07,957 - Deklarisana promenljiva c na liniji 26
INFO  01:47:07,957 - Deklarisana promenljiva rek na liniji 26
INFO  01:47:07,957 - Deklarisana promenljiva neka na liniji 26
INFO  01:47:07,957 - Pristupa se promenljivoj i na liniji 28
INFO  01:47:07,958 -  Deklarisanih promenljivih ima = 7
INFO  01:47:07,958 - ===================================
INFO  01:47:07,963 - bratskalovskiii
INFO  01:47:07,964 - neki kurac
INFO  01:47:07,964 - neko sranje
INFO  01:47:07,964 - neko sranje2
INFO  01:47:07,964 - bratskalovskiii
INFO  01:47:07,964 - neko sranje2
INFO  01:47:07,964 - bratskalovskiii
INFO  01:47:07,964 - neko sranje
INFO  01:47:07,964 - neko sranje
INFO  01:47:07,964 - matched
INFO  01:47:07,965 - Parsiranje uspesno zavrseno!
INFO  01:48:13,063 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:48:13,119 - #2 program
INFO  01:48:13,119 - #48 p
INFO  01:48:13,119 - #48 int
INFO  01:48:13,120 - #48 x
INFO  01:48:13,121 - #38 ;
INFO  01:48:13,122 - #48 int
INFO  01:48:13,122 - #48 y
INFO  01:48:13,122 - #38 ;
INFO  01:48:13,122 - #21 record
INFO  01:48:13,122 - #48 Rekord
INFO  01:48:13,122 - #46 {
INFO  01:48:13,123 - #48 int
INFO  01:48:13,123 - #48 d
INFO  01:48:13,124 - #40 ,
INFO  01:48:13,124 - #48 c
INFO  01:48:13,124 - #38 ;
INFO  01:48:13,124 - #47 }
INFO  01:48:13,124 - #5 class
INFO  01:48:13,125 - #48 Klasa
INFO  01:48:13,125 - #46 {
INFO  01:48:13,126 - #48 int
INFO  01:48:13,126 - #48 b
INFO  01:48:13,126 - #40 ,
INFO  01:48:13,126 - #48 a
INFO  01:48:13,126 - #40 ,
INFO  01:48:13,126 - #48 g
INFO  01:48:13,126 - #38 ;
INFO  01:48:13,126 - #46 {
INFO  01:48:13,126 - #47 }
INFO  01:48:13,126 - #47 }
INFO  01:48:13,127 - #46 {
INFO  01:48:13,127 - #48 int
INFO  01:48:13,128 - #48 nesto
INFO  01:48:13,128 - #42 (
INFO  01:48:13,128 - #43 )
INFO  01:48:13,128 - #46 {
INFO  01:48:13,128 - #13 print
INFO  01:48:13,130 - #42 (
INFO  01:48:13,130 - #51 c
INFO  01:48:13,130 - #43 )
INFO  01:48:13,131 - #38 ;
INFO  01:48:13,131 - #13 print
INFO  01:48:13,131 - #42 (
INFO  01:48:13,132 - #50 5
INFO  01:48:13,132 - #43 )
INFO  01:48:13,132 - #38 ;
INFO  01:48:13,132 - #15 return
INFO  01:48:13,132 - #50 2
INFO  01:48:13,132 - #38 ;
INFO  01:48:13,132 - #47 }
INFO  01:48:13,132 - #3 void
INFO  01:48:13,133 - #48 kita2
INFO  01:48:13,133 - #42 (
INFO  01:48:13,133 - #43 )
INFO  01:48:13,133 - #46 {
INFO  01:48:13,133 - #47 }
INFO  01:48:13,133 - #3 void
INFO  01:48:13,133 - #48 kita
INFO  01:48:13,133 - #42 (
INFO  01:48:13,133 - #43 )
INFO  01:48:13,134 - #46 {
INFO  01:48:13,134 - #47 }
INFO  01:48:13,134 - #3 void
INFO  01:48:13,134 - #48 main
INFO  01:48:13,134 - #42 (
INFO  01:48:13,134 - #43 )
INFO  01:48:13,134 - #48 int
INFO  01:48:13,134 - #48 x
INFO  01:48:13,134 - #44 [
INFO  01:48:13,134 - #45 ]
INFO  01:48:13,134 - #40 ,
INFO  01:48:13,135 - #48 i
INFO  01:48:13,135 - #40 ,
INFO  01:48:13,135 - #48 l
INFO  01:48:13,135 - #38 ;
INFO  01:48:13,135 - #48 char
INFO  01:48:13,135 - #48 c
INFO  01:48:13,135 - #38 ;
INFO  01:48:13,135 - #48 Rekord
INFO  01:48:13,135 - #48 rek
INFO  01:48:13,135 - #38 ;
INFO  01:48:13,135 - #48 Klasa
INFO  01:48:13,135 - #48 neka
INFO  01:48:13,135 - #38 ;
INFO  01:48:13,135 - #46 {
INFO  01:48:13,135 - #48 i
INFO  01:48:13,136 - #35 =
INFO  01:48:13,137 - #50 0
INFO  01:48:13,137 - #38 ;
INFO  01:48:13,137 - #9 if
INFO  01:48:13,137 - #42 (
INFO  01:48:13,138 - #50 64
INFO  01:48:13,138 - #31 <
INFO  01:48:13,138 - #50 65
INFO  01:48:13,139 - #34 ||
INFO  01:48:13,139 - #49 true
INFO  01:48:13,140 - #34 ||
INFO  01:48:13,140 - #50 4
INFO  01:48:13,140 - #27 ==
INFO  01:48:13,140 - #50 4
INFO  01:48:13,142 - #33 &&
INFO  01:48:13,142 - #50 1
INFO  01:48:13,143 - #27 ==
INFO  01:48:13,143 - #50 1
INFO  01:48:13,143 - #43 )
INFO  01:48:13,143 - #46 {
INFO  01:48:13,143 - #13 print
INFO  01:48:13,143 - #42 (
INFO  01:48:13,143 - #50 1
INFO  01:48:13,143 - #43 )
INFO  01:48:13,143 - #38 ;
INFO  01:48:13,144 - #47 }
INFO  01:48:13,144 - #7 else
INFO  01:48:13,144 - #46 {
INFO  01:48:13,144 - #13 print
INFO  01:48:13,144 - #42 (
INFO  01:48:13,145 - #50 2
INFO  01:48:13,145 - #43 )
INFO  01:48:13,145 - #38 ;
INFO  01:48:13,145 - #47 }
INFO  01:48:13,145 - #47 }
INFO  01:48:13,145 - #47 }
INFO  01:48:13,152 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               64
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               65
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    SingleCondFactJMP(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             true
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopEqual(
                        ) [RelopEqual]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:48:13,152 - ===================================
INFO  01:48:13,156 - Deklarisana promenljiva x na liniji 2
INFO  01:48:13,156 - Deklarisana promenljiva y na liniji 2
INFO  01:48:13,156 - Deklarisan rekord Rekord na liniji 3
INFO  01:48:13,156 - Deklarisana promenljiva d na liniji 5
INFO  01:48:13,156 - Deklarisana promenljiva c na liniji 5
INFO  01:48:13,156 - Deklarisana  klasa Klasa na liniji 7
INFO  01:48:13,156 - Deklarisana poljeb na liniji 9
INFO  01:48:13,156 - Deklarisana poljeb na liniji 9
INFO  01:48:13,156 - Deklarisana poljea na liniji 9
INFO  01:48:13,156 - Deklarisana poljea na liniji 9
INFO  01:48:13,156 - Deklarisana poljeg na liniji 9
INFO  01:48:13,156 - Deklarisana poljeg na liniji 9
INFO  01:48:13,156 - Obradjuje se funkcija nesto na liniji 16
INFO  01:48:13,156 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:48:13,157 - Obradjuje se funkcija kita na liniji 23
INFO  01:48:13,157 - Obradjuje se funkcija main na liniji 26
INFO  01:48:13,157 - Deklarisana niz promenljiva x na liniji 26
INFO  01:48:13,157 - Deklarisana promenljiva i na liniji 26
INFO  01:48:13,157 - Deklarisana promenljiva l na liniji 26
INFO  01:48:13,157 - Deklarisana promenljiva c na liniji 26
INFO  01:48:13,157 - Deklarisana promenljiva rek na liniji 26
INFO  01:48:13,157 - Deklarisana promenljiva neka na liniji 26
INFO  01:48:13,157 - Pristupa se promenljivoj i na liniji 28
INFO  01:48:13,158 -  Deklarisanih promenljivih ima = 7
INFO  01:48:13,158 - ===================================
INFO  01:48:13,163 - bratskalovskiii
INFO  01:48:13,163 - neki kurac
INFO  01:48:13,163 - neko sranje
INFO  01:48:13,163 - neko sranje2
INFO  01:48:13,163 - bratskalovskiii
INFO  01:48:13,163 - neko sranje2
INFO  01:48:13,163 - bratskalovskiii
INFO  01:48:13,163 - neko sranje
INFO  01:48:13,163 - neko sranje
INFO  01:48:13,163 - matched
INFO  01:48:13,164 - Parsiranje uspesno zavrseno!
INFO  01:49:19,773 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:49:19,836 - #2 program
INFO  01:49:19,837 - #48 p
INFO  01:49:19,837 - #48 int
INFO  01:49:19,838 - #48 x
INFO  01:49:19,839 - #38 ;
INFO  01:49:19,840 - #48 int
INFO  01:49:19,840 - #48 y
INFO  01:49:19,841 - #38 ;
INFO  01:49:19,841 - #21 record
INFO  01:49:19,841 - #48 Rekord
INFO  01:49:19,841 - #46 {
INFO  01:49:19,841 - #48 int
INFO  01:49:19,842 - #48 d
INFO  01:49:19,842 - #40 ,
INFO  01:49:19,842 - #48 c
INFO  01:49:19,842 - #38 ;
INFO  01:49:19,843 - #47 }
INFO  01:49:19,843 - #5 class
INFO  01:49:19,843 - #48 Klasa
INFO  01:49:19,844 - #46 {
INFO  01:49:19,844 - #48 int
INFO  01:49:19,845 - #48 b
INFO  01:49:19,845 - #40 ,
INFO  01:49:19,845 - #48 a
INFO  01:49:19,845 - #40 ,
INFO  01:49:19,845 - #48 g
INFO  01:49:19,845 - #38 ;
INFO  01:49:19,845 - #46 {
INFO  01:49:19,846 - #47 }
INFO  01:49:19,846 - #47 }
INFO  01:49:19,846 - #46 {
INFO  01:49:19,846 - #48 int
INFO  01:49:19,847 - #48 nesto
INFO  01:49:19,847 - #42 (
INFO  01:49:19,847 - #43 )
INFO  01:49:19,848 - #46 {
INFO  01:49:19,848 - #13 print
INFO  01:49:19,849 - #42 (
INFO  01:49:19,849 - #51 c
INFO  01:49:19,849 - #43 )
INFO  01:49:19,850 - #38 ;
INFO  01:49:19,850 - #13 print
INFO  01:49:19,851 - #42 (
INFO  01:49:19,851 - #50 5
INFO  01:49:19,851 - #43 )
INFO  01:49:19,851 - #38 ;
INFO  01:49:19,851 - #15 return
INFO  01:49:19,852 - #50 2
INFO  01:49:19,852 - #38 ;
INFO  01:49:19,852 - #47 }
INFO  01:49:19,852 - #3 void
INFO  01:49:19,853 - #48 kita2
INFO  01:49:19,853 - #42 (
INFO  01:49:19,853 - #43 )
INFO  01:49:19,853 - #46 {
INFO  01:49:19,853 - #47 }
INFO  01:49:19,853 - #3 void
INFO  01:49:19,853 - #48 kita
INFO  01:49:19,853 - #42 (
INFO  01:49:19,853 - #43 )
INFO  01:49:19,853 - #46 {
INFO  01:49:19,854 - #47 }
INFO  01:49:19,854 - #3 void
INFO  01:49:19,854 - #48 main
INFO  01:49:19,854 - #42 (
INFO  01:49:19,854 - #43 )
INFO  01:49:19,854 - #48 int
INFO  01:49:19,854 - #48 x
INFO  01:49:19,854 - #44 [
INFO  01:49:19,854 - #45 ]
INFO  01:49:19,854 - #40 ,
INFO  01:49:19,855 - #48 i
INFO  01:49:19,855 - #40 ,
INFO  01:49:19,855 - #48 l
INFO  01:49:19,855 - #38 ;
INFO  01:49:19,855 - #48 char
INFO  01:49:19,855 - #48 c
INFO  01:49:19,855 - #38 ;
INFO  01:49:19,855 - #48 Rekord
INFO  01:49:19,855 - #48 rek
INFO  01:49:19,855 - #38 ;
INFO  01:49:19,855 - #48 Klasa
INFO  01:49:19,855 - #48 neka
INFO  01:49:19,856 - #38 ;
INFO  01:49:19,856 - #46 {
INFO  01:49:19,856 - #48 i
INFO  01:49:19,856 - #35 =
INFO  01:49:19,857 - #50 0
INFO  01:49:19,857 - #38 ;
INFO  01:49:19,857 - #9 if
INFO  01:49:19,858 - #42 (
INFO  01:49:19,858 - #50 64
INFO  01:49:19,858 - #31 <
INFO  01:49:19,858 - #50 65
INFO  01:49:19,859 - #34 ||
INFO  01:49:19,860 - #49 true
INFO  01:49:19,860 - #34 ||
INFO  01:49:19,860 - #50 4
INFO  01:49:19,860 - #27 ==
INFO  01:49:19,861 - #50 4
INFO  01:49:19,863 - #33 &&
INFO  01:49:19,863 - #50 1
INFO  01:49:19,863 - #27 ==
INFO  01:49:19,864 - #50 1
INFO  01:49:19,864 - #43 )
INFO  01:49:19,864 - #46 {
INFO  01:49:19,864 - #13 print
INFO  01:49:19,864 - #42 (
INFO  01:49:19,864 - #50 1
INFO  01:49:19,864 - #43 )
INFO  01:49:19,864 - #38 ;
INFO  01:49:19,864 - #47 }
INFO  01:49:19,864 - #7 else
INFO  01:49:19,864 - #46 {
INFO  01:49:19,865 - #13 print
INFO  01:49:19,865 - #42 (
INFO  01:49:19,865 - #50 2
INFO  01:49:19,865 - #43 )
INFO  01:49:19,865 - #38 ;
INFO  01:49:19,865 - #47 }
INFO  01:49:19,865 - #47 }
INFO  01:49:19,865 - #47 }
INFO  01:49:19,871 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               64
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               65
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    SingleCondFactJMP(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             true
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    SingleCondFactJMP(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopEqual(
                        ) [RelopEqual]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             4
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFactJMP]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:49:19,875 - ===================================
INFO  01:49:19,879 - Deklarisana promenljiva x na liniji 2
INFO  01:49:19,879 - Deklarisana promenljiva y na liniji 2
INFO  01:49:19,879 - Deklarisan rekord Rekord na liniji 3
INFO  01:49:19,879 - Deklarisana promenljiva d na liniji 5
INFO  01:49:19,879 - Deklarisana promenljiva c na liniji 5
INFO  01:49:19,880 - Deklarisana  klasa Klasa na liniji 7
INFO  01:49:19,880 - Deklarisana poljeb na liniji 9
INFO  01:49:19,880 - Deklarisana poljeb na liniji 9
INFO  01:49:19,880 - Deklarisana poljea na liniji 9
INFO  01:49:19,880 - Deklarisana poljea na liniji 9
INFO  01:49:19,880 - Deklarisana poljeg na liniji 9
INFO  01:49:19,880 - Deklarisana poljeg na liniji 9
INFO  01:49:19,880 - Obradjuje se funkcija nesto na liniji 16
INFO  01:49:19,880 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:49:19,880 - Obradjuje se funkcija kita na liniji 23
INFO  01:49:19,880 - Obradjuje se funkcija main na liniji 26
INFO  01:49:19,880 - Deklarisana niz promenljiva x na liniji 26
INFO  01:49:19,881 - Deklarisana promenljiva i na liniji 26
INFO  01:49:19,881 - Deklarisana promenljiva l na liniji 26
INFO  01:49:19,881 - Deklarisana promenljiva c na liniji 26
INFO  01:49:19,881 - Deklarisana promenljiva rek na liniji 26
INFO  01:49:19,881 - Deklarisana promenljiva neka na liniji 26
INFO  01:49:19,881 - Pristupa se promenljivoj i na liniji 28
INFO  01:49:19,882 -  Deklarisanih promenljivih ima = 7
INFO  01:49:19,882 - ===================================
INFO  01:49:19,888 - neki kurac
INFO  01:49:19,888 - neko sranje
INFO  01:49:19,888 - neko sranje2
INFO  01:49:19,888 - neko sranje2
INFO  01:49:19,888 - neko sranje
INFO  01:49:19,888 - neko sranje
INFO  01:49:19,888 - matched
INFO  01:49:19,889 - Parsiranje uspesno zavrseno!
INFO  01:53:03,693 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  01:53:03,744 - #2 program
INFO  01:53:03,745 - #48 p
INFO  01:53:03,745 - #48 int
INFO  01:53:03,746 - #48 x
INFO  01:53:03,746 - #38 ;
INFO  01:53:03,747 - #48 int
INFO  01:53:03,747 - #48 y
INFO  01:53:03,747 - #38 ;
INFO  01:53:03,748 - #21 record
INFO  01:53:03,748 - #48 Rekord
INFO  01:53:03,748 - #46 {
INFO  01:53:03,748 - #48 int
INFO  01:53:03,749 - #48 d
INFO  01:53:03,749 - #40 ,
INFO  01:53:03,749 - #48 c
INFO  01:53:03,749 - #38 ;
INFO  01:53:03,749 - #47 }
INFO  01:53:03,749 - #5 class
INFO  01:53:03,750 - #48 Klasa
INFO  01:53:03,750 - #46 {
INFO  01:53:03,751 - #48 int
INFO  01:53:03,751 - #48 b
INFO  01:53:03,751 - #40 ,
INFO  01:53:03,751 - #48 a
INFO  01:53:03,751 - #40 ,
INFO  01:53:03,751 - #48 g
INFO  01:53:03,752 - #38 ;
INFO  01:53:03,752 - #46 {
INFO  01:53:03,752 - #47 }
INFO  01:53:03,752 - #47 }
INFO  01:53:03,752 - #46 {
INFO  01:53:03,752 - #48 int
INFO  01:53:03,753 - #48 nesto
INFO  01:53:03,753 - #42 (
INFO  01:53:03,753 - #43 )
INFO  01:53:03,754 - #46 {
INFO  01:53:03,754 - #13 print
INFO  01:53:03,755 - #42 (
INFO  01:53:03,755 - #51 c
INFO  01:53:03,755 - #43 )
INFO  01:53:03,756 - #38 ;
INFO  01:53:03,756 - #13 print
INFO  01:53:03,756 - #42 (
INFO  01:53:03,756 - #50 5
INFO  01:53:03,757 - #43 )
INFO  01:53:03,757 - #38 ;
INFO  01:53:03,757 - #15 return
INFO  01:53:03,757 - #50 2
INFO  01:53:03,757 - #38 ;
INFO  01:53:03,757 - #47 }
INFO  01:53:03,757 - #3 void
INFO  01:53:03,758 - #48 kita2
INFO  01:53:03,758 - #42 (
INFO  01:53:03,758 - #43 )
INFO  01:53:03,758 - #46 {
INFO  01:53:03,758 - #47 }
INFO  01:53:03,758 - #3 void
INFO  01:53:03,758 - #48 kita
INFO  01:53:03,758 - #42 (
INFO  01:53:03,758 - #43 )
INFO  01:53:03,758 - #46 {
INFO  01:53:03,758 - #47 }
INFO  01:53:03,759 - #3 void
INFO  01:53:03,759 - #48 main
INFO  01:53:03,759 - #42 (
INFO  01:53:03,759 - #43 )
INFO  01:53:03,759 - #48 int
INFO  01:53:03,759 - #48 x
INFO  01:53:03,759 - #44 [
INFO  01:53:03,759 - #45 ]
INFO  01:53:03,759 - #40 ,
INFO  01:53:03,759 - #48 i
INFO  01:53:03,759 - #40 ,
INFO  01:53:03,759 - #48 l
INFO  01:53:03,760 - #38 ;
INFO  01:53:03,760 - #48 char
INFO  01:53:03,760 - #48 c
INFO  01:53:03,760 - #38 ;
INFO  01:53:03,760 - #48 Rekord
INFO  01:53:03,760 - #48 rek
INFO  01:53:03,760 - #38 ;
INFO  01:53:03,760 - #48 Klasa
INFO  01:53:03,760 - #48 neka
INFO  01:53:03,760 - #38 ;
INFO  01:53:03,760 - #46 {
INFO  01:53:03,760 - #48 i
INFO  01:53:03,760 - #35 =
INFO  01:53:03,761 - #50 0
INFO  01:53:03,762 - #38 ;
INFO  01:53:03,762 - #9 if
INFO  01:53:03,762 - #42 (
INFO  01:53:03,762 - #50 64
INFO  01:53:03,763 - #31 <
INFO  01:53:03,763 - #50 65
INFO  01:53:03,763 - #34 ||
INFO  01:53:03,764 - #49 true
INFO  01:53:03,764 - #34 ||
INFO  01:53:03,764 - #50 4
INFO  01:53:03,765 - #27 ==
INFO  01:53:03,765 - #50 4
INFO  01:53:03,767 - #33 &&
INFO  01:53:03,767 - #50 1
INFO  01:53:03,767 - #27 ==
INFO  01:53:03,768 - #50 1
INFO  01:53:03,768 - #43 )
INFO  01:53:03,768 - #46 {
INFO  01:53:03,768 - #13 print
INFO  01:53:03,768 - #42 (
INFO  01:53:03,768 - #50 1
INFO  01:53:03,768 - #43 )
INFO  01:53:03,768 - #38 ;
INFO  01:53:03,768 - #47 }
INFO  01:53:03,768 - #7 else
INFO  01:53:03,768 - #46 {
INFO  01:53:03,769 - #13 print
INFO  01:53:03,769 - #42 (
INFO  01:53:03,769 - #50 2
INFO  01:53:03,769 - #43 )
INFO  01:53:03,769 - #38 ;
INFO  01:53:03,769 - #47 }
INFO  01:53:03,769 - #47 }
INFO  01:53:03,769 - #47 }
INFO  01:53:03,775 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             65
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           4
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           4
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:53:03,775 - ===================================
INFO  01:53:03,779 - Deklarisana promenljiva x na liniji 2
INFO  01:53:03,779 - Deklarisana promenljiva y na liniji 2
INFO  01:53:03,779 - Deklarisan rekord Rekord na liniji 3
INFO  01:53:03,779 - Deklarisana promenljiva d na liniji 5
INFO  01:53:03,780 - Deklarisana promenljiva c na liniji 5
INFO  01:53:03,780 - Deklarisana  klasa Klasa na liniji 7
INFO  01:53:03,780 - Deklarisana poljeb na liniji 9
INFO  01:53:03,780 - Deklarisana poljeb na liniji 9
INFO  01:53:03,780 - Deklarisana poljea na liniji 9
INFO  01:53:03,780 - Deklarisana poljea na liniji 9
INFO  01:53:03,780 - Deklarisana poljeg na liniji 9
INFO  01:53:03,780 - Deklarisana poljeg na liniji 9
INFO  01:53:03,780 - Obradjuje se funkcija nesto na liniji 16
INFO  01:53:03,780 - Obradjuje se funkcija kita2 na liniji 22
INFO  01:53:03,780 - Obradjuje se funkcija kita na liniji 23
INFO  01:53:03,780 - Obradjuje se funkcija main na liniji 26
INFO  01:53:03,780 - Deklarisana niz promenljiva x na liniji 26
INFO  01:53:03,780 - Deklarisana promenljiva i na liniji 26
INFO  01:53:03,781 - Deklarisana promenljiva l na liniji 26
INFO  01:53:03,781 - Deklarisana promenljiva c na liniji 26
INFO  01:53:03,781 - Deklarisana promenljiva rek na liniji 26
INFO  01:53:03,781 - Deklarisana promenljiva neka na liniji 26
INFO  01:53:03,781 - Pristupa se promenljivoj i na liniji 28
INFO  01:53:03,781 -  Deklarisanih promenljivih ima = 7
INFO  01:53:03,781 - ===================================
INFO  01:53:03,786 - neki kurac
INFO  01:53:03,787 - neko sranje
INFO  01:53:03,787 - neko sranje2
INFO  01:53:03,787 - neko sranje2
INFO  01:53:03,787 - neko sranje
INFO  01:53:03,787 - neko sranje
INFO  01:53:03,787 - matched
INFO  01:53:03,787 - Parsiranje uspesno zavrseno!
INFO  02:02:34,642 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:02:34,702 - #2 program
INFO  02:02:34,702 - #48 p
INFO  02:02:34,703 - #48 int
INFO  02:02:34,703 - #48 x
INFO  02:02:34,704 - #38 ;
INFO  02:02:34,705 - #48 int
INFO  02:02:34,706 - #48 y
INFO  02:02:34,706 - #38 ;
INFO  02:02:34,706 - #21 record
INFO  02:02:34,706 - #48 Rekord
INFO  02:02:34,706 - #46 {
INFO  02:02:34,707 - #48 int
INFO  02:02:34,707 - #48 d
INFO  02:02:34,707 - #40 ,
INFO  02:02:34,708 - #48 c
INFO  02:02:34,708 - #38 ;
INFO  02:02:34,708 - #47 }
INFO  02:02:34,708 - #5 class
INFO  02:02:34,709 - #48 Klasa
INFO  02:02:34,709 - #46 {
INFO  02:02:34,710 - #48 int
INFO  02:02:34,710 - #48 b
INFO  02:02:34,710 - #40 ,
INFO  02:02:34,710 - #48 a
INFO  02:02:34,710 - #40 ,
INFO  02:02:34,710 - #48 g
INFO  02:02:34,711 - #38 ;
INFO  02:02:34,711 - #46 {
INFO  02:02:34,711 - #47 }
INFO  02:02:34,711 - #47 }
INFO  02:02:34,712 - #46 {
INFO  02:02:34,712 - #48 int
INFO  02:02:34,713 - #48 nesto
INFO  02:02:34,713 - #42 (
INFO  02:02:34,713 - #43 )
INFO  02:02:34,714 - #46 {
INFO  02:02:34,714 - #13 print
INFO  02:02:34,715 - #42 (
INFO  02:02:34,715 - #51 c
INFO  02:02:34,715 - #43 )
INFO  02:02:34,716 - #38 ;
INFO  02:02:34,716 - #13 print
INFO  02:02:34,716 - #42 (
INFO  02:02:34,717 - #50 5
INFO  02:02:34,717 - #43 )
INFO  02:02:34,717 - #38 ;
INFO  02:02:34,717 - #15 return
INFO  02:02:34,717 - #50 2
INFO  02:02:34,717 - #38 ;
INFO  02:02:34,717 - #47 }
INFO  02:02:34,717 - #3 void
INFO  02:02:34,718 - #48 kita2
INFO  02:02:34,718 - #42 (
INFO  02:02:34,718 - #43 )
INFO  02:02:34,718 - #46 {
INFO  02:02:34,719 - #47 }
INFO  02:02:34,719 - #3 void
INFO  02:02:34,719 - #48 kita
INFO  02:02:34,719 - #42 (
INFO  02:02:34,719 - #43 )
INFO  02:02:34,719 - #46 {
INFO  02:02:34,719 - #47 }
INFO  02:02:34,719 - #3 void
INFO  02:02:34,719 - #48 main
INFO  02:02:34,719 - #42 (
INFO  02:02:34,719 - #43 )
INFO  02:02:34,719 - #48 int
INFO  02:02:34,719 - #48 x
INFO  02:02:34,720 - #44 [
INFO  02:02:34,720 - #45 ]
INFO  02:02:34,720 - #40 ,
INFO  02:02:34,720 - #48 i
INFO  02:02:34,720 - #40 ,
INFO  02:02:34,720 - #48 l
INFO  02:02:34,720 - #38 ;
INFO  02:02:34,720 - #48 char
INFO  02:02:34,720 - #48 c
INFO  02:02:34,721 - #38 ;
INFO  02:02:34,721 - #48 Rekord
INFO  02:02:34,721 - #48 rek
INFO  02:02:34,721 - #38 ;
INFO  02:02:34,721 - #48 Klasa
INFO  02:02:34,721 - #48 neka
INFO  02:02:34,721 - #38 ;
INFO  02:02:34,721 - #46 {
INFO  02:02:34,721 - #48 i
INFO  02:02:34,721 - #35 =
INFO  02:02:34,722 - #50 0
INFO  02:02:34,723 - #38 ;
INFO  02:02:34,723 - #9 if
INFO  02:02:34,723 - #42 (
INFO  02:02:34,723 - #50 64
INFO  02:02:34,724 - #31 <
INFO  02:02:34,724 - #50 65
INFO  02:02:34,724 - #34 ||
INFO  02:02:34,725 - #49 true
INFO  02:02:34,725 - #34 ||
INFO  02:02:34,725 - #50 4
INFO  02:02:34,726 - #27 ==
INFO  02:02:34,726 - #50 4
INFO  02:02:34,728 - #33 &&
INFO  02:02:34,729 - #50 1
INFO  02:02:34,729 - #27 ==
INFO  02:02:34,729 - #50 1
INFO  02:02:34,730 - #43 )
INFO  02:02:34,730 - #46 {
INFO  02:02:34,730 - #13 print
INFO  02:02:34,730 - #42 (
INFO  02:02:34,730 - #50 1
INFO  02:02:34,730 - #43 )
INFO  02:02:34,730 - #38 ;
INFO  02:02:34,730 - #47 }
INFO  02:02:34,730 - #7 else
INFO  02:02:34,730 - #46 {
INFO  02:02:34,731 - #13 print
INFO  02:02:34,731 - #42 (
INFO  02:02:34,731 - #50 2
INFO  02:02:34,731 - #43 )
INFO  02:02:34,731 - #38 ;
INFO  02:02:34,731 - #47 }
INFO  02:02:34,731 - #47 }
INFO  02:02:34,732 - #47 }
INFO  02:02:34,738 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             65
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           4
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           4
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:02:34,738 - ===================================
INFO  02:02:34,742 - Deklarisana promenljiva x na liniji 2
INFO  02:02:34,743 - Deklarisana promenljiva y na liniji 2
INFO  02:02:34,743 - Deklarisan rekord Rekord na liniji 3
INFO  02:02:34,743 - Deklarisana promenljiva d na liniji 5
INFO  02:02:34,743 - Deklarisana promenljiva c na liniji 5
INFO  02:02:34,743 - Deklarisana  klasa Klasa na liniji 7
INFO  02:02:34,743 - Deklarisana poljeb na liniji 9
INFO  02:02:34,743 - Deklarisana poljeb na liniji 9
INFO  02:02:34,743 - Deklarisana poljea na liniji 9
INFO  02:02:34,743 - Deklarisana poljea na liniji 9
INFO  02:02:34,743 - Deklarisana poljeg na liniji 9
INFO  02:02:34,743 - Deklarisana poljeg na liniji 9
INFO  02:02:34,743 - Obradjuje se funkcija nesto na liniji 16
INFO  02:02:34,744 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:02:34,744 - Obradjuje se funkcija kita na liniji 23
INFO  02:02:34,744 - Obradjuje se funkcija main na liniji 26
INFO  02:02:34,744 - Deklarisana niz promenljiva x na liniji 26
INFO  02:02:34,744 - Deklarisana promenljiva i na liniji 26
INFO  02:02:34,744 - Deklarisana promenljiva l na liniji 26
INFO  02:02:34,744 - Deklarisana promenljiva c na liniji 26
INFO  02:02:34,744 - Deklarisana promenljiva rek na liniji 26
INFO  02:02:34,744 - Deklarisana promenljiva neka na liniji 26
INFO  02:02:34,744 - Pristupa se promenljivoj i na liniji 28
INFO  02:02:34,746 -  Deklarisanih promenljivih ima = 7
INFO  02:02:34,746 - ===================================
INFO  02:02:34,751 - neko sranje2
INFO  02:02:34,751 - neko sranje2
INFO  02:02:34,752 - bratskalovskiii
INFO  02:02:34,752 - neko sranje
INFO  02:02:34,752 - neko sranje
INFO  02:02:34,752 - neko sranje
INFO  02:02:34,752 - matched
INFO  02:02:34,752 - Parsiranje uspesno zavrseno!
INFO  02:03:57,234 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:03:57,309 - #2 program
INFO  02:03:57,309 - #48 p
INFO  02:03:57,309 - #48 int
INFO  02:03:57,312 - #48 x
INFO  02:03:57,313 - #38 ;
INFO  02:03:57,314 - #48 int
INFO  02:03:57,315 - #48 y
INFO  02:03:57,315 - #38 ;
INFO  02:03:57,315 - #21 record
INFO  02:03:57,315 - #48 Rekord
INFO  02:03:57,315 - #46 {
INFO  02:03:57,316 - #48 int
INFO  02:03:57,317 - #48 d
INFO  02:03:57,317 - #40 ,
INFO  02:03:57,317 - #48 c
INFO  02:03:57,317 - #38 ;
INFO  02:03:57,318 - #47 }
INFO  02:03:57,318 - #5 class
INFO  02:03:57,319 - #48 Klasa
INFO  02:03:57,319 - #46 {
INFO  02:03:57,320 - #48 int
INFO  02:03:57,320 - #48 b
INFO  02:03:57,320 - #40 ,
INFO  02:03:57,320 - #48 a
INFO  02:03:57,320 - #40 ,
INFO  02:03:57,320 - #48 g
INFO  02:03:57,321 - #38 ;
INFO  02:03:57,321 - #46 {
INFO  02:03:57,321 - #47 }
INFO  02:03:57,321 - #47 }
INFO  02:03:57,322 - #46 {
INFO  02:03:57,322 - #48 int
INFO  02:03:57,322 - #48 nesto
INFO  02:03:57,322 - #42 (
INFO  02:03:57,323 - #43 )
INFO  02:03:57,323 - #46 {
INFO  02:03:57,323 - #13 print
INFO  02:03:57,325 - #42 (
INFO  02:03:57,325 - #51 c
INFO  02:03:57,325 - #43 )
INFO  02:03:57,326 - #38 ;
INFO  02:03:57,326 - #13 print
INFO  02:03:57,327 - #42 (
INFO  02:03:57,327 - #50 5
INFO  02:03:57,327 - #43 )
INFO  02:03:57,327 - #38 ;
INFO  02:03:57,327 - #15 return
INFO  02:03:57,327 - #50 2
INFO  02:03:57,327 - #38 ;
INFO  02:03:57,328 - #47 }
INFO  02:03:57,328 - #3 void
INFO  02:03:57,329 - #48 kita2
INFO  02:03:57,329 - #42 (
INFO  02:03:57,329 - #43 )
INFO  02:03:57,329 - #46 {
INFO  02:03:57,329 - #47 }
INFO  02:03:57,330 - #3 void
INFO  02:03:57,330 - #48 kita
INFO  02:03:57,330 - #42 (
INFO  02:03:57,330 - #43 )
INFO  02:03:57,330 - #46 {
INFO  02:03:57,330 - #47 }
INFO  02:03:57,330 - #3 void
INFO  02:03:57,330 - #48 main
INFO  02:03:57,330 - #42 (
INFO  02:03:57,330 - #43 )
INFO  02:03:57,330 - #48 int
INFO  02:03:57,330 - #48 x
INFO  02:03:57,330 - #44 [
INFO  02:03:57,331 - #45 ]
INFO  02:03:57,331 - #40 ,
INFO  02:03:57,331 - #48 i
INFO  02:03:57,331 - #40 ,
INFO  02:03:57,331 - #48 l
INFO  02:03:57,332 - #38 ;
INFO  02:03:57,332 - #48 char
INFO  02:03:57,332 - #48 c
INFO  02:03:57,332 - #38 ;
INFO  02:03:57,332 - #48 Rekord
INFO  02:03:57,332 - #48 rek
INFO  02:03:57,332 - #38 ;
INFO  02:03:57,332 - #48 Klasa
INFO  02:03:57,332 - #48 neka
INFO  02:03:57,332 - #38 ;
INFO  02:03:57,332 - #46 {
INFO  02:03:57,332 - #48 i
INFO  02:03:57,332 - #35 =
INFO  02:03:57,334 - #50 0
INFO  02:03:57,335 - #38 ;
INFO  02:03:57,335 - #9 if
INFO  02:03:57,336 - #42 (
INFO  02:03:57,336 - #50 64
INFO  02:03:57,337 - #31 <
INFO  02:03:57,337 - #50 65
INFO  02:03:57,338 - #34 ||
INFO  02:03:57,338 - #49 true
INFO  02:03:57,339 - #34 ||
INFO  02:03:57,340 - #50 5
INFO  02:03:57,340 - #27 ==
INFO  02:03:57,340 - #50 4
INFO  02:03:57,342 - #33 &&
INFO  02:03:57,344 - #50 1
INFO  02:03:57,345 - #27 ==
INFO  02:03:57,345 - #50 1
INFO  02:03:57,345 - #43 )
INFO  02:03:57,345 - #46 {
INFO  02:03:57,345 - #13 print
INFO  02:03:57,346 - #42 (
INFO  02:03:57,346 - #50 1
INFO  02:03:57,346 - #43 )
INFO  02:03:57,346 - #38 ;
INFO  02:03:57,346 - #47 }
INFO  02:03:57,346 - #7 else
INFO  02:03:57,346 - #46 {
INFO  02:03:57,347 - #13 print
INFO  02:03:57,347 - #42 (
INFO  02:03:57,347 - #50 2
INFO  02:03:57,347 - #43 )
INFO  02:03:57,348 - #38 ;
INFO  02:03:57,348 - #47 }
INFO  02:03:57,348 - #47 }
INFO  02:03:57,348 - #47 }
INFO  02:03:57,357 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             65
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           4
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:03:57,358 - ===================================
INFO  02:03:57,363 - Deklarisana promenljiva x na liniji 2
INFO  02:03:57,363 - Deklarisana promenljiva y na liniji 2
INFO  02:03:57,363 - Deklarisan rekord Rekord na liniji 3
INFO  02:03:57,363 - Deklarisana promenljiva d na liniji 5
INFO  02:03:57,363 - Deklarisana promenljiva c na liniji 5
INFO  02:03:57,364 - Deklarisana  klasa Klasa na liniji 7
INFO  02:03:57,364 - Deklarisana poljeb na liniji 9
INFO  02:03:57,364 - Deklarisana poljeb na liniji 9
INFO  02:03:57,364 - Deklarisana poljea na liniji 9
INFO  02:03:57,364 - Deklarisana poljea na liniji 9
INFO  02:03:57,364 - Deklarisana poljeg na liniji 9
INFO  02:03:57,364 - Deklarisana poljeg na liniji 9
INFO  02:03:57,364 - Obradjuje se funkcija nesto na liniji 16
INFO  02:03:57,364 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:03:57,365 - Obradjuje se funkcija kita na liniji 23
INFO  02:03:57,365 - Obradjuje se funkcija main na liniji 26
INFO  02:03:57,365 - Deklarisana niz promenljiva x na liniji 26
INFO  02:03:57,365 - Deklarisana promenljiva i na liniji 26
INFO  02:03:57,365 - Deklarisana promenljiva l na liniji 26
INFO  02:03:57,365 - Deklarisana promenljiva c na liniji 26
INFO  02:03:57,365 - Deklarisana promenljiva rek na liniji 26
INFO  02:03:57,365 - Deklarisana promenljiva neka na liniji 26
INFO  02:03:57,365 - Pristupa se promenljivoj i na liniji 28
INFO  02:03:57,366 -  Deklarisanih promenljivih ima = 7
INFO  02:03:57,366 - ===================================
INFO  02:03:57,375 - neko sranje2
INFO  02:03:57,375 - neko sranje2
INFO  02:03:57,375 - bratskalovskiii
INFO  02:03:57,375 - neko sranje
INFO  02:03:57,375 - neko sranje
INFO  02:03:57,375 - neko sranje
INFO  02:03:57,375 - matched
INFO  02:03:57,376 - Parsiranje uspesno zavrseno!
INFO  02:04:15,444 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:04:15,499 - #2 program
INFO  02:04:15,499 - #48 p
INFO  02:04:15,499 - #48 int
INFO  02:04:15,501 - #48 x
INFO  02:04:15,502 - #38 ;
INFO  02:04:15,503 - #48 int
INFO  02:04:15,504 - #48 y
INFO  02:04:15,504 - #38 ;
INFO  02:04:15,504 - #21 record
INFO  02:04:15,504 - #48 Rekord
INFO  02:04:15,504 - #46 {
INFO  02:04:15,505 - #48 int
INFO  02:04:15,505 - #48 d
INFO  02:04:15,505 - #40 ,
INFO  02:04:15,505 - #48 c
INFO  02:04:15,505 - #38 ;
INFO  02:04:15,506 - #47 }
INFO  02:04:15,506 - #5 class
INFO  02:04:15,506 - #48 Klasa
INFO  02:04:15,507 - #46 {
INFO  02:04:15,508 - #48 int
INFO  02:04:15,508 - #48 b
INFO  02:04:15,508 - #40 ,
INFO  02:04:15,508 - #48 a
INFO  02:04:15,508 - #40 ,
INFO  02:04:15,508 - #48 g
INFO  02:04:15,508 - #38 ;
INFO  02:04:15,508 - #46 {
INFO  02:04:15,509 - #47 }
INFO  02:04:15,509 - #47 }
INFO  02:04:15,509 - #46 {
INFO  02:04:15,511 - #48 int
INFO  02:04:15,511 - #48 nesto
INFO  02:04:15,511 - #42 (
INFO  02:04:15,511 - #43 )
INFO  02:04:15,511 - #46 {
INFO  02:04:15,511 - #13 print
INFO  02:04:15,512 - #42 (
INFO  02:04:15,512 - #51 c
INFO  02:04:15,512 - #43 )
INFO  02:04:15,513 - #38 ;
INFO  02:04:15,513 - #13 print
INFO  02:04:15,514 - #42 (
INFO  02:04:15,514 - #50 5
INFO  02:04:15,514 - #43 )
INFO  02:04:15,514 - #38 ;
INFO  02:04:15,514 - #15 return
INFO  02:04:15,514 - #50 2
INFO  02:04:15,514 - #38 ;
INFO  02:04:15,514 - #47 }
INFO  02:04:15,514 - #3 void
INFO  02:04:15,515 - #48 kita2
INFO  02:04:15,515 - #42 (
INFO  02:04:15,515 - #43 )
INFO  02:04:15,515 - #46 {
INFO  02:04:15,515 - #47 }
INFO  02:04:15,516 - #3 void
INFO  02:04:15,516 - #48 kita
INFO  02:04:15,516 - #42 (
INFO  02:04:15,516 - #43 )
INFO  02:04:15,516 - #46 {
INFO  02:04:15,516 - #47 }
INFO  02:04:15,516 - #3 void
INFO  02:04:15,516 - #48 main
INFO  02:04:15,516 - #42 (
INFO  02:04:15,516 - #43 )
INFO  02:04:15,516 - #48 int
INFO  02:04:15,516 - #48 x
INFO  02:04:15,516 - #44 [
INFO  02:04:15,516 - #45 ]
INFO  02:04:15,517 - #40 ,
INFO  02:04:15,517 - #48 i
INFO  02:04:15,517 - #40 ,
INFO  02:04:15,517 - #48 l
INFO  02:04:15,518 - #38 ;
INFO  02:04:15,518 - #48 char
INFO  02:04:15,518 - #48 c
INFO  02:04:15,518 - #38 ;
INFO  02:04:15,518 - #48 Rekord
INFO  02:04:15,518 - #48 rek
INFO  02:04:15,518 - #38 ;
INFO  02:04:15,518 - #48 Klasa
INFO  02:04:15,518 - #48 neka
INFO  02:04:15,519 - #38 ;
INFO  02:04:15,519 - #46 {
INFO  02:04:15,519 - #48 i
INFO  02:04:15,519 - #35 =
INFO  02:04:15,520 - #50 0
INFO  02:04:15,520 - #38 ;
INFO  02:04:15,520 - #9 if
INFO  02:04:15,521 - #42 (
INFO  02:04:15,521 - #50 64
INFO  02:04:15,521 - #31 <
INFO  02:04:15,521 - #50 65
INFO  02:04:15,522 - #34 ||
INFO  02:04:15,523 - #49 true
INFO  02:04:15,523 - #34 ||
INFO  02:04:15,523 - #50 5
INFO  02:04:15,524 - #27 ==
INFO  02:04:15,524 - #50 4
INFO  02:04:15,526 - #33 &&
INFO  02:04:15,526 - #50 1
INFO  02:04:15,526 - #27 ==
INFO  02:04:15,527 - #50 2
INFO  02:04:15,527 - #43 )
INFO  02:04:15,527 - #46 {
INFO  02:04:15,527 - #13 print
INFO  02:04:15,527 - #42 (
INFO  02:04:15,527 - #50 1
INFO  02:04:15,527 - #43 )
INFO  02:04:15,527 - #38 ;
INFO  02:04:15,527 - #47 }
INFO  02:04:15,527 - #7 else
INFO  02:04:15,527 - #46 {
INFO  02:04:15,528 - #13 print
INFO  02:04:15,528 - #42 (
INFO  02:04:15,528 - #50 2
INFO  02:04:15,528 - #43 )
INFO  02:04:15,528 - #38 ;
INFO  02:04:15,528 - #47 }
INFO  02:04:15,528 - #47 }
INFO  02:04:15,528 - #47 }
INFO  02:04:15,535 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             65
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           4
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:04:15,535 - ===================================
INFO  02:04:15,539 - Deklarisana promenljiva x na liniji 2
INFO  02:04:15,540 - Deklarisana promenljiva y na liniji 2
INFO  02:04:15,540 - Deklarisan rekord Rekord na liniji 3
INFO  02:04:15,540 - Deklarisana promenljiva d na liniji 5
INFO  02:04:15,540 - Deklarisana promenljiva c na liniji 5
INFO  02:04:15,540 - Deklarisana  klasa Klasa na liniji 7
INFO  02:04:15,540 - Deklarisana poljeb na liniji 9
INFO  02:04:15,540 - Deklarisana poljeb na liniji 9
INFO  02:04:15,540 - Deklarisana poljea na liniji 9
INFO  02:04:15,540 - Deklarisana poljea na liniji 9
INFO  02:04:15,540 - Deklarisana poljeg na liniji 9
INFO  02:04:15,540 - Deklarisana poljeg na liniji 9
INFO  02:04:15,540 - Obradjuje se funkcija nesto na liniji 16
INFO  02:04:15,541 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:04:15,541 - Obradjuje se funkcija kita na liniji 23
INFO  02:04:15,541 - Obradjuje se funkcija main na liniji 26
INFO  02:04:15,541 - Deklarisana niz promenljiva x na liniji 26
INFO  02:04:15,541 - Deklarisana promenljiva i na liniji 26
INFO  02:04:15,541 - Deklarisana promenljiva l na liniji 26
INFO  02:04:15,541 - Deklarisana promenljiva c na liniji 26
INFO  02:04:15,541 - Deklarisana promenljiva rek na liniji 26
INFO  02:04:15,541 - Deklarisana promenljiva neka na liniji 26
INFO  02:04:15,541 - Pristupa se promenljivoj i na liniji 28
INFO  02:04:15,542 -  Deklarisanih promenljivih ima = 7
INFO  02:04:15,542 - ===================================
INFO  02:04:15,547 - neko sranje2
INFO  02:04:15,547 - neko sranje2
INFO  02:04:15,547 - bratskalovskiii
INFO  02:04:15,547 - neko sranje
INFO  02:04:15,548 - neko sranje
INFO  02:04:15,548 - neko sranje
INFO  02:04:15,548 - matched
INFO  02:04:15,548 - Parsiranje uspesno zavrseno!
INFO  02:04:41,995 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:04:42,051 - #2 program
INFO  02:04:42,051 - #48 p
INFO  02:04:42,052 - #48 int
INFO  02:04:42,052 - #48 x
INFO  02:04:42,053 - #38 ;
INFO  02:04:42,054 - #48 int
INFO  02:04:42,054 - #48 y
INFO  02:04:42,055 - #38 ;
INFO  02:04:42,055 - #21 record
INFO  02:04:42,055 - #48 Rekord
INFO  02:04:42,055 - #46 {
INFO  02:04:42,056 - #48 int
INFO  02:04:42,057 - #48 d
INFO  02:04:42,057 - #40 ,
INFO  02:04:42,057 - #48 c
INFO  02:04:42,057 - #38 ;
INFO  02:04:42,057 - #47 }
INFO  02:04:42,057 - #5 class
INFO  02:04:42,058 - #48 Klasa
INFO  02:04:42,058 - #46 {
INFO  02:04:42,059 - #48 int
INFO  02:04:42,059 - #48 b
INFO  02:04:42,060 - #40 ,
INFO  02:04:42,060 - #48 a
INFO  02:04:42,060 - #40 ,
INFO  02:04:42,060 - #48 g
INFO  02:04:42,060 - #38 ;
INFO  02:04:42,060 - #46 {
INFO  02:04:42,061 - #47 }
INFO  02:04:42,061 - #47 }
INFO  02:04:42,061 - #46 {
INFO  02:04:42,061 - #48 int
INFO  02:04:42,062 - #48 nesto
INFO  02:04:42,062 - #42 (
INFO  02:04:42,062 - #43 )
INFO  02:04:42,063 - #46 {
INFO  02:04:42,063 - #13 print
INFO  02:04:42,064 - #42 (
INFO  02:04:42,064 - #51 c
INFO  02:04:42,064 - #43 )
INFO  02:04:42,065 - #38 ;
INFO  02:04:42,065 - #13 print
INFO  02:04:42,065 - #42 (
INFO  02:04:42,065 - #50 5
INFO  02:04:42,065 - #43 )
INFO  02:04:42,066 - #38 ;
INFO  02:04:42,066 - #15 return
INFO  02:04:42,066 - #50 2
INFO  02:04:42,066 - #38 ;
INFO  02:04:42,066 - #47 }
INFO  02:04:42,066 - #3 void
INFO  02:04:42,067 - #48 kita2
INFO  02:04:42,067 - #42 (
INFO  02:04:42,067 - #43 )
INFO  02:04:42,067 - #46 {
INFO  02:04:42,067 - #47 }
INFO  02:04:42,067 - #3 void
INFO  02:04:42,068 - #48 kita
INFO  02:04:42,068 - #42 (
INFO  02:04:42,068 - #43 )
INFO  02:04:42,068 - #46 {
INFO  02:04:42,068 - #47 }
INFO  02:04:42,068 - #3 void
INFO  02:04:42,068 - #48 main
INFO  02:04:42,068 - #42 (
INFO  02:04:42,068 - #43 )
INFO  02:04:42,068 - #48 int
INFO  02:04:42,068 - #48 x
INFO  02:04:42,069 - #44 [
INFO  02:04:42,069 - #45 ]
INFO  02:04:42,069 - #40 ,
INFO  02:04:42,069 - #48 i
INFO  02:04:42,069 - #40 ,
INFO  02:04:42,069 - #48 l
INFO  02:04:42,069 - #38 ;
INFO  02:04:42,070 - #48 char
INFO  02:04:42,070 - #48 c
INFO  02:04:42,070 - #38 ;
INFO  02:04:42,070 - #48 Rekord
INFO  02:04:42,070 - #48 rek
INFO  02:04:42,070 - #38 ;
INFO  02:04:42,070 - #48 Klasa
INFO  02:04:42,070 - #48 neka
INFO  02:04:42,070 - #38 ;
INFO  02:04:42,070 - #46 {
INFO  02:04:42,070 - #48 i
INFO  02:04:42,070 - #35 =
INFO  02:04:42,071 - #50 0
INFO  02:04:42,072 - #38 ;
INFO  02:04:42,072 - #9 if
INFO  02:04:42,072 - #42 (
INFO  02:04:42,073 - #50 64
INFO  02:04:42,073 - #31 <
INFO  02:04:42,073 - #50 63
INFO  02:04:42,075 - #34 ||
INFO  02:04:42,076 - #49 true
INFO  02:04:42,076 - #34 ||
INFO  02:04:42,077 - #50 5
INFO  02:04:42,077 - #27 ==
INFO  02:04:42,077 - #50 4
INFO  02:04:42,080 - #33 &&
INFO  02:04:42,080 - #50 1
INFO  02:04:42,081 - #27 ==
INFO  02:04:42,081 - #50 2
INFO  02:04:42,081 - #43 )
INFO  02:04:42,081 - #46 {
INFO  02:04:42,081 - #13 print
INFO  02:04:42,081 - #42 (
INFO  02:04:42,081 - #50 1
INFO  02:04:42,081 - #43 )
INFO  02:04:42,081 - #38 ;
INFO  02:04:42,081 - #47 }
INFO  02:04:42,082 - #7 else
INFO  02:04:42,082 - #46 {
INFO  02:04:42,082 - #13 print
INFO  02:04:42,082 - #42 (
INFO  02:04:42,082 - #50 2
INFO  02:04:42,083 - #43 )
INFO  02:04:42,083 - #38 ;
INFO  02:04:42,083 - #47 }
INFO  02:04:42,083 - #47 }
INFO  02:04:42,083 - #47 }
INFO  02:04:42,089 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             63
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           4
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:04:42,089 - ===================================
INFO  02:04:42,094 - Deklarisana promenljiva x na liniji 2
INFO  02:04:42,094 - Deklarisana promenljiva y na liniji 2
INFO  02:04:42,094 - Deklarisan rekord Rekord na liniji 3
INFO  02:04:42,094 - Deklarisana promenljiva d na liniji 5
INFO  02:04:42,094 - Deklarisana promenljiva c na liniji 5
INFO  02:04:42,094 - Deklarisana  klasa Klasa na liniji 7
INFO  02:04:42,094 - Deklarisana poljeb na liniji 9
INFO  02:04:42,094 - Deklarisana poljeb na liniji 9
INFO  02:04:42,094 - Deklarisana poljea na liniji 9
INFO  02:04:42,095 - Deklarisana poljea na liniji 9
INFO  02:04:42,095 - Deklarisana poljeg na liniji 9
INFO  02:04:42,095 - Deklarisana poljeg na liniji 9
INFO  02:04:42,095 - Obradjuje se funkcija nesto na liniji 16
INFO  02:04:42,095 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:04:42,095 - Obradjuje se funkcija kita na liniji 23
INFO  02:04:42,095 - Obradjuje se funkcija main na liniji 26
INFO  02:04:42,095 - Deklarisana niz promenljiva x na liniji 26
INFO  02:04:42,095 - Deklarisana promenljiva i na liniji 26
INFO  02:04:42,095 - Deklarisana promenljiva l na liniji 26
INFO  02:04:42,095 - Deklarisana promenljiva c na liniji 26
INFO  02:04:42,095 - Deklarisana promenljiva rek na liniji 26
INFO  02:04:42,095 - Deklarisana promenljiva neka na liniji 26
INFO  02:04:42,095 - Pristupa se promenljivoj i na liniji 28
INFO  02:04:42,096 -  Deklarisanih promenljivih ima = 7
INFO  02:04:42,096 - ===================================
INFO  02:04:42,101 - neko sranje2
INFO  02:04:42,101 - neko sranje2
INFO  02:04:42,101 - bratskalovskiii
INFO  02:04:42,101 - neko sranje
INFO  02:04:42,102 - neko sranje
INFO  02:04:42,102 - neko sranje
INFO  02:04:42,102 - matched
INFO  02:04:42,102 - Parsiranje uspesno zavrseno!
INFO  02:05:07,053 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:05:07,112 - #2 program
INFO  02:05:07,113 - #48 p
INFO  02:05:07,113 - #48 int
INFO  02:05:07,114 - #48 x
INFO  02:05:07,115 - #38 ;
INFO  02:05:07,116 - #48 int
INFO  02:05:07,116 - #48 y
INFO  02:05:07,116 - #38 ;
INFO  02:05:07,116 - #21 record
INFO  02:05:07,116 - #48 Rekord
INFO  02:05:07,116 - #46 {
INFO  02:05:07,117 - #48 int
INFO  02:05:07,118 - #48 d
INFO  02:05:07,118 - #40 ,
INFO  02:05:07,118 - #48 c
INFO  02:05:07,118 - #38 ;
INFO  02:05:07,118 - #47 }
INFO  02:05:07,118 - #5 class
INFO  02:05:07,119 - #48 Klasa
INFO  02:05:07,119 - #46 {
INFO  02:05:07,120 - #48 int
INFO  02:05:07,120 - #48 b
INFO  02:05:07,120 - #40 ,
INFO  02:05:07,120 - #48 a
INFO  02:05:07,120 - #40 ,
INFO  02:05:07,121 - #48 g
INFO  02:05:07,121 - #38 ;
INFO  02:05:07,121 - #46 {
INFO  02:05:07,121 - #47 }
INFO  02:05:07,121 - #47 }
INFO  02:05:07,122 - #46 {
INFO  02:05:07,122 - #48 int
INFO  02:05:07,122 - #48 nesto
INFO  02:05:07,123 - #42 (
INFO  02:05:07,123 - #43 )
INFO  02:05:07,123 - #46 {
INFO  02:05:07,123 - #13 print
INFO  02:05:07,124 - #42 (
INFO  02:05:07,125 - #51 c
INFO  02:05:07,125 - #43 )
INFO  02:05:07,126 - #38 ;
INFO  02:05:07,126 - #13 print
INFO  02:05:07,126 - #42 (
INFO  02:05:07,126 - #50 5
INFO  02:05:07,126 - #43 )
INFO  02:05:07,126 - #38 ;
INFO  02:05:07,127 - #15 return
INFO  02:05:07,127 - #50 2
INFO  02:05:07,127 - #38 ;
INFO  02:05:07,127 - #47 }
INFO  02:05:07,127 - #3 void
INFO  02:05:07,129 - #48 kita2
INFO  02:05:07,130 - #42 (
INFO  02:05:07,130 - #43 )
INFO  02:05:07,130 - #46 {
INFO  02:05:07,130 - #47 }
INFO  02:05:07,130 - #3 void
INFO  02:05:07,130 - #48 kita
INFO  02:05:07,130 - #42 (
INFO  02:05:07,130 - #43 )
INFO  02:05:07,131 - #46 {
INFO  02:05:07,131 - #47 }
INFO  02:05:07,131 - #3 void
INFO  02:05:07,131 - #48 main
INFO  02:05:07,131 - #42 (
INFO  02:05:07,131 - #43 )
INFO  02:05:07,131 - #48 int
INFO  02:05:07,131 - #48 x
INFO  02:05:07,131 - #44 [
INFO  02:05:07,131 - #45 ]
INFO  02:05:07,131 - #40 ,
INFO  02:05:07,132 - #48 i
INFO  02:05:07,132 - #40 ,
INFO  02:05:07,132 - #48 l
INFO  02:05:07,132 - #38 ;
INFO  02:05:07,132 - #48 char
INFO  02:05:07,132 - #48 c
INFO  02:05:07,132 - #38 ;
INFO  02:05:07,132 - #48 Rekord
INFO  02:05:07,132 - #48 rek
INFO  02:05:07,132 - #38 ;
INFO  02:05:07,133 - #48 Klasa
INFO  02:05:07,133 - #48 neka
INFO  02:05:07,133 - #38 ;
INFO  02:05:07,133 - #46 {
INFO  02:05:07,133 - #48 i
INFO  02:05:07,133 - #35 =
INFO  02:05:07,134 - #50 0
INFO  02:05:07,134 - #38 ;
INFO  02:05:07,134 - #9 if
INFO  02:05:07,135 - #42 (
INFO  02:05:07,135 - #50 64
INFO  02:05:07,135 - #31 <
INFO  02:05:07,135 - #50 63
INFO  02:05:07,136 - #34 ||
INFO  02:05:07,136 - #49 false
INFO  02:05:07,137 - #34 ||
INFO  02:05:07,137 - #50 5
INFO  02:05:07,137 - #27 ==
INFO  02:05:07,137 - #50 4
INFO  02:05:07,140 - #33 &&
INFO  02:05:07,140 - #50 1
INFO  02:05:07,140 - #27 ==
INFO  02:05:07,141 - #50 2
INFO  02:05:07,141 - #43 )
INFO  02:05:07,141 - #46 {
INFO  02:05:07,141 - #13 print
INFO  02:05:07,141 - #42 (
INFO  02:05:07,141 - #50 1
INFO  02:05:07,141 - #43 )
INFO  02:05:07,141 - #38 ;
INFO  02:05:07,141 - #47 }
INFO  02:05:07,141 - #7 else
INFO  02:05:07,141 - #46 {
INFO  02:05:07,142 - #13 print
INFO  02:05:07,142 - #42 (
INFO  02:05:07,142 - #50 2
INFO  02:05:07,142 - #43 )
INFO  02:05:07,142 - #38 ;
INFO  02:05:07,142 - #47 }
INFO  02:05:07,142 - #47 }
INFO  02:05:07,142 - #47 }
INFO  02:05:07,149 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             63
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           false
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           4
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:05:07,149 - ===================================
INFO  02:05:07,153 - Deklarisana promenljiva x na liniji 2
INFO  02:05:07,153 - Deklarisana promenljiva y na liniji 2
INFO  02:05:07,153 - Deklarisan rekord Rekord na liniji 3
INFO  02:05:07,153 - Deklarisana promenljiva d na liniji 5
INFO  02:05:07,154 - Deklarisana promenljiva c na liniji 5
INFO  02:05:07,154 - Deklarisana  klasa Klasa na liniji 7
INFO  02:05:07,154 - Deklarisana poljeb na liniji 9
INFO  02:05:07,154 - Deklarisana poljeb na liniji 9
INFO  02:05:07,154 - Deklarisana poljea na liniji 9
INFO  02:05:07,154 - Deklarisana poljea na liniji 9
INFO  02:05:07,154 - Deklarisana poljeg na liniji 9
INFO  02:05:07,154 - Deklarisana poljeg na liniji 9
INFO  02:05:07,154 - Obradjuje se funkcija nesto na liniji 16
INFO  02:05:07,154 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:05:07,154 - Obradjuje se funkcija kita na liniji 23
INFO  02:05:07,154 - Obradjuje se funkcija main na liniji 26
INFO  02:05:07,154 - Deklarisana niz promenljiva x na liniji 26
INFO  02:05:07,154 - Deklarisana promenljiva i na liniji 26
INFO  02:05:07,155 - Deklarisana promenljiva l na liniji 26
INFO  02:05:07,155 - Deklarisana promenljiva c na liniji 26
INFO  02:05:07,155 - Deklarisana promenljiva rek na liniji 26
INFO  02:05:07,155 - Deklarisana promenljiva neka na liniji 26
INFO  02:05:07,155 - Pristupa se promenljivoj i na liniji 28
INFO  02:05:07,156 -  Deklarisanih promenljivih ima = 7
INFO  02:05:07,156 - ===================================
INFO  02:05:07,163 - neko sranje2
INFO  02:05:07,163 - neko sranje2
INFO  02:05:07,163 - bratskalovskiii
INFO  02:05:07,163 - neko sranje
INFO  02:05:07,163 - neko sranje
INFO  02:05:07,163 - neko sranje
INFO  02:05:07,163 - neko sranje
INFO  02:05:07,163 - matched
INFO  02:05:07,164 - Parsiranje uspesno zavrseno!
INFO  02:06:35,789 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:06:35,849 - #2 program
INFO  02:06:35,849 - #48 p
INFO  02:06:35,849 - #48 int
INFO  02:06:35,850 - #48 x
INFO  02:06:35,851 - #38 ;
INFO  02:06:35,852 - #48 int
INFO  02:06:35,852 - #48 y
INFO  02:06:35,852 - #38 ;
INFO  02:06:35,852 - #21 record
INFO  02:06:35,852 - #48 Rekord
INFO  02:06:35,852 - #46 {
INFO  02:06:35,853 - #48 int
INFO  02:06:35,853 - #48 d
INFO  02:06:35,854 - #40 ,
INFO  02:06:35,854 - #48 c
INFO  02:06:35,854 - #38 ;
INFO  02:06:35,854 - #47 }
INFO  02:06:35,854 - #5 class
INFO  02:06:35,855 - #48 Klasa
INFO  02:06:35,855 - #46 {
INFO  02:06:35,856 - #48 int
INFO  02:06:35,856 - #48 b
INFO  02:06:35,856 - #40 ,
INFO  02:06:35,857 - #48 a
INFO  02:06:35,857 - #40 ,
INFO  02:06:35,857 - #48 g
INFO  02:06:35,857 - #38 ;
INFO  02:06:35,857 - #46 {
INFO  02:06:35,857 - #47 }
INFO  02:06:35,857 - #47 }
INFO  02:06:35,858 - #46 {
INFO  02:06:35,858 - #48 int
INFO  02:06:35,859 - #48 nesto
INFO  02:06:35,859 - #42 (
INFO  02:06:35,859 - #43 )
INFO  02:06:35,860 - #46 {
INFO  02:06:35,860 - #13 print
INFO  02:06:35,861 - #42 (
INFO  02:06:35,861 - #51 c
INFO  02:06:35,861 - #43 )
INFO  02:06:35,862 - #38 ;
INFO  02:06:35,862 - #13 print
INFO  02:06:35,862 - #42 (
INFO  02:06:35,862 - #50 5
INFO  02:06:35,863 - #43 )
INFO  02:06:35,863 - #38 ;
INFO  02:06:35,863 - #15 return
INFO  02:06:35,863 - #50 2
INFO  02:06:35,863 - #38 ;
INFO  02:06:35,863 - #47 }
INFO  02:06:35,863 - #3 void
INFO  02:06:35,864 - #48 kita2
INFO  02:06:35,864 - #42 (
INFO  02:06:35,864 - #43 )
INFO  02:06:35,864 - #46 {
INFO  02:06:35,864 - #47 }
INFO  02:06:35,864 - #3 void
INFO  02:06:35,864 - #48 kita
INFO  02:06:35,864 - #42 (
INFO  02:06:35,865 - #43 )
INFO  02:06:35,865 - #46 {
INFO  02:06:35,865 - #47 }
INFO  02:06:35,865 - #3 void
INFO  02:06:35,865 - #48 main
INFO  02:06:35,865 - #42 (
INFO  02:06:35,865 - #43 )
INFO  02:06:35,865 - #48 int
INFO  02:06:35,865 - #48 x
INFO  02:06:35,865 - #44 [
INFO  02:06:35,866 - #45 ]
INFO  02:06:35,866 - #40 ,
INFO  02:06:35,866 - #48 i
INFO  02:06:35,867 - #40 ,
INFO  02:06:35,867 - #48 l
INFO  02:06:35,867 - #38 ;
INFO  02:06:35,867 - #48 char
INFO  02:06:35,867 - #48 c
INFO  02:06:35,867 - #38 ;
INFO  02:06:35,867 - #48 Rekord
INFO  02:06:35,867 - #48 rek
INFO  02:06:35,867 - #38 ;
INFO  02:06:35,867 - #48 Klasa
INFO  02:06:35,867 - #48 neka
INFO  02:06:35,867 - #38 ;
INFO  02:06:35,868 - #46 {
INFO  02:06:35,868 - #48 i
INFO  02:06:35,868 - #35 =
INFO  02:06:35,869 - #50 0
INFO  02:06:35,870 - #38 ;
INFO  02:06:35,870 - #9 if
INFO  02:06:35,870 - #42 (
INFO  02:06:35,871 - #50 64
INFO  02:06:35,871 - #31 <
INFO  02:06:35,871 - #50 63
INFO  02:06:35,872 - #34 ||
INFO  02:06:35,872 - #49 false
INFO  02:06:35,874 - #34 ||
INFO  02:06:35,874 - #50 5
INFO  02:06:35,874 - #27 ==
INFO  02:06:35,875 - #50 4
INFO  02:06:35,877 - #33 &&
INFO  02:06:35,877 - #50 1
INFO  02:06:35,877 - #27 ==
INFO  02:06:35,878 - #50 2
INFO  02:06:35,878 - #43 )
INFO  02:06:35,878 - #46 {
INFO  02:06:35,878 - #13 print
INFO  02:06:35,878 - #42 (
INFO  02:06:35,878 - #50 1
INFO  02:06:35,878 - #43 )
INFO  02:06:35,878 - #38 ;
INFO  02:06:35,878 - #47 }
INFO  02:06:35,878 - #7 else
INFO  02:06:35,878 - #46 {
INFO  02:06:35,879 - #13 print
INFO  02:06:35,879 - #42 (
INFO  02:06:35,879 - #50 2
INFO  02:06:35,879 - #43 )
INFO  02:06:35,879 - #38 ;
INFO  02:06:35,879 - #47 }
INFO  02:06:35,879 - #47 }
INFO  02:06:35,880 - #47 }
INFO  02:06:35,885 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             63
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           false
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           4
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:06:35,886 - ===================================
INFO  02:06:35,889 - Deklarisana promenljiva x na liniji 2
INFO  02:06:35,890 - Deklarisana promenljiva y na liniji 2
INFO  02:06:35,890 - Deklarisan rekord Rekord na liniji 3
INFO  02:06:35,890 - Deklarisana promenljiva d na liniji 5
INFO  02:06:35,890 - Deklarisana promenljiva c na liniji 5
INFO  02:06:35,890 - Deklarisana  klasa Klasa na liniji 7
INFO  02:06:35,890 - Deklarisana poljeb na liniji 9
INFO  02:06:35,890 - Deklarisana poljeb na liniji 9
INFO  02:06:35,890 - Deklarisana poljea na liniji 9
INFO  02:06:35,890 - Deklarisana poljea na liniji 9
INFO  02:06:35,890 - Deklarisana poljeg na liniji 9
INFO  02:06:35,890 - Deklarisana poljeg na liniji 9
INFO  02:06:35,890 - Obradjuje se funkcija nesto na liniji 16
INFO  02:06:35,891 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:06:35,891 - Obradjuje se funkcija kita na liniji 23
INFO  02:06:35,891 - Obradjuje se funkcija main na liniji 26
INFO  02:06:35,891 - Deklarisana niz promenljiva x na liniji 26
INFO  02:06:35,891 - Deklarisana promenljiva i na liniji 26
INFO  02:06:35,891 - Deklarisana promenljiva l na liniji 26
INFO  02:06:35,891 - Deklarisana promenljiva c na liniji 26
INFO  02:06:35,891 - Deklarisana promenljiva rek na liniji 26
INFO  02:06:35,891 - Deklarisana promenljiva neka na liniji 26
INFO  02:06:35,891 - Pristupa se promenljivoj i na liniji 28
INFO  02:06:35,892 -  Deklarisanih promenljivih ima = 7
INFO  02:06:35,892 - ===================================
INFO  02:06:35,897 - neko sranje2
INFO  02:06:35,897 - neko sranje2
INFO  02:06:35,898 - bratskalovskiii
INFO  02:06:35,898 - neko sranje
INFO  02:06:35,898 - neko sranje
INFO  02:06:35,898 - neko sranje
INFO  02:06:35,898 - neko sranje
INFO  02:06:35,898 - matched
INFO  02:06:35,898 - Parsiranje uspesno zavrseno!
INFO  02:08:44,882 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:08:44,940 - #2 program
INFO  02:08:44,940 - #48 p
INFO  02:08:44,940 - #48 int
INFO  02:08:44,941 - #48 x
INFO  02:08:44,941 - #38 ;
INFO  02:08:44,942 - #48 int
INFO  02:08:44,943 - #48 y
INFO  02:08:44,943 - #38 ;
INFO  02:08:44,943 - #21 record
INFO  02:08:44,943 - #48 Rekord
INFO  02:08:44,943 - #46 {
INFO  02:08:44,944 - #48 int
INFO  02:08:44,944 - #48 d
INFO  02:08:44,944 - #40 ,
INFO  02:08:44,945 - #48 c
INFO  02:08:44,945 - #38 ;
INFO  02:08:44,945 - #47 }
INFO  02:08:44,945 - #5 class
INFO  02:08:44,946 - #48 Klasa
INFO  02:08:44,946 - #46 {
INFO  02:08:44,947 - #48 int
INFO  02:08:44,947 - #48 b
INFO  02:08:44,947 - #40 ,
INFO  02:08:44,947 - #48 a
INFO  02:08:44,947 - #40 ,
INFO  02:08:44,947 - #48 g
INFO  02:08:44,947 - #38 ;
INFO  02:08:44,947 - #46 {
INFO  02:08:44,948 - #47 }
INFO  02:08:44,948 - #47 }
INFO  02:08:44,949 - #46 {
INFO  02:08:44,950 - #48 int
INFO  02:08:44,951 - #48 nesto
INFO  02:08:44,951 - #42 (
INFO  02:08:44,951 - #43 )
INFO  02:08:44,952 - #46 {
INFO  02:08:44,952 - #13 print
INFO  02:08:44,954 - #42 (
INFO  02:08:44,954 - #51 c
INFO  02:08:44,954 - #43 )
INFO  02:08:44,955 - #38 ;
INFO  02:08:44,955 - #13 print
INFO  02:08:44,955 - #42 (
INFO  02:08:44,955 - #50 5
INFO  02:08:44,955 - #43 )
INFO  02:08:44,955 - #38 ;
INFO  02:08:44,955 - #15 return
INFO  02:08:44,955 - #50 2
INFO  02:08:44,956 - #38 ;
INFO  02:08:44,956 - #47 }
INFO  02:08:44,956 - #3 void
INFO  02:08:44,957 - #48 kita2
INFO  02:08:44,957 - #42 (
INFO  02:08:44,957 - #43 )
INFO  02:08:44,957 - #46 {
INFO  02:08:44,957 - #47 }
INFO  02:08:44,957 - #3 void
INFO  02:08:44,957 - #48 kita
INFO  02:08:44,957 - #42 (
INFO  02:08:44,957 - #43 )
INFO  02:08:44,958 - #46 {
INFO  02:08:44,958 - #47 }
INFO  02:08:44,958 - #3 void
INFO  02:08:44,958 - #48 main
INFO  02:08:44,958 - #42 (
INFO  02:08:44,958 - #43 )
INFO  02:08:44,958 - #48 int
INFO  02:08:44,958 - #48 x
INFO  02:08:44,958 - #44 [
INFO  02:08:44,958 - #45 ]
INFO  02:08:44,959 - #40 ,
INFO  02:08:44,959 - #48 i
INFO  02:08:44,959 - #40 ,
INFO  02:08:44,959 - #48 l
INFO  02:08:44,959 - #38 ;
INFO  02:08:44,960 - #48 char
INFO  02:08:44,960 - #48 c
INFO  02:08:44,960 - #38 ;
INFO  02:08:44,960 - #48 Rekord
INFO  02:08:44,960 - #48 rek
INFO  02:08:44,960 - #38 ;
INFO  02:08:44,960 - #48 Klasa
INFO  02:08:44,960 - #48 neka
INFO  02:08:44,960 - #38 ;
INFO  02:08:44,960 - #46 {
INFO  02:08:44,960 - #48 i
INFO  02:08:44,960 - #35 =
INFO  02:08:44,962 - #50 0
INFO  02:08:44,962 - #38 ;
INFO  02:08:44,962 - #9 if
INFO  02:08:44,963 - #42 (
INFO  02:08:44,963 - #50 64
INFO  02:08:44,963 - #31 <
INFO  02:08:44,963 - #50 63
INFO  02:08:44,964 - #34 ||
INFO  02:08:44,965 - #49 false
INFO  02:08:44,966 - #34 ||
INFO  02:08:44,966 - #50 5
INFO  02:08:44,967 - #27 ==
INFO  02:08:44,967 - #50 4
INFO  02:08:44,969 - #33 &&
INFO  02:08:44,969 - #50 1
INFO  02:08:44,970 - #27 ==
INFO  02:08:44,970 - #50 2
INFO  02:08:44,970 - #43 )
INFO  02:08:44,970 - #46 {
INFO  02:08:44,970 - #13 print
INFO  02:08:44,970 - #42 (
INFO  02:08:44,970 - #50 1
INFO  02:08:44,970 - #43 )
INFO  02:08:44,970 - #38 ;
INFO  02:08:44,971 - #47 }
INFO  02:08:44,971 - #7 else
INFO  02:08:44,971 - #46 {
INFO  02:08:44,972 - #13 print
INFO  02:08:44,972 - #42 (
INFO  02:08:44,972 - #50 2
INFO  02:08:44,972 - #43 )
INFO  02:08:44,972 - #38 ;
INFO  02:08:44,972 - #47 }
INFO  02:08:44,972 - #47 }
INFO  02:08:44,972 - #47 }
INFO  02:08:44,978 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             63
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           false
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           4
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:08:44,978 - ===================================
INFO  02:08:44,982 - Deklarisana promenljiva x na liniji 2
INFO  02:08:44,982 - Deklarisana promenljiva y na liniji 2
INFO  02:08:44,982 - Deklarisan rekord Rekord na liniji 3
INFO  02:08:44,983 - Deklarisana promenljiva d na liniji 5
INFO  02:08:44,983 - Deklarisana promenljiva c na liniji 5
INFO  02:08:44,983 - Deklarisana  klasa Klasa na liniji 7
INFO  02:08:44,983 - Deklarisana poljeb na liniji 9
INFO  02:08:44,983 - Deklarisana poljeb na liniji 9
INFO  02:08:44,983 - Deklarisana poljea na liniji 9
INFO  02:08:44,983 - Deklarisana poljea na liniji 9
INFO  02:08:44,983 - Deklarisana poljeg na liniji 9
INFO  02:08:44,983 - Deklarisana poljeg na liniji 9
INFO  02:08:44,983 - Obradjuje se funkcija nesto na liniji 16
INFO  02:08:44,983 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:08:44,984 - Obradjuje se funkcija kita na liniji 23
INFO  02:08:44,984 - Obradjuje se funkcija main na liniji 26
INFO  02:08:44,984 - Deklarisana niz promenljiva x na liniji 26
INFO  02:08:44,984 - Deklarisana promenljiva i na liniji 26
INFO  02:08:44,984 - Deklarisana promenljiva l na liniji 26
INFO  02:08:44,984 - Deklarisana promenljiva c na liniji 26
INFO  02:08:44,984 - Deklarisana promenljiva rek na liniji 26
INFO  02:08:44,984 - Deklarisana promenljiva neka na liniji 26
INFO  02:08:44,984 - Pristupa se promenljivoj i na liniji 28
INFO  02:08:44,985 -  Deklarisanih promenljivih ima = 7
INFO  02:08:44,985 - ===================================
INFO  02:08:44,990 - neki kurac
INFO  02:08:44,990 - neko sranje2
INFO  02:08:44,990 - neko sranje2
INFO  02:08:44,991 - neko sranje
INFO  02:08:44,991 - neko sranje
INFO  02:08:44,991 - neko sranje
INFO  02:08:44,991 - neko sranje
INFO  02:08:44,991 - bratskalovskiii
INFO  02:08:44,991 - matched
INFO  02:08:44,991 - Parsiranje uspesno zavrseno!
INFO  02:09:05,588 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:09:05,646 - #2 program
INFO  02:09:05,646 - #48 p
INFO  02:09:05,646 - #48 int
INFO  02:09:05,647 - #48 x
INFO  02:09:05,647 - #38 ;
INFO  02:09:05,649 - #48 int
INFO  02:09:05,649 - #48 y
INFO  02:09:05,649 - #38 ;
INFO  02:09:05,649 - #21 record
INFO  02:09:05,649 - #48 Rekord
INFO  02:09:05,649 - #46 {
INFO  02:09:05,650 - #48 int
INFO  02:09:05,650 - #48 d
INFO  02:09:05,651 - #40 ,
INFO  02:09:05,651 - #48 c
INFO  02:09:05,651 - #38 ;
INFO  02:09:05,651 - #47 }
INFO  02:09:05,651 - #5 class
INFO  02:09:05,652 - #48 Klasa
INFO  02:09:05,652 - #46 {
INFO  02:09:05,653 - #48 int
INFO  02:09:05,653 - #48 b
INFO  02:09:05,653 - #40 ,
INFO  02:09:05,653 - #48 a
INFO  02:09:05,653 - #40 ,
INFO  02:09:05,653 - #48 g
INFO  02:09:05,653 - #38 ;
INFO  02:09:05,653 - #46 {
INFO  02:09:05,654 - #47 }
INFO  02:09:05,654 - #47 }
INFO  02:09:05,654 - #46 {
INFO  02:09:05,654 - #48 int
INFO  02:09:05,655 - #48 nesto
INFO  02:09:05,655 - #42 (
INFO  02:09:05,656 - #43 )
INFO  02:09:05,657 - #46 {
INFO  02:09:05,657 - #13 print
INFO  02:09:05,658 - #42 (
INFO  02:09:05,659 - #51 c
INFO  02:09:05,659 - #43 )
INFO  02:09:05,659 - #38 ;
INFO  02:09:05,659 - #13 print
INFO  02:09:05,660 - #42 (
INFO  02:09:05,660 - #50 5
INFO  02:09:05,660 - #43 )
INFO  02:09:05,660 - #38 ;
INFO  02:09:05,660 - #15 return
INFO  02:09:05,660 - #50 2
INFO  02:09:05,660 - #38 ;
INFO  02:09:05,661 - #47 }
INFO  02:09:05,661 - #3 void
INFO  02:09:05,662 - #48 kita2
INFO  02:09:05,662 - #42 (
INFO  02:09:05,662 - #43 )
INFO  02:09:05,662 - #46 {
INFO  02:09:05,662 - #47 }
INFO  02:09:05,662 - #3 void
INFO  02:09:05,662 - #48 kita
INFO  02:09:05,662 - #42 (
INFO  02:09:05,662 - #43 )
INFO  02:09:05,662 - #46 {
INFO  02:09:05,663 - #47 }
INFO  02:09:05,663 - #3 void
INFO  02:09:05,663 - #48 main
INFO  02:09:05,663 - #42 (
INFO  02:09:05,663 - #43 )
INFO  02:09:05,663 - #48 int
INFO  02:09:05,663 - #48 x
INFO  02:09:05,663 - #44 [
INFO  02:09:05,663 - #45 ]
INFO  02:09:05,663 - #40 ,
INFO  02:09:05,664 - #48 i
INFO  02:09:05,664 - #40 ,
INFO  02:09:05,664 - #48 l
INFO  02:09:05,664 - #38 ;
INFO  02:09:05,664 - #48 char
INFO  02:09:05,664 - #48 c
INFO  02:09:05,664 - #38 ;
INFO  02:09:05,664 - #48 Rekord
INFO  02:09:05,664 - #48 rek
INFO  02:09:05,664 - #38 ;
INFO  02:09:05,664 - #48 Klasa
INFO  02:09:05,664 - #48 neka
INFO  02:09:05,664 - #38 ;
INFO  02:09:05,664 - #46 {
INFO  02:09:05,665 - #48 i
INFO  02:09:05,665 - #35 =
INFO  02:09:05,666 - #50 0
INFO  02:09:05,666 - #38 ;
INFO  02:09:05,666 - #9 if
INFO  02:09:05,666 - #42 (
INFO  02:09:05,667 - #50 64
INFO  02:09:05,667 - #31 <
INFO  02:09:05,667 - #50 63
INFO  02:09:05,668 - #34 ||
INFO  02:09:05,668 - #49 true
INFO  02:09:05,669 - #34 ||
INFO  02:09:05,669 - #50 5
INFO  02:09:05,669 - #27 ==
INFO  02:09:05,669 - #50 4
INFO  02:09:05,671 - #33 &&
INFO  02:09:05,671 - #50 1
INFO  02:09:05,672 - #27 ==
INFO  02:09:05,672 - #50 2
INFO  02:09:05,672 - #43 )
INFO  02:09:05,672 - #46 {
INFO  02:09:05,673 - #13 print
INFO  02:09:05,673 - #42 (
INFO  02:09:05,673 - #50 1
INFO  02:09:05,673 - #43 )
INFO  02:09:05,673 - #38 ;
INFO  02:09:05,673 - #47 }
INFO  02:09:05,674 - #7 else
INFO  02:09:05,674 - #46 {
INFO  02:09:05,674 - #13 print
INFO  02:09:05,675 - #42 (
INFO  02:09:05,675 - #50 2
INFO  02:09:05,675 - #43 )
INFO  02:09:05,675 - #38 ;
INFO  02:09:05,675 - #47 }
INFO  02:09:05,675 - #47 }
INFO  02:09:05,675 - #47 }
INFO  02:09:05,680 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             63
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           4
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:09:05,681 - ===================================
INFO  02:09:05,684 - Deklarisana promenljiva x na liniji 2
INFO  02:09:05,685 - Deklarisana promenljiva y na liniji 2
INFO  02:09:05,685 - Deklarisan rekord Rekord na liniji 3
INFO  02:09:05,685 - Deklarisana promenljiva d na liniji 5
INFO  02:09:05,685 - Deklarisana promenljiva c na liniji 5
INFO  02:09:05,685 - Deklarisana  klasa Klasa na liniji 7
INFO  02:09:05,685 - Deklarisana poljeb na liniji 9
INFO  02:09:05,685 - Deklarisana poljeb na liniji 9
INFO  02:09:05,685 - Deklarisana poljea na liniji 9
INFO  02:09:05,685 - Deklarisana poljea na liniji 9
INFO  02:09:05,685 - Deklarisana poljeg na liniji 9
INFO  02:09:05,685 - Deklarisana poljeg na liniji 9
INFO  02:09:05,685 - Obradjuje se funkcija nesto na liniji 16
INFO  02:09:05,686 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:09:05,686 - Obradjuje se funkcija kita na liniji 23
INFO  02:09:05,686 - Obradjuje se funkcija main na liniji 26
INFO  02:09:05,686 - Deklarisana niz promenljiva x na liniji 26
INFO  02:09:05,686 - Deklarisana promenljiva i na liniji 26
INFO  02:09:05,686 - Deklarisana promenljiva l na liniji 26
INFO  02:09:05,686 - Deklarisana promenljiva c na liniji 26
INFO  02:09:05,686 - Deklarisana promenljiva rek na liniji 26
INFO  02:09:05,686 - Deklarisana promenljiva neka na liniji 26
INFO  02:09:05,686 - Pristupa se promenljivoj i na liniji 28
INFO  02:09:05,687 -  Deklarisanih promenljivih ima = 7
INFO  02:09:05,687 - ===================================
INFO  02:09:05,693 - neki kurac
INFO  02:09:05,693 - neko sranje2
INFO  02:09:05,693 - neko sranje2
INFO  02:09:05,693 - neko sranje
INFO  02:09:05,693 - neko sranje
INFO  02:09:05,693 - neko sranje
INFO  02:09:05,693 - bratskalovskiii
INFO  02:09:05,693 - matched
INFO  02:09:05,694 - Parsiranje uspesno zavrseno!
INFO  02:09:27,413 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:09:27,470 - #2 program
INFO  02:09:27,470 - #48 p
INFO  02:09:27,470 - #48 int
INFO  02:09:27,471 - #48 x
INFO  02:09:27,471 - #38 ;
INFO  02:09:27,472 - #48 int
INFO  02:09:27,473 - #48 y
INFO  02:09:27,473 - #38 ;
INFO  02:09:27,473 - #21 record
INFO  02:09:27,473 - #48 Rekord
INFO  02:09:27,473 - #46 {
INFO  02:09:27,473 - #48 int
INFO  02:09:27,474 - #48 d
INFO  02:09:27,474 - #40 ,
INFO  02:09:27,474 - #48 c
INFO  02:09:27,474 - #38 ;
INFO  02:09:27,475 - #47 }
INFO  02:09:27,475 - #5 class
INFO  02:09:27,475 - #48 Klasa
INFO  02:09:27,476 - #46 {
INFO  02:09:27,476 - #48 int
INFO  02:09:27,476 - #48 b
INFO  02:09:27,477 - #40 ,
INFO  02:09:27,477 - #48 a
INFO  02:09:27,477 - #40 ,
INFO  02:09:27,477 - #48 g
INFO  02:09:27,477 - #38 ;
INFO  02:09:27,477 - #46 {
INFO  02:09:27,477 - #47 }
INFO  02:09:27,477 - #47 }
INFO  02:09:27,478 - #46 {
INFO  02:09:27,478 - #48 int
INFO  02:09:27,478 - #48 nesto
INFO  02:09:27,479 - #42 (
INFO  02:09:27,479 - #43 )
INFO  02:09:27,480 - #46 {
INFO  02:09:27,480 - #13 print
INFO  02:09:27,482 - #42 (
INFO  02:09:27,482 - #51 c
INFO  02:09:27,483 - #43 )
INFO  02:09:27,483 - #38 ;
INFO  02:09:27,483 - #13 print
INFO  02:09:27,484 - #42 (
INFO  02:09:27,484 - #50 5
INFO  02:09:27,484 - #43 )
INFO  02:09:27,484 - #38 ;
INFO  02:09:27,484 - #15 return
INFO  02:09:27,484 - #50 2
INFO  02:09:27,484 - #38 ;
INFO  02:09:27,484 - #47 }
INFO  02:09:27,484 - #3 void
INFO  02:09:27,485 - #48 kita2
INFO  02:09:27,485 - #42 (
INFO  02:09:27,485 - #43 )
INFO  02:09:27,485 - #46 {
INFO  02:09:27,485 - #47 }
INFO  02:09:27,485 - #3 void
INFO  02:09:27,485 - #48 kita
INFO  02:09:27,485 - #42 (
INFO  02:09:27,486 - #43 )
INFO  02:09:27,486 - #46 {
INFO  02:09:27,486 - #47 }
INFO  02:09:27,486 - #3 void
INFO  02:09:27,486 - #48 main
INFO  02:09:27,486 - #42 (
INFO  02:09:27,486 - #43 )
INFO  02:09:27,486 - #48 int
INFO  02:09:27,486 - #48 x
INFO  02:09:27,486 - #44 [
INFO  02:09:27,486 - #45 ]
INFO  02:09:27,486 - #40 ,
INFO  02:09:27,487 - #48 i
INFO  02:09:27,487 - #40 ,
INFO  02:09:27,487 - #48 l
INFO  02:09:27,487 - #38 ;
INFO  02:09:27,487 - #48 char
INFO  02:09:27,487 - #48 c
INFO  02:09:27,487 - #38 ;
INFO  02:09:27,487 - #48 Rekord
INFO  02:09:27,487 - #48 rek
INFO  02:09:27,487 - #38 ;
INFO  02:09:27,487 - #48 Klasa
INFO  02:09:27,487 - #48 neka
INFO  02:09:27,487 - #38 ;
INFO  02:09:27,487 - #46 {
INFO  02:09:27,488 - #48 i
INFO  02:09:27,488 - #35 =
INFO  02:09:27,489 - #50 0
INFO  02:09:27,489 - #38 ;
INFO  02:09:27,489 - #9 if
INFO  02:09:27,489 - #42 (
INFO  02:09:27,490 - #50 64
INFO  02:09:27,490 - #31 <
INFO  02:09:27,490 - #50 65
INFO  02:09:27,491 - #34 ||
INFO  02:09:27,491 - #49 true
INFO  02:09:27,492 - #34 ||
INFO  02:09:27,493 - #50 5
INFO  02:09:27,493 - #27 ==
INFO  02:09:27,493 - #50 4
INFO  02:09:27,495 - #33 &&
INFO  02:09:27,495 - #50 1
INFO  02:09:27,496 - #27 ==
INFO  02:09:27,497 - #50 2
INFO  02:09:27,497 - #43 )
INFO  02:09:27,497 - #46 {
INFO  02:09:27,497 - #13 print
INFO  02:09:27,497 - #42 (
INFO  02:09:27,497 - #50 1
INFO  02:09:27,497 - #43 )
INFO  02:09:27,497 - #38 ;
INFO  02:09:27,498 - #47 }
INFO  02:09:27,498 - #7 else
INFO  02:09:27,498 - #46 {
INFO  02:09:27,498 - #13 print
INFO  02:09:27,498 - #42 (
INFO  02:09:27,498 - #50 2
INFO  02:09:27,499 - #43 )
INFO  02:09:27,499 - #38 ;
INFO  02:09:27,499 - #47 }
INFO  02:09:27,499 - #47 }
INFO  02:09:27,499 - #47 }
INFO  02:09:27,504 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             65
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           4
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:09:27,505 - ===================================
INFO  02:09:27,509 - Deklarisana promenljiva x na liniji 2
INFO  02:09:27,509 - Deklarisana promenljiva y na liniji 2
INFO  02:09:27,509 - Deklarisan rekord Rekord na liniji 3
INFO  02:09:27,509 - Deklarisana promenljiva d na liniji 5
INFO  02:09:27,509 - Deklarisana promenljiva c na liniji 5
INFO  02:09:27,509 - Deklarisana  klasa Klasa na liniji 7
INFO  02:09:27,509 - Deklarisana poljeb na liniji 9
INFO  02:09:27,510 - Deklarisana poljeb na liniji 9
INFO  02:09:27,510 - Deklarisana poljea na liniji 9
INFO  02:09:27,510 - Deklarisana poljea na liniji 9
INFO  02:09:27,510 - Deklarisana poljeg na liniji 9
INFO  02:09:27,510 - Deklarisana poljeg na liniji 9
INFO  02:09:27,510 - Obradjuje se funkcija nesto na liniji 16
INFO  02:09:27,510 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:09:27,510 - Obradjuje se funkcija kita na liniji 23
INFO  02:09:27,510 - Obradjuje se funkcija main na liniji 26
INFO  02:09:27,510 - Deklarisana niz promenljiva x na liniji 26
INFO  02:09:27,510 - Deklarisana promenljiva i na liniji 26
INFO  02:09:27,510 - Deklarisana promenljiva l na liniji 26
INFO  02:09:27,511 - Deklarisana promenljiva c na liniji 26
INFO  02:09:27,511 - Deklarisana promenljiva rek na liniji 26
INFO  02:09:27,511 - Deklarisana promenljiva neka na liniji 26
INFO  02:09:27,511 - Pristupa se promenljivoj i na liniji 28
INFO  02:09:27,511 -  Deklarisanih promenljivih ima = 7
INFO  02:09:27,512 - ===================================
INFO  02:09:27,517 - neki kurac
INFO  02:09:27,517 - neko sranje2
INFO  02:09:27,517 - neko sranje2
INFO  02:09:27,517 - neko sranje
INFO  02:09:27,517 - neko sranje
INFO  02:09:27,518 - neko sranje
INFO  02:09:27,518 - bratskalovskiii
INFO  02:09:27,518 - matched
INFO  02:09:27,518 - Parsiranje uspesno zavrseno!
INFO  02:09:41,385 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:09:41,437 - #2 program
INFO  02:09:41,437 - #48 p
INFO  02:09:41,437 - #48 int
INFO  02:09:41,438 - #48 x
INFO  02:09:41,439 - #38 ;
INFO  02:09:41,441 - #48 int
INFO  02:09:41,441 - #48 y
INFO  02:09:41,441 - #38 ;
INFO  02:09:41,442 - #21 record
INFO  02:09:41,442 - #48 Rekord
INFO  02:09:41,442 - #46 {
INFO  02:09:41,442 - #48 int
INFO  02:09:41,443 - #48 d
INFO  02:09:41,443 - #40 ,
INFO  02:09:41,443 - #48 c
INFO  02:09:41,443 - #38 ;
INFO  02:09:41,443 - #47 }
INFO  02:09:41,443 - #5 class
INFO  02:09:41,444 - #48 Klasa
INFO  02:09:41,444 - #46 {
INFO  02:09:41,445 - #48 int
INFO  02:09:41,445 - #48 b
INFO  02:09:41,445 - #40 ,
INFO  02:09:41,445 - #48 a
INFO  02:09:41,446 - #40 ,
INFO  02:09:41,446 - #48 g
INFO  02:09:41,446 - #38 ;
INFO  02:09:41,446 - #46 {
INFO  02:09:41,446 - #47 }
INFO  02:09:41,446 - #47 }
INFO  02:09:41,447 - #46 {
INFO  02:09:41,447 - #48 int
INFO  02:09:41,447 - #48 nesto
INFO  02:09:41,447 - #42 (
INFO  02:09:41,448 - #43 )
INFO  02:09:41,448 - #46 {
INFO  02:09:41,448 - #13 print
INFO  02:09:41,449 - #42 (
INFO  02:09:41,449 - #51 c
INFO  02:09:41,450 - #43 )
INFO  02:09:41,450 - #38 ;
INFO  02:09:41,451 - #13 print
INFO  02:09:41,451 - #42 (
INFO  02:09:41,451 - #50 5
INFO  02:09:41,451 - #43 )
INFO  02:09:41,451 - #38 ;
INFO  02:09:41,451 - #15 return
INFO  02:09:41,451 - #50 2
INFO  02:09:41,452 - #38 ;
INFO  02:09:41,452 - #47 }
INFO  02:09:41,452 - #3 void
INFO  02:09:41,453 - #48 kita2
INFO  02:09:41,453 - #42 (
INFO  02:09:41,454 - #43 )
INFO  02:09:41,454 - #46 {
INFO  02:09:41,454 - #47 }
INFO  02:09:41,454 - #3 void
INFO  02:09:41,454 - #48 kita
INFO  02:09:41,454 - #42 (
INFO  02:09:41,454 - #43 )
INFO  02:09:41,454 - #46 {
INFO  02:09:41,454 - #47 }
INFO  02:09:41,455 - #3 void
INFO  02:09:41,455 - #48 main
INFO  02:09:41,455 - #42 (
INFO  02:09:41,455 - #43 )
INFO  02:09:41,455 - #48 int
INFO  02:09:41,455 - #48 x
INFO  02:09:41,455 - #44 [
INFO  02:09:41,455 - #45 ]
INFO  02:09:41,455 - #40 ,
INFO  02:09:41,456 - #48 i
INFO  02:09:41,456 - #40 ,
INFO  02:09:41,456 - #48 l
INFO  02:09:41,456 - #38 ;
INFO  02:09:41,456 - #48 char
INFO  02:09:41,456 - #48 c
INFO  02:09:41,456 - #38 ;
INFO  02:09:41,456 - #48 Rekord
INFO  02:09:41,456 - #48 rek
INFO  02:09:41,456 - #38 ;
INFO  02:09:41,456 - #48 Klasa
INFO  02:09:41,457 - #48 neka
INFO  02:09:41,457 - #38 ;
INFO  02:09:41,457 - #46 {
INFO  02:09:41,457 - #48 i
INFO  02:09:41,457 - #35 =
INFO  02:09:41,459 - #50 0
INFO  02:09:41,459 - #38 ;
INFO  02:09:41,459 - #9 if
INFO  02:09:41,460 - #42 (
INFO  02:09:41,460 - #50 64
INFO  02:09:41,460 - #31 <
INFO  02:09:41,460 - #50 65
INFO  02:09:41,461 - #34 ||
INFO  02:09:41,462 - #49 true
INFO  02:09:41,462 - #34 ||
INFO  02:09:41,463 - #50 5
INFO  02:09:41,463 - #27 ==
INFO  02:09:41,463 - #50 4
INFO  02:09:41,465 - #33 &&
INFO  02:09:41,465 - #50 1
INFO  02:09:41,465 - #27 ==
INFO  02:09:41,466 - #50 1
INFO  02:09:41,466 - #43 )
INFO  02:09:41,466 - #46 {
INFO  02:09:41,466 - #13 print
INFO  02:09:41,466 - #42 (
INFO  02:09:41,466 - #50 1
INFO  02:09:41,466 - #43 )
INFO  02:09:41,466 - #38 ;
INFO  02:09:41,466 - #47 }
INFO  02:09:41,466 - #7 else
INFO  02:09:41,466 - #46 {
INFO  02:09:41,467 - #13 print
INFO  02:09:41,467 - #42 (
INFO  02:09:41,467 - #50 2
INFO  02:09:41,467 - #43 )
INFO  02:09:41,467 - #38 ;
INFO  02:09:41,467 - #47 }
INFO  02:09:41,467 - #47 }
INFO  02:09:41,468 - #47 }
INFO  02:09:41,473 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             65
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           4
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:09:41,474 - ===================================
INFO  02:09:41,478 - Deklarisana promenljiva x na liniji 2
INFO  02:09:41,478 - Deklarisana promenljiva y na liniji 2
INFO  02:09:41,478 - Deklarisan rekord Rekord na liniji 3
INFO  02:09:41,478 - Deklarisana promenljiva d na liniji 5
INFO  02:09:41,478 - Deklarisana promenljiva c na liniji 5
INFO  02:09:41,478 - Deklarisana  klasa Klasa na liniji 7
INFO  02:09:41,478 - Deklarisana poljeb na liniji 9
INFO  02:09:41,478 - Deklarisana poljeb na liniji 9
INFO  02:09:41,478 - Deklarisana poljea na liniji 9
INFO  02:09:41,479 - Deklarisana poljea na liniji 9
INFO  02:09:41,479 - Deklarisana poljeg na liniji 9
INFO  02:09:41,479 - Deklarisana poljeg na liniji 9
INFO  02:09:41,479 - Obradjuje se funkcija nesto na liniji 16
INFO  02:09:41,479 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:09:41,479 - Obradjuje se funkcija kita na liniji 23
INFO  02:09:41,479 - Obradjuje se funkcija main na liniji 26
INFO  02:09:41,479 - Deklarisana niz promenljiva x na liniji 26
INFO  02:09:41,479 - Deklarisana promenljiva i na liniji 26
INFO  02:09:41,479 - Deklarisana promenljiva l na liniji 26
INFO  02:09:41,479 - Deklarisana promenljiva c na liniji 26
INFO  02:09:41,479 - Deklarisana promenljiva rek na liniji 26
INFO  02:09:41,480 - Deklarisana promenljiva neka na liniji 26
INFO  02:09:41,480 - Pristupa se promenljivoj i na liniji 28
INFO  02:09:41,480 -  Deklarisanih promenljivih ima = 7
INFO  02:09:41,481 - ===================================
INFO  02:09:41,486 - neki kurac
INFO  02:09:41,486 - neko sranje2
INFO  02:09:41,486 - neko sranje2
INFO  02:09:41,486 - neko sranje
INFO  02:09:41,486 - neko sranje
INFO  02:09:41,486 - neko sranje
INFO  02:09:41,486 - bratskalovskiii
INFO  02:09:41,486 - matched
INFO  02:09:41,487 - Parsiranje uspesno zavrseno!
INFO  02:09:58,990 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:09:59,053 - #2 program
INFO  02:09:59,053 - #48 p
INFO  02:09:59,053 - #48 int
INFO  02:09:59,054 - #48 x
INFO  02:09:59,055 - #38 ;
INFO  02:09:59,056 - #48 int
INFO  02:09:59,057 - #48 y
INFO  02:09:59,057 - #38 ;
INFO  02:09:59,057 - #21 record
INFO  02:09:59,057 - #48 Rekord
INFO  02:09:59,057 - #46 {
INFO  02:09:59,058 - #48 int
INFO  02:09:59,058 - #48 d
INFO  02:09:59,058 - #40 ,
INFO  02:09:59,059 - #48 c
INFO  02:09:59,059 - #38 ;
INFO  02:09:59,059 - #47 }
INFO  02:09:59,059 - #5 class
INFO  02:09:59,060 - #48 Klasa
INFO  02:09:59,060 - #46 {
INFO  02:09:59,061 - #48 int
INFO  02:09:59,061 - #48 b
INFO  02:09:59,061 - #40 ,
INFO  02:09:59,061 - #48 a
INFO  02:09:59,061 - #40 ,
INFO  02:09:59,062 - #48 g
INFO  02:09:59,062 - #38 ;
INFO  02:09:59,062 - #46 {
INFO  02:09:59,062 - #47 }
INFO  02:09:59,062 - #47 }
INFO  02:09:59,063 - #46 {
INFO  02:09:59,063 - #48 int
INFO  02:09:59,063 - #48 nesto
INFO  02:09:59,063 - #42 (
INFO  02:09:59,064 - #43 )
INFO  02:09:59,064 - #46 {
INFO  02:09:59,064 - #13 print
INFO  02:09:59,067 - #42 (
INFO  02:09:59,067 - #51 c
INFO  02:09:59,067 - #43 )
INFO  02:09:59,068 - #38 ;
INFO  02:09:59,068 - #13 print
INFO  02:09:59,069 - #42 (
INFO  02:09:59,069 - #50 5
INFO  02:09:59,069 - #43 )
INFO  02:09:59,069 - #38 ;
INFO  02:09:59,069 - #15 return
INFO  02:09:59,069 - #50 2
INFO  02:09:59,069 - #38 ;
INFO  02:09:59,069 - #47 }
INFO  02:09:59,070 - #3 void
INFO  02:09:59,070 - #48 kita2
INFO  02:09:59,071 - #42 (
INFO  02:09:59,071 - #43 )
INFO  02:09:59,071 - #46 {
INFO  02:09:59,071 - #47 }
INFO  02:09:59,071 - #3 void
INFO  02:09:59,071 - #48 kita
INFO  02:09:59,071 - #42 (
INFO  02:09:59,071 - #43 )
INFO  02:09:59,071 - #46 {
INFO  02:09:59,071 - #47 }
INFO  02:09:59,071 - #3 void
INFO  02:09:59,072 - #48 main
INFO  02:09:59,072 - #42 (
INFO  02:09:59,072 - #43 )
INFO  02:09:59,072 - #48 int
INFO  02:09:59,072 - #48 x
INFO  02:09:59,072 - #44 [
INFO  02:09:59,072 - #45 ]
INFO  02:09:59,072 - #40 ,
INFO  02:09:59,072 - #48 i
INFO  02:09:59,073 - #40 ,
INFO  02:09:59,073 - #48 l
INFO  02:09:59,073 - #38 ;
INFO  02:09:59,073 - #48 char
INFO  02:09:59,073 - #48 c
INFO  02:09:59,073 - #38 ;
INFO  02:09:59,073 - #48 Rekord
INFO  02:09:59,073 - #48 rek
INFO  02:09:59,073 - #38 ;
INFO  02:09:59,073 - #48 Klasa
INFO  02:09:59,073 - #48 neka
INFO  02:09:59,073 - #38 ;
INFO  02:09:59,073 - #46 {
INFO  02:09:59,073 - #48 i
INFO  02:09:59,074 - #35 =
INFO  02:09:59,075 - #50 0
INFO  02:09:59,075 - #38 ;
INFO  02:09:59,075 - #9 if
INFO  02:09:59,075 - #42 (
INFO  02:09:59,076 - #50 64
INFO  02:09:59,076 - #31 <
INFO  02:09:59,076 - #50 65
INFO  02:09:59,077 - #34 ||
INFO  02:09:59,077 - #49 true
INFO  02:09:59,078 - #34 ||
INFO  02:09:59,078 - #50 5
INFO  02:09:59,078 - #27 ==
INFO  02:09:59,078 - #50 5
INFO  02:09:59,080 - #33 &&
INFO  02:09:59,081 - #50 1
INFO  02:09:59,081 - #27 ==
INFO  02:09:59,082 - #50 1
INFO  02:09:59,082 - #43 )
INFO  02:09:59,082 - #46 {
INFO  02:09:59,082 - #13 print
INFO  02:09:59,082 - #42 (
INFO  02:09:59,082 - #50 1
INFO  02:09:59,082 - #43 )
INFO  02:09:59,082 - #38 ;
INFO  02:09:59,083 - #47 }
INFO  02:09:59,083 - #7 else
INFO  02:09:59,083 - #46 {
INFO  02:09:59,086 - #13 print
INFO  02:09:59,086 - #42 (
INFO  02:09:59,087 - #50 2
INFO  02:09:59,087 - #43 )
INFO  02:09:59,087 - #38 ;
INFO  02:09:59,087 - #47 }
INFO  02:09:59,087 - #47 }
INFO  02:09:59,087 - #47 }
INFO  02:09:59,092 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             65
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:09:59,093 - ===================================
INFO  02:09:59,097 - Deklarisana promenljiva x na liniji 2
INFO  02:09:59,097 - Deklarisana promenljiva y na liniji 2
INFO  02:09:59,097 - Deklarisan rekord Rekord na liniji 3
INFO  02:09:59,097 - Deklarisana promenljiva d na liniji 5
INFO  02:09:59,097 - Deklarisana promenljiva c na liniji 5
INFO  02:09:59,097 - Deklarisana  klasa Klasa na liniji 7
INFO  02:09:59,097 - Deklarisana poljeb na liniji 9
INFO  02:09:59,097 - Deklarisana poljeb na liniji 9
INFO  02:09:59,097 - Deklarisana poljea na liniji 9
INFO  02:09:59,097 - Deklarisana poljea na liniji 9
INFO  02:09:59,097 - Deklarisana poljeg na liniji 9
INFO  02:09:59,097 - Deklarisana poljeg na liniji 9
INFO  02:09:59,097 - Obradjuje se funkcija nesto na liniji 16
INFO  02:09:59,098 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:09:59,098 - Obradjuje se funkcija kita na liniji 23
INFO  02:09:59,098 - Obradjuje se funkcija main na liniji 26
INFO  02:09:59,098 - Deklarisana niz promenljiva x na liniji 26
INFO  02:09:59,098 - Deklarisana promenljiva i na liniji 26
INFO  02:09:59,098 - Deklarisana promenljiva l na liniji 26
INFO  02:09:59,098 - Deklarisana promenljiva c na liniji 26
INFO  02:09:59,098 - Deklarisana promenljiva rek na liniji 26
INFO  02:09:59,098 - Deklarisana promenljiva neka na liniji 26
INFO  02:09:59,099 - Pristupa se promenljivoj i na liniji 28
INFO  02:09:59,100 -  Deklarisanih promenljivih ima = 7
INFO  02:09:59,100 - ===================================
INFO  02:09:59,106 - neki kurac
INFO  02:09:59,106 - neko sranje2
INFO  02:09:59,106 - neko sranje2
INFO  02:09:59,106 - neko sranje
INFO  02:09:59,106 - neko sranje
INFO  02:09:59,106 - neko sranje
INFO  02:09:59,106 - bratskalovskiii
INFO  02:09:59,106 - matched
INFO  02:09:59,107 - Parsiranje uspesno zavrseno!
INFO  02:13:22,243 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:13:22,300 - #2 program
INFO  02:13:22,300 - #48 p
INFO  02:13:22,300 - #48 int
INFO  02:13:22,301 - #48 x
INFO  02:13:22,302 - #38 ;
INFO  02:13:22,303 - #48 int
INFO  02:13:22,303 - #48 y
INFO  02:13:22,304 - #38 ;
INFO  02:13:22,304 - #21 record
INFO  02:13:22,304 - #48 Rekord
INFO  02:13:22,304 - #46 {
INFO  02:13:22,304 - #48 int
INFO  02:13:22,305 - #48 d
INFO  02:13:22,305 - #40 ,
INFO  02:13:22,305 - #48 c
INFO  02:13:22,305 - #38 ;
INFO  02:13:22,306 - #47 }
INFO  02:13:22,306 - #5 class
INFO  02:13:22,306 - #48 Klasa
INFO  02:13:22,307 - #46 {
INFO  02:13:22,307 - #48 int
INFO  02:13:22,307 - #48 b
INFO  02:13:22,308 - #40 ,
INFO  02:13:22,308 - #48 a
INFO  02:13:22,308 - #40 ,
INFO  02:13:22,308 - #48 g
INFO  02:13:22,308 - #38 ;
INFO  02:13:22,308 - #46 {
INFO  02:13:22,309 - #47 }
INFO  02:13:22,309 - #47 }
INFO  02:13:22,310 - #46 {
INFO  02:13:22,310 - #48 int
INFO  02:13:22,311 - #48 nesto
INFO  02:13:22,311 - #42 (
INFO  02:13:22,311 - #43 )
INFO  02:13:22,311 - #46 {
INFO  02:13:22,311 - #13 print
INFO  02:13:22,313 - #42 (
INFO  02:13:22,313 - #51 c
INFO  02:13:22,313 - #43 )
INFO  02:13:22,314 - #38 ;
INFO  02:13:22,314 - #13 print
INFO  02:13:22,314 - #42 (
INFO  02:13:22,314 - #50 5
INFO  02:13:22,314 - #43 )
INFO  02:13:22,314 - #38 ;
INFO  02:13:22,314 - #15 return
INFO  02:13:22,314 - #50 2
INFO  02:13:22,314 - #38 ;
INFO  02:13:22,315 - #47 }
INFO  02:13:22,315 - #3 void
INFO  02:13:22,316 - #48 kita2
INFO  02:13:22,316 - #42 (
INFO  02:13:22,316 - #43 )
INFO  02:13:22,316 - #46 {
INFO  02:13:22,316 - #47 }
INFO  02:13:22,316 - #3 void
INFO  02:13:22,316 - #48 kita
INFO  02:13:22,316 - #42 (
INFO  02:13:22,316 - #43 )
INFO  02:13:22,316 - #46 {
INFO  02:13:22,316 - #47 }
INFO  02:13:22,316 - #3 void
INFO  02:13:22,317 - #48 main
INFO  02:13:22,317 - #42 (
INFO  02:13:22,317 - #43 )
INFO  02:13:22,317 - #48 int
INFO  02:13:22,317 - #48 x
INFO  02:13:22,317 - #44 [
INFO  02:13:22,317 - #45 ]
INFO  02:13:22,317 - #40 ,
INFO  02:13:22,318 - #48 i
INFO  02:13:22,318 - #40 ,
INFO  02:13:22,318 - #48 l
INFO  02:13:22,318 - #38 ;
INFO  02:13:22,318 - #48 char
INFO  02:13:22,318 - #48 c
INFO  02:13:22,318 - #38 ;
INFO  02:13:22,318 - #48 Rekord
INFO  02:13:22,318 - #48 rek
INFO  02:13:22,318 - #38 ;
INFO  02:13:22,318 - #48 Klasa
INFO  02:13:22,318 - #48 neka
INFO  02:13:22,318 - #38 ;
INFO  02:13:22,319 - #46 {
INFO  02:13:22,319 - #48 i
INFO  02:13:22,319 - #35 =
INFO  02:13:22,320 - #50 0
INFO  02:13:22,320 - #38 ;
INFO  02:13:22,320 - #9 if
INFO  02:13:22,320 - #42 (
INFO  02:13:22,321 - #50 64
INFO  02:13:22,321 - #31 <
INFO  02:13:22,321 - #50 65
INFO  02:13:22,322 - #34 ||
INFO  02:13:22,322 - #49 true
INFO  02:13:22,323 - #34 ||
INFO  02:13:22,323 - #50 5
INFO  02:13:22,323 - #27 ==
INFO  02:13:22,323 - #50 5
INFO  02:13:22,326 - #33 &&
INFO  02:13:22,326 - #50 1
INFO  02:13:22,327 - #27 ==
INFO  02:13:22,327 - #50 1
INFO  02:13:22,327 - #43 )
INFO  02:13:22,327 - #46 {
INFO  02:13:22,327 - #13 print
INFO  02:13:22,327 - #42 (
INFO  02:13:22,327 - #50 1
INFO  02:13:22,327 - #43 )
INFO  02:13:22,327 - #38 ;
INFO  02:13:22,327 - #47 }
INFO  02:13:22,328 - #7 else
INFO  02:13:22,328 - #46 {
INFO  02:13:22,328 - #13 print
INFO  02:13:22,328 - #42 (
INFO  02:13:22,328 - #50 2
INFO  02:13:22,329 - #43 )
INFO  02:13:22,329 - #38 ;
INFO  02:13:22,329 - #47 }
INFO  02:13:22,329 - #47 }
INFO  02:13:22,329 - #47 }
INFO  02:13:22,334 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             65
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:13:22,335 - ===================================
INFO  02:13:22,339 - Deklarisana promenljiva x na liniji 2
INFO  02:13:22,339 - Deklarisana promenljiva y na liniji 2
INFO  02:13:22,339 - Deklarisan rekord Rekord na liniji 3
INFO  02:13:22,339 - Deklarisana promenljiva d na liniji 5
INFO  02:13:22,339 - Deklarisana promenljiva c na liniji 5
INFO  02:13:22,340 - Deklarisana  klasa Klasa na liniji 7
INFO  02:13:22,340 - Deklarisana poljeb na liniji 9
INFO  02:13:22,340 - Deklarisana poljeb na liniji 9
INFO  02:13:22,340 - Deklarisana poljea na liniji 9
INFO  02:13:22,340 - Deklarisana poljea na liniji 9
INFO  02:13:22,340 - Deklarisana poljeg na liniji 9
INFO  02:13:22,340 - Deklarisana poljeg na liniji 9
INFO  02:13:22,340 - Obradjuje se funkcija nesto na liniji 16
INFO  02:13:22,340 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:13:22,340 - Obradjuje se funkcija kita na liniji 23
INFO  02:13:22,340 - Obradjuje se funkcija main na liniji 26
INFO  02:13:22,341 - Deklarisana niz promenljiva x na liniji 26
INFO  02:13:22,341 - Deklarisana promenljiva i na liniji 26
INFO  02:13:22,341 - Deklarisana promenljiva l na liniji 26
INFO  02:13:22,341 - Deklarisana promenljiva c na liniji 26
INFO  02:13:22,341 - Deklarisana promenljiva rek na liniji 26
INFO  02:13:22,341 - Deklarisana promenljiva neka na liniji 26
INFO  02:13:22,341 - Pristupa se promenljivoj i na liniji 28
INFO  02:13:22,342 -  Deklarisanih promenljivih ima = 7
INFO  02:13:22,342 - ===================================
INFO  02:13:22,348 - neki kurac
INFO  02:13:22,348 - neko sranje2
INFO  02:13:22,348 - neko sranje
INFO  02:13:22,348 - neko sranje2
INFO  02:13:22,348 - neko sranje
INFO  02:13:22,348 - neko sranje
INFO  02:13:22,349 - bratskalovskiii
INFO  02:13:22,349 - matched
INFO  02:13:22,349 - Parsiranje uspesno zavrseno!
INFO  02:13:59,776 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:13:59,829 - #2 program
INFO  02:13:59,829 - #48 p
INFO  02:13:59,829 - #48 int
INFO  02:13:59,830 - #48 x
INFO  02:13:59,831 - #38 ;
INFO  02:13:59,832 - #48 int
INFO  02:13:59,832 - #48 y
INFO  02:13:59,832 - #38 ;
INFO  02:13:59,832 - #21 record
INFO  02:13:59,833 - #48 Rekord
INFO  02:13:59,833 - #46 {
INFO  02:13:59,833 - #48 int
INFO  02:13:59,834 - #48 d
INFO  02:13:59,834 - #40 ,
INFO  02:13:59,834 - #48 c
INFO  02:13:59,834 - #38 ;
INFO  02:13:59,834 - #47 }
INFO  02:13:59,834 - #5 class
INFO  02:13:59,835 - #48 Klasa
INFO  02:13:59,835 - #46 {
INFO  02:13:59,836 - #48 int
INFO  02:13:59,836 - #48 b
INFO  02:13:59,836 - #40 ,
INFO  02:13:59,836 - #48 a
INFO  02:13:59,836 - #40 ,
INFO  02:13:59,836 - #48 g
INFO  02:13:59,837 - #38 ;
INFO  02:13:59,837 - #46 {
INFO  02:13:59,837 - #47 }
INFO  02:13:59,837 - #47 }
INFO  02:13:59,837 - #46 {
INFO  02:13:59,838 - #48 int
INFO  02:13:59,838 - #48 nesto
INFO  02:13:59,838 - #42 (
INFO  02:13:59,838 - #43 )
INFO  02:13:59,839 - #46 {
INFO  02:13:59,839 - #13 print
INFO  02:13:59,840 - #42 (
INFO  02:13:59,840 - #51 c
INFO  02:13:59,841 - #43 )
INFO  02:13:59,841 - #38 ;
INFO  02:13:59,842 - #13 print
INFO  02:13:59,842 - #42 (
INFO  02:13:59,842 - #50 5
INFO  02:13:59,842 - #43 )
INFO  02:13:59,843 - #38 ;
INFO  02:13:59,843 - #15 return
INFO  02:13:59,843 - #50 2
INFO  02:13:59,843 - #38 ;
INFO  02:13:59,843 - #47 }
INFO  02:13:59,843 - #3 void
INFO  02:13:59,844 - #48 kita2
INFO  02:13:59,844 - #42 (
INFO  02:13:59,844 - #43 )
INFO  02:13:59,845 - #46 {
INFO  02:13:59,845 - #47 }
INFO  02:13:59,845 - #3 void
INFO  02:13:59,845 - #48 kita
INFO  02:13:59,845 - #42 (
INFO  02:13:59,845 - #43 )
INFO  02:13:59,845 - #46 {
INFO  02:13:59,845 - #47 }
INFO  02:13:59,845 - #3 void
INFO  02:13:59,845 - #48 main
INFO  02:13:59,845 - #42 (
INFO  02:13:59,845 - #43 )
INFO  02:13:59,845 - #48 int
INFO  02:13:59,845 - #48 x
INFO  02:13:59,845 - #44 [
INFO  02:13:59,845 - #45 ]
INFO  02:13:59,846 - #40 ,
INFO  02:13:59,846 - #48 i
INFO  02:13:59,846 - #40 ,
INFO  02:13:59,846 - #48 l
INFO  02:13:59,846 - #38 ;
INFO  02:13:59,846 - #48 char
INFO  02:13:59,846 - #48 c
INFO  02:13:59,846 - #38 ;
INFO  02:13:59,846 - #48 Rekord
INFO  02:13:59,846 - #48 rek
INFO  02:13:59,846 - #38 ;
INFO  02:13:59,846 - #48 Klasa
INFO  02:13:59,847 - #48 neka
INFO  02:13:59,847 - #38 ;
INFO  02:13:59,847 - #46 {
INFO  02:13:59,847 - #48 i
INFO  02:13:59,847 - #35 =
INFO  02:13:59,848 - #50 0
INFO  02:13:59,848 - #38 ;
INFO  02:13:59,849 - #9 if
INFO  02:13:59,849 - #42 (
INFO  02:13:59,849 - #50 64
INFO  02:13:59,849 - #31 <
INFO  02:13:59,849 - #50 65
INFO  02:13:59,850 - #34 ||
INFO  02:13:59,851 - #49 true
INFO  02:13:59,851 - #34 ||
INFO  02:13:59,851 - #50 5
INFO  02:13:59,852 - #27 ==
INFO  02:13:59,852 - #50 5
INFO  02:13:59,854 - #33 &&
INFO  02:13:59,854 - #50 2
INFO  02:13:59,854 - #27 ==
INFO  02:13:59,855 - #50 1
INFO  02:13:59,855 - #43 )
INFO  02:13:59,855 - #46 {
INFO  02:13:59,855 - #13 print
INFO  02:13:59,855 - #42 (
INFO  02:13:59,855 - #50 1
INFO  02:13:59,855 - #43 )
INFO  02:13:59,855 - #38 ;
INFO  02:13:59,855 - #47 }
INFO  02:13:59,855 - #7 else
INFO  02:13:59,855 - #46 {
INFO  02:13:59,856 - #13 print
INFO  02:13:59,856 - #42 (
INFO  02:13:59,856 - #50 2
INFO  02:13:59,856 - #43 )
INFO  02:13:59,856 - #38 ;
INFO  02:13:59,856 - #47 }
INFO  02:13:59,857 - #47 }
INFO  02:13:59,857 - #47 }
INFO  02:13:59,863 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             65
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:13:59,863 - ===================================
INFO  02:13:59,867 - Deklarisana promenljiva x na liniji 2
INFO  02:13:59,867 - Deklarisana promenljiva y na liniji 2
INFO  02:13:59,867 - Deklarisan rekord Rekord na liniji 3
INFO  02:13:59,867 - Deklarisana promenljiva d na liniji 5
INFO  02:13:59,867 - Deklarisana promenljiva c na liniji 5
INFO  02:13:59,867 - Deklarisana  klasa Klasa na liniji 7
INFO  02:13:59,868 - Deklarisana poljeb na liniji 9
INFO  02:13:59,868 - Deklarisana poljeb na liniji 9
INFO  02:13:59,868 - Deklarisana poljea na liniji 9
INFO  02:13:59,868 - Deklarisana poljea na liniji 9
INFO  02:13:59,868 - Deklarisana poljeg na liniji 9
INFO  02:13:59,868 - Deklarisana poljeg na liniji 9
INFO  02:13:59,868 - Obradjuje se funkcija nesto na liniji 16
INFO  02:13:59,868 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:13:59,868 - Obradjuje se funkcija kita na liniji 23
INFO  02:13:59,868 - Obradjuje se funkcija main na liniji 26
INFO  02:13:59,868 - Deklarisana niz promenljiva x na liniji 26
INFO  02:13:59,868 - Deklarisana promenljiva i na liniji 26
INFO  02:13:59,868 - Deklarisana promenljiva l na liniji 26
INFO  02:13:59,868 - Deklarisana promenljiva c na liniji 26
INFO  02:13:59,868 - Deklarisana promenljiva rek na liniji 26
INFO  02:13:59,868 - Deklarisana promenljiva neka na liniji 26
INFO  02:13:59,868 - Pristupa se promenljivoj i na liniji 28
INFO  02:13:59,869 -  Deklarisanih promenljivih ima = 7
INFO  02:13:59,869 - ===================================
INFO  02:13:59,874 - neki kurac
INFO  02:13:59,874 - neko sranje2
INFO  02:13:59,874 - neko sranje
INFO  02:13:59,875 - neko sranje2
INFO  02:13:59,875 - neko sranje
INFO  02:13:59,875 - neko sranje
INFO  02:13:59,875 - bratskalovskiii
INFO  02:13:59,875 - matched
INFO  02:13:59,876 - Parsiranje uspesno zavrseno!
INFO  02:17:08,572 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:17:08,632 - #2 program
INFO  02:17:08,632 - #48 p
INFO  02:17:08,633 - #48 int
INFO  02:17:08,634 - #48 x
INFO  02:17:08,635 - #38 ;
INFO  02:17:08,636 - #48 int
INFO  02:17:08,637 - #48 y
INFO  02:17:08,637 - #38 ;
INFO  02:17:08,637 - #21 record
INFO  02:17:08,637 - #48 Rekord
INFO  02:17:08,637 - #46 {
INFO  02:17:08,638 - #48 int
INFO  02:17:08,639 - #48 d
INFO  02:17:08,639 - #40 ,
INFO  02:17:08,639 - #48 c
INFO  02:17:08,639 - #38 ;
INFO  02:17:08,639 - #47 }
INFO  02:17:08,640 - #5 class
INFO  02:17:08,641 - #48 Klasa
INFO  02:17:08,641 - #46 {
INFO  02:17:08,642 - #48 int
INFO  02:17:08,642 - #48 b
INFO  02:17:08,642 - #40 ,
INFO  02:17:08,642 - #48 a
INFO  02:17:08,642 - #40 ,
INFO  02:17:08,643 - #48 g
INFO  02:17:08,643 - #38 ;
INFO  02:17:08,643 - #46 {
INFO  02:17:08,643 - #47 }
INFO  02:17:08,643 - #47 }
INFO  02:17:08,644 - #46 {
INFO  02:17:08,644 - #48 int
INFO  02:17:08,645 - #48 nesto
INFO  02:17:08,645 - #42 (
INFO  02:17:08,645 - #43 )
INFO  02:17:08,646 - #46 {
INFO  02:17:08,646 - #13 print
INFO  02:17:08,647 - #42 (
INFO  02:17:08,647 - #51 c
INFO  02:17:08,647 - #43 )
INFO  02:17:08,648 - #38 ;
INFO  02:17:08,648 - #13 print
INFO  02:17:08,649 - #42 (
INFO  02:17:08,649 - #50 5
INFO  02:17:08,649 - #43 )
INFO  02:17:08,649 - #38 ;
INFO  02:17:08,649 - #15 return
INFO  02:17:08,649 - #50 2
INFO  02:17:08,649 - #38 ;
INFO  02:17:08,649 - #47 }
INFO  02:17:08,650 - #3 void
INFO  02:17:08,650 - #48 kita2
INFO  02:17:08,650 - #42 (
INFO  02:17:08,651 - #43 )
INFO  02:17:08,651 - #46 {
INFO  02:17:08,651 - #47 }
INFO  02:17:08,651 - #3 void
INFO  02:17:08,651 - #48 kita
INFO  02:17:08,651 - #42 (
INFO  02:17:08,651 - #43 )
INFO  02:17:08,651 - #46 {
INFO  02:17:08,651 - #47 }
INFO  02:17:08,651 - #3 void
INFO  02:17:08,652 - #48 main
INFO  02:17:08,652 - #42 (
INFO  02:17:08,652 - #43 )
INFO  02:17:08,652 - #48 int
INFO  02:17:08,652 - #48 x
INFO  02:17:08,652 - #44 [
INFO  02:17:08,652 - #45 ]
INFO  02:17:08,652 - #40 ,
INFO  02:17:08,653 - #48 i
INFO  02:17:08,653 - #40 ,
INFO  02:17:08,653 - #48 l
INFO  02:17:08,653 - #38 ;
INFO  02:17:08,653 - #48 char
INFO  02:17:08,653 - #48 c
INFO  02:17:08,653 - #38 ;
INFO  02:17:08,654 - #48 Rekord
INFO  02:17:08,654 - #48 rek
INFO  02:17:08,654 - #38 ;
INFO  02:17:08,654 - #48 Klasa
INFO  02:17:08,654 - #48 neka
INFO  02:17:08,654 - #38 ;
INFO  02:17:08,654 - #46 {
INFO  02:17:08,654 - #48 i
INFO  02:17:08,654 - #35 =
INFO  02:17:08,655 - #50 0
INFO  02:17:08,656 - #38 ;
INFO  02:17:08,656 - #9 if
INFO  02:17:08,656 - #42 (
INFO  02:17:08,657 - #50 64
INFO  02:17:08,657 - #31 <
INFO  02:17:08,657 - #50 65
INFO  02:17:08,658 - #34 ||
INFO  02:17:08,659 - #49 true
INFO  02:17:08,659 - #34 ||
INFO  02:17:08,660 - #50 5
INFO  02:17:08,660 - #27 ==
INFO  02:17:08,660 - #50 5
INFO  02:17:08,662 - #33 &&
INFO  02:17:08,662 - #50 2
INFO  02:17:08,663 - #27 ==
INFO  02:17:08,663 - #50 1
INFO  02:17:08,663 - #43 )
INFO  02:17:08,663 - #46 {
INFO  02:17:08,664 - #13 print
INFO  02:17:08,664 - #42 (
INFO  02:17:08,664 - #50 1
INFO  02:17:08,664 - #43 )
INFO  02:17:08,664 - #38 ;
INFO  02:17:08,664 - #47 }
INFO  02:17:08,664 - #7 else
INFO  02:17:08,664 - #46 {
INFO  02:17:08,665 - #13 print
INFO  02:17:08,665 - #42 (
INFO  02:17:08,665 - #50 2
INFO  02:17:08,665 - #43 )
INFO  02:17:08,665 - #38 ;
INFO  02:17:08,665 - #47 }
INFO  02:17:08,665 - #47 }
INFO  02:17:08,665 - #47 }
INFO  02:17:08,671 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             65
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:17:08,672 - ===================================
INFO  02:17:08,676 - Deklarisana promenljiva x na liniji 2
INFO  02:17:08,676 - Deklarisana promenljiva y na liniji 2
INFO  02:17:08,676 - Deklarisan rekord Rekord na liniji 3
INFO  02:17:08,676 - Deklarisana promenljiva d na liniji 5
INFO  02:17:08,676 - Deklarisana promenljiva c na liniji 5
INFO  02:17:08,676 - Deklarisana  klasa Klasa na liniji 7
INFO  02:17:08,676 - Deklarisana poljeb na liniji 9
INFO  02:17:08,676 - Deklarisana poljeb na liniji 9
INFO  02:17:08,677 - Deklarisana poljea na liniji 9
INFO  02:17:08,677 - Deklarisana poljea na liniji 9
INFO  02:17:08,677 - Deklarisana poljeg na liniji 9
INFO  02:17:08,677 - Deklarisana poljeg na liniji 9
INFO  02:17:08,677 - Obradjuje se funkcija nesto na liniji 16
INFO  02:17:08,677 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:17:08,677 - Obradjuje se funkcija kita na liniji 23
INFO  02:17:08,677 - Obradjuje se funkcija main na liniji 26
INFO  02:17:08,677 - Deklarisana niz promenljiva x na liniji 26
INFO  02:17:08,677 - Deklarisana promenljiva i na liniji 26
INFO  02:17:08,677 - Deklarisana promenljiva l na liniji 26
INFO  02:17:08,677 - Deklarisana promenljiva c na liniji 26
INFO  02:17:08,678 - Deklarisana promenljiva rek na liniji 26
INFO  02:17:08,678 - Deklarisana promenljiva neka na liniji 26
INFO  02:17:08,678 - Pristupa se promenljivoj i na liniji 28
INFO  02:17:08,679 -  Deklarisanih promenljivih ima = 7
INFO  02:17:08,679 - ===================================
INFO  02:17:08,684 - neki kurac
INFO  02:17:08,684 - neko sranje2
INFO  02:17:08,684 - neko sranje
INFO  02:17:08,685 - neko sranje2
INFO  02:17:08,685 - usao je nekada2
INFO  02:17:08,685 - neko sranje
INFO  02:17:08,685 - neko sranje
INFO  02:17:08,685 - bratskalovskiii
INFO  02:17:08,685 - matched
INFO  02:17:08,685 - Parsiranje uspesno zavrseno!
INFO  02:18:19,882 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:18:19,932 - #2 program
INFO  02:18:19,933 - #48 p
INFO  02:18:19,933 - #48 int
INFO  02:18:19,934 - #48 x
INFO  02:18:19,934 - #38 ;
INFO  02:18:19,935 - #48 int
INFO  02:18:19,936 - #48 y
INFO  02:18:19,936 - #38 ;
INFO  02:18:19,936 - #21 record
INFO  02:18:19,936 - #48 Rekord
INFO  02:18:19,936 - #46 {
INFO  02:18:19,937 - #48 int
INFO  02:18:19,937 - #48 d
INFO  02:18:19,937 - #40 ,
INFO  02:18:19,937 - #48 c
INFO  02:18:19,937 - #38 ;
INFO  02:18:19,938 - #47 }
INFO  02:18:19,938 - #5 class
INFO  02:18:19,938 - #48 Klasa
INFO  02:18:19,938 - #46 {
INFO  02:18:19,939 - #48 int
INFO  02:18:19,939 - #48 b
INFO  02:18:19,939 - #40 ,
INFO  02:18:19,940 - #48 a
INFO  02:18:19,940 - #40 ,
INFO  02:18:19,940 - #48 g
INFO  02:18:19,940 - #38 ;
INFO  02:18:19,940 - #46 {
INFO  02:18:19,940 - #47 }
INFO  02:18:19,940 - #47 }
INFO  02:18:19,941 - #46 {
INFO  02:18:19,941 - #48 int
INFO  02:18:19,942 - #48 nesto
INFO  02:18:19,942 - #42 (
INFO  02:18:19,942 - #43 )
INFO  02:18:19,943 - #46 {
INFO  02:18:19,943 - #13 print
INFO  02:18:19,944 - #42 (
INFO  02:18:19,944 - #51 c
INFO  02:18:19,944 - #43 )
INFO  02:18:19,946 - #38 ;
INFO  02:18:19,946 - #13 print
INFO  02:18:19,946 - #42 (
INFO  02:18:19,947 - #50 5
INFO  02:18:19,947 - #43 )
INFO  02:18:19,947 - #38 ;
INFO  02:18:19,947 - #15 return
INFO  02:18:19,947 - #50 2
INFO  02:18:19,947 - #38 ;
INFO  02:18:19,948 - #47 }
INFO  02:18:19,948 - #3 void
INFO  02:18:19,949 - #48 kita2
INFO  02:18:19,949 - #42 (
INFO  02:18:19,949 - #43 )
INFO  02:18:19,949 - #46 {
INFO  02:18:19,949 - #47 }
INFO  02:18:19,949 - #3 void
INFO  02:18:19,950 - #48 kita
INFO  02:18:19,950 - #42 (
INFO  02:18:19,950 - #43 )
INFO  02:18:19,950 - #46 {
INFO  02:18:19,950 - #47 }
INFO  02:18:19,950 - #3 void
INFO  02:18:19,950 - #48 main
INFO  02:18:19,950 - #42 (
INFO  02:18:19,950 - #43 )
INFO  02:18:19,950 - #48 int
INFO  02:18:19,950 - #48 x
INFO  02:18:19,950 - #44 [
INFO  02:18:19,950 - #45 ]
INFO  02:18:19,950 - #40 ,
INFO  02:18:19,951 - #48 i
INFO  02:18:19,951 - #40 ,
INFO  02:18:19,951 - #48 l
INFO  02:18:19,951 - #38 ;
INFO  02:18:19,951 - #48 char
INFO  02:18:19,951 - #48 c
INFO  02:18:19,951 - #38 ;
INFO  02:18:19,951 - #48 Rekord
INFO  02:18:19,951 - #48 rek
INFO  02:18:19,952 - #38 ;
INFO  02:18:19,952 - #48 Klasa
INFO  02:18:19,952 - #48 neka
INFO  02:18:19,952 - #38 ;
INFO  02:18:19,952 - #46 {
INFO  02:18:19,952 - #48 i
INFO  02:18:19,952 - #35 =
INFO  02:18:19,953 - #50 0
INFO  02:18:19,953 - #38 ;
INFO  02:18:19,954 - #9 if
INFO  02:18:19,954 - #42 (
INFO  02:18:19,954 - #50 64
INFO  02:18:19,954 - #31 <
INFO  02:18:19,954 - #50 65
INFO  02:18:19,955 - #34 ||
INFO  02:18:19,956 - #49 true
INFO  02:18:19,956 - #34 ||
INFO  02:18:19,956 - #50 5
INFO  02:18:19,956 - #27 ==
INFO  02:18:19,957 - #50 5
INFO  02:18:19,959 - #33 &&
INFO  02:18:19,959 - #50 2
INFO  02:18:19,960 - #27 ==
INFO  02:18:19,960 - #50 1
INFO  02:18:19,960 - #43 )
INFO  02:18:19,960 - #46 {
INFO  02:18:19,960 - #13 print
INFO  02:18:19,960 - #42 (
INFO  02:18:19,960 - #50 1
INFO  02:18:19,960 - #43 )
INFO  02:18:19,960 - #38 ;
INFO  02:18:19,961 - #47 }
INFO  02:18:19,961 - #7 else
INFO  02:18:19,961 - #46 {
INFO  02:18:19,961 - #13 print
INFO  02:18:19,961 - #42 (
INFO  02:18:19,962 - #50 2
INFO  02:18:19,962 - #43 )
INFO  02:18:19,962 - #38 ;
INFO  02:18:19,962 - #47 }
INFO  02:18:19,962 - #47 }
INFO  02:18:19,962 - #47 }
INFO  02:18:19,967 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             65
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:18:19,968 - ===================================
INFO  02:18:19,971 - Deklarisana promenljiva x na liniji 2
INFO  02:18:19,971 - Deklarisana promenljiva y na liniji 2
INFO  02:18:19,971 - Deklarisan rekord Rekord na liniji 3
INFO  02:18:19,972 - Deklarisana promenljiva d na liniji 5
INFO  02:18:19,972 - Deklarisana promenljiva c na liniji 5
INFO  02:18:19,972 - Deklarisana  klasa Klasa na liniji 7
INFO  02:18:19,972 - Deklarisana poljeb na liniji 9
INFO  02:18:19,972 - Deklarisana poljeb na liniji 9
INFO  02:18:19,972 - Deklarisana poljea na liniji 9
INFO  02:18:19,972 - Deklarisana poljea na liniji 9
INFO  02:18:19,972 - Deklarisana poljeg na liniji 9
INFO  02:18:19,972 - Deklarisana poljeg na liniji 9
INFO  02:18:19,972 - Obradjuje se funkcija nesto na liniji 16
INFO  02:18:19,972 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:18:19,972 - Obradjuje se funkcija kita na liniji 23
INFO  02:18:19,972 - Obradjuje se funkcija main na liniji 26
INFO  02:18:19,972 - Deklarisana niz promenljiva x na liniji 26
INFO  02:18:19,973 - Deklarisana promenljiva i na liniji 26
INFO  02:18:19,973 - Deklarisana promenljiva l na liniji 26
INFO  02:18:19,973 - Deklarisana promenljiva c na liniji 26
INFO  02:18:19,973 - Deklarisana promenljiva rek na liniji 26
INFO  02:18:19,973 - Deklarisana promenljiva neka na liniji 26
INFO  02:18:19,973 - Pristupa se promenljivoj i na liniji 28
INFO  02:18:19,974 -  Deklarisanih promenljivih ima = 7
INFO  02:18:19,974 - ===================================
INFO  02:18:19,979 - neki kurac
INFO  02:18:19,979 - neko sranje2
INFO  02:18:19,979 - neko sranje
INFO  02:18:19,979 - neko sranje2
INFO  02:18:19,979 - usao je nekada2
INFO  02:18:19,979 - neko sranje
INFO  02:18:19,979 - neko sranje
INFO  02:18:19,979 - bratskalovskiii
INFO  02:18:19,979 - matched
INFO  02:18:19,980 - Parsiranje uspesno zavrseno!
INFO  02:20:55,396 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:20:55,484 - #2 program
INFO  02:20:55,484 - #48 p
INFO  02:20:55,484 - #48 int
INFO  02:20:55,485 - #48 x
INFO  02:20:55,486 - #38 ;
INFO  02:20:55,488 - #48 int
INFO  02:20:55,489 - #48 y
INFO  02:20:55,489 - #38 ;
INFO  02:20:55,489 - #21 record
INFO  02:20:55,489 - #48 Rekord
INFO  02:20:55,489 - #46 {
INFO  02:20:55,491 - #48 int
INFO  02:20:55,491 - #48 d
INFO  02:20:55,492 - #40 ,
INFO  02:20:55,492 - #48 c
INFO  02:20:55,492 - #38 ;
INFO  02:20:55,492 - #47 }
INFO  02:20:55,492 - #5 class
INFO  02:20:55,494 - #48 Klasa
INFO  02:20:55,494 - #46 {
INFO  02:20:55,496 - #48 int
INFO  02:20:55,496 - #48 b
INFO  02:20:55,496 - #40 ,
INFO  02:20:55,496 - #48 a
INFO  02:20:55,496 - #40 ,
INFO  02:20:55,497 - #48 g
INFO  02:20:55,497 - #38 ;
INFO  02:20:55,497 - #46 {
INFO  02:20:55,497 - #47 }
INFO  02:20:55,498 - #47 }
INFO  02:20:55,498 - #46 {
INFO  02:20:55,499 - #48 int
INFO  02:20:55,500 - #48 nesto
INFO  02:20:55,500 - #42 (
INFO  02:20:55,500 - #43 )
INFO  02:20:55,501 - #46 {
INFO  02:20:55,501 - #13 print
INFO  02:20:55,503 - #42 (
INFO  02:20:55,504 - #51 c
INFO  02:20:55,504 - #43 )
INFO  02:20:55,505 - #38 ;
INFO  02:20:55,505 - #13 print
INFO  02:20:55,506 - #42 (
INFO  02:20:55,506 - #50 5
INFO  02:20:55,506 - #43 )
INFO  02:20:55,506 - #38 ;
INFO  02:20:55,506 - #15 return
INFO  02:20:55,506 - #50 2
INFO  02:20:55,507 - #38 ;
INFO  02:20:55,507 - #47 }
INFO  02:20:55,507 - #3 void
INFO  02:20:55,508 - #48 kita2
INFO  02:20:55,508 - #42 (
INFO  02:20:55,508 - #43 )
INFO  02:20:55,508 - #46 {
INFO  02:20:55,508 - #47 }
INFO  02:20:55,508 - #3 void
INFO  02:20:55,509 - #48 kita
INFO  02:20:55,509 - #42 (
INFO  02:20:55,509 - #43 )
INFO  02:20:55,509 - #46 {
INFO  02:20:55,509 - #47 }
INFO  02:20:55,509 - #3 void
INFO  02:20:55,509 - #48 main
INFO  02:20:55,509 - #42 (
INFO  02:20:55,509 - #43 )
INFO  02:20:55,510 - #48 int
INFO  02:20:55,510 - #48 x
INFO  02:20:55,510 - #44 [
INFO  02:20:55,510 - #45 ]
INFO  02:20:55,510 - #40 ,
INFO  02:20:55,511 - #48 i
INFO  02:20:55,511 - #40 ,
INFO  02:20:55,511 - #48 l
INFO  02:20:55,511 - #38 ;
INFO  02:20:55,511 - #48 char
INFO  02:20:55,511 - #48 c
INFO  02:20:55,511 - #38 ;
INFO  02:20:55,511 - #48 Rekord
INFO  02:20:55,512 - #48 rek
INFO  02:20:55,512 - #38 ;
INFO  02:20:55,512 - #48 Klasa
INFO  02:20:55,512 - #48 neka
INFO  02:20:55,512 - #38 ;
INFO  02:20:55,512 - #46 {
INFO  02:20:55,512 - #48 i
INFO  02:20:55,512 - #35 =
INFO  02:20:55,514 - #50 0
INFO  02:20:55,514 - #38 ;
INFO  02:20:55,515 - #9 if
INFO  02:20:55,515 - #42 (
INFO  02:20:55,515 - #50 64
INFO  02:20:55,515 - #31 <
INFO  02:20:55,515 - #50 65
INFO  02:20:55,516 - #34 ||
INFO  02:20:55,517 - #49 true
INFO  02:20:55,517 - #34 ||
INFO  02:20:55,518 - #50 5
INFO  02:20:55,518 - #27 ==
INFO  02:20:55,518 - #50 5
INFO  02:20:55,521 - #33 &&
INFO  02:20:55,521 - #50 2
INFO  02:20:55,522 - #27 ==
INFO  02:20:55,522 - #50 1
INFO  02:20:55,522 - #43 )
INFO  02:20:55,522 - #46 {
INFO  02:20:55,523 - #13 print
INFO  02:20:55,523 - #42 (
INFO  02:20:55,523 - #50 1
INFO  02:20:55,523 - #43 )
INFO  02:20:55,523 - #38 ;
INFO  02:20:55,523 - #47 }
INFO  02:20:55,523 - #7 else
INFO  02:20:55,523 - #46 {
INFO  02:20:55,524 - #13 print
INFO  02:20:55,524 - #42 (
INFO  02:20:55,524 - #50 2
INFO  02:20:55,524 - #43 )
INFO  02:20:55,525 - #38 ;
INFO  02:20:55,525 - #47 }
INFO  02:20:55,525 - #47 }
INFO  02:20:55,525 - #47 }
INFO  02:20:55,533 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             65
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:20:55,534 - ===================================
INFO  02:20:55,540 - Deklarisana promenljiva x na liniji 2
INFO  02:20:55,541 - Deklarisana promenljiva y na liniji 2
INFO  02:20:55,541 - Deklarisan rekord Rekord na liniji 3
INFO  02:20:55,541 - Deklarisana promenljiva d na liniji 5
INFO  02:20:55,541 - Deklarisana promenljiva c na liniji 5
INFO  02:20:55,541 - Deklarisana  klasa Klasa na liniji 7
INFO  02:20:55,541 - Deklarisana poljeb na liniji 9
INFO  02:20:55,541 - Deklarisana poljeb na liniji 9
INFO  02:20:55,541 - Deklarisana poljea na liniji 9
INFO  02:20:55,542 - Deklarisana poljea na liniji 9
INFO  02:20:55,542 - Deklarisana poljeg na liniji 9
INFO  02:20:55,542 - Deklarisana poljeg na liniji 9
INFO  02:20:55,542 - Obradjuje se funkcija nesto na liniji 16
INFO  02:20:55,542 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:20:55,542 - Obradjuje se funkcija kita na liniji 23
INFO  02:20:55,542 - Obradjuje se funkcija main na liniji 26
INFO  02:20:55,543 - Deklarisana niz promenljiva x na liniji 26
INFO  02:20:55,543 - Deklarisana promenljiva i na liniji 26
INFO  02:20:55,543 - Deklarisana promenljiva l na liniji 26
INFO  02:20:55,543 - Deklarisana promenljiva c na liniji 26
INFO  02:20:55,543 - Deklarisana promenljiva rek na liniji 26
INFO  02:20:55,543 - Deklarisana promenljiva neka na liniji 26
INFO  02:20:55,543 - Pristupa se promenljivoj i na liniji 28
INFO  02:20:55,544 -  Deklarisanih promenljivih ima = 7
INFO  02:20:55,544 - ===================================
INFO  02:20:55,554 - neki kurac
INFO  02:20:55,554 - neko sranje2
INFO  02:20:55,554 - neko sranje
INFO  02:20:55,554 - neko sranje2
INFO  02:20:55,555 - usao je nekada2
INFO  02:20:55,555 - neko sranje
INFO  02:20:55,555 - neko sranje
INFO  02:20:55,555 - bratskalovskiii
INFO  02:20:55,555 - matched
INFO  02:20:55,556 - Parsiranje uspesno zavrseno!
INFO  02:22:56,082 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:22:56,139 - #2 program
INFO  02:22:56,139 - #48 p
INFO  02:22:56,139 - #48 int
INFO  02:22:56,140 - #48 x
INFO  02:22:56,141 - #38 ;
INFO  02:22:56,142 - #48 int
INFO  02:22:56,142 - #48 y
INFO  02:22:56,142 - #38 ;
INFO  02:22:56,142 - #21 record
INFO  02:22:56,143 - #48 Rekord
INFO  02:22:56,143 - #46 {
INFO  02:22:56,143 - #48 int
INFO  02:22:56,144 - #48 d
INFO  02:22:56,144 - #40 ,
INFO  02:22:56,144 - #48 c
INFO  02:22:56,144 - #38 ;
INFO  02:22:56,145 - #47 }
INFO  02:22:56,145 - #5 class
INFO  02:22:56,145 - #48 Klasa
INFO  02:22:56,146 - #46 {
INFO  02:22:56,147 - #48 int
INFO  02:22:56,147 - #48 b
INFO  02:22:56,147 - #40 ,
INFO  02:22:56,147 - #48 a
INFO  02:22:56,147 - #40 ,
INFO  02:22:56,147 - #48 g
INFO  02:22:56,147 - #38 ;
INFO  02:22:56,147 - #46 {
INFO  02:22:56,148 - #47 }
INFO  02:22:56,148 - #47 }
INFO  02:22:56,148 - #46 {
INFO  02:22:56,149 - #48 int
INFO  02:22:56,149 - #48 nesto
INFO  02:22:56,150 - #42 (
INFO  02:22:56,150 - #43 )
INFO  02:22:56,150 - #46 {
INFO  02:22:56,150 - #13 print
INFO  02:22:56,152 - #42 (
INFO  02:22:56,152 - #51 c
INFO  02:22:56,152 - #43 )
INFO  02:22:56,153 - #38 ;
INFO  02:22:56,153 - #13 print
INFO  02:22:56,154 - #42 (
INFO  02:22:56,154 - #50 5
INFO  02:22:56,154 - #43 )
INFO  02:22:56,154 - #38 ;
INFO  02:22:56,154 - #15 return
INFO  02:22:56,154 - #50 2
INFO  02:22:56,154 - #38 ;
INFO  02:22:56,154 - #47 }
INFO  02:22:56,154 - #3 void
INFO  02:22:56,155 - #48 kita2
INFO  02:22:56,155 - #42 (
INFO  02:22:56,156 - #43 )
INFO  02:22:56,156 - #46 {
INFO  02:22:56,156 - #47 }
INFO  02:22:56,156 - #3 void
INFO  02:22:56,156 - #48 kita
INFO  02:22:56,156 - #42 (
INFO  02:22:56,156 - #43 )
INFO  02:22:56,156 - #46 {
INFO  02:22:56,156 - #47 }
INFO  02:22:56,156 - #3 void
INFO  02:22:56,157 - #48 main
INFO  02:22:56,157 - #42 (
INFO  02:22:56,157 - #43 )
INFO  02:22:56,157 - #48 int
INFO  02:22:56,157 - #48 x
INFO  02:22:56,157 - #44 [
INFO  02:22:56,157 - #45 ]
INFO  02:22:56,157 - #40 ,
INFO  02:22:56,157 - #48 i
INFO  02:22:56,158 - #40 ,
INFO  02:22:56,158 - #48 l
INFO  02:22:56,158 - #38 ;
INFO  02:22:56,158 - #48 char
INFO  02:22:56,158 - #48 c
INFO  02:22:56,158 - #38 ;
INFO  02:22:56,158 - #48 Rekord
INFO  02:22:56,158 - #48 rek
INFO  02:22:56,158 - #38 ;
INFO  02:22:56,158 - #48 Klasa
INFO  02:22:56,158 - #48 neka
INFO  02:22:56,158 - #38 ;
INFO  02:22:56,158 - #46 {
INFO  02:22:56,158 - #48 i
INFO  02:22:56,158 - #35 =
INFO  02:22:56,159 - #50 0
INFO  02:22:56,160 - #38 ;
INFO  02:22:56,160 - #9 if
INFO  02:22:56,160 - #42 (
INFO  02:22:56,161 - #50 64
INFO  02:22:56,161 - #31 <
INFO  02:22:56,161 - #50 65
INFO  02:22:56,162 - #34 ||
INFO  02:22:56,162 - #49 true
INFO  02:22:56,163 - #34 ||
INFO  02:22:56,163 - #50 5
INFO  02:22:56,163 - #27 ==
INFO  02:22:56,163 - #50 5
INFO  02:22:56,165 - #33 &&
INFO  02:22:56,165 - #50 2
INFO  02:22:56,166 - #27 ==
INFO  02:22:56,166 - #50 1
INFO  02:22:56,166 - #43 )
INFO  02:22:56,166 - #46 {
INFO  02:22:56,166 - #13 print
INFO  02:22:56,166 - #42 (
INFO  02:22:56,166 - #50 1
INFO  02:22:56,166 - #43 )
INFO  02:22:56,166 - #38 ;
INFO  02:22:56,166 - #47 }
INFO  02:22:56,167 - #7 else
INFO  02:22:56,167 - #46 {
INFO  02:22:56,167 - #13 print
INFO  02:22:56,168 - #42 (
INFO  02:22:56,168 - #50 2
INFO  02:22:56,168 - #43 )
INFO  02:22:56,168 - #38 ;
INFO  02:22:56,168 - #47 }
INFO  02:22:56,168 - #47 }
INFO  02:22:56,168 - #47 }
INFO  02:22:56,173 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             65
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:22:56,174 - ===================================
INFO  02:22:56,178 - Deklarisana promenljiva x na liniji 2
INFO  02:22:56,178 - Deklarisana promenljiva y na liniji 2
INFO  02:22:56,178 - Deklarisan rekord Rekord na liniji 3
INFO  02:22:56,178 - Deklarisana promenljiva d na liniji 5
INFO  02:22:56,178 - Deklarisana promenljiva c na liniji 5
INFO  02:22:56,178 - Deklarisana  klasa Klasa na liniji 7
INFO  02:22:56,178 - Deklarisana poljeb na liniji 9
INFO  02:22:56,179 - Deklarisana poljeb na liniji 9
INFO  02:22:56,179 - Deklarisana poljea na liniji 9
INFO  02:22:56,179 - Deklarisana poljea na liniji 9
INFO  02:22:56,179 - Deklarisana poljeg na liniji 9
INFO  02:22:56,179 - Deklarisana poljeg na liniji 9
INFO  02:22:56,179 - Obradjuje se funkcija nesto na liniji 16
INFO  02:22:56,179 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:22:56,179 - Obradjuje se funkcija kita na liniji 23
INFO  02:22:56,179 - Obradjuje se funkcija main na liniji 26
INFO  02:22:56,179 - Deklarisana niz promenljiva x na liniji 26
INFO  02:22:56,179 - Deklarisana promenljiva i na liniji 26
INFO  02:22:56,179 - Deklarisana promenljiva l na liniji 26
INFO  02:22:56,179 - Deklarisana promenljiva c na liniji 26
INFO  02:22:56,179 - Deklarisana promenljiva rek na liniji 26
INFO  02:22:56,179 - Deklarisana promenljiva neka na liniji 26
INFO  02:22:56,179 - Pristupa se promenljivoj i na liniji 28
INFO  02:22:56,180 -  Deklarisanih promenljivih ima = 7
INFO  02:22:56,180 - ===================================
INFO  02:22:56,185 - usao je nekada2
INFO  02:22:56,186 - neki kurac
INFO  02:22:56,186 - neko sranje2
INFO  02:22:56,186 - neko sranje
INFO  02:22:56,186 - usao je nekada2
INFO  02:22:56,186 - neko sranje2
INFO  02:22:56,186 - usao je nekada2
INFO  02:22:56,186 - neko sranje
INFO  02:22:56,186 - neko sranje
INFO  02:22:56,186 - bratskalovskiii
INFO  02:22:56,186 - matched
INFO  02:22:56,187 - Parsiranje uspesno zavrseno!
INFO  02:23:08,561 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:23:08,614 - #2 program
INFO  02:23:08,614 - #48 p
INFO  02:23:08,614 - #48 int
INFO  02:23:08,615 - #48 x
INFO  02:23:08,616 - #38 ;
INFO  02:23:08,617 - #48 int
INFO  02:23:08,617 - #48 y
INFO  02:23:08,618 - #38 ;
INFO  02:23:08,618 - #21 record
INFO  02:23:08,618 - #48 Rekord
INFO  02:23:08,618 - #46 {
INFO  02:23:08,618 - #48 int
INFO  02:23:08,619 - #48 d
INFO  02:23:08,619 - #40 ,
INFO  02:23:08,619 - #48 c
INFO  02:23:08,619 - #38 ;
INFO  02:23:08,619 - #47 }
INFO  02:23:08,620 - #5 class
INFO  02:23:08,620 - #48 Klasa
INFO  02:23:08,620 - #46 {
INFO  02:23:08,621 - #48 int
INFO  02:23:08,621 - #48 b
INFO  02:23:08,621 - #40 ,
INFO  02:23:08,622 - #48 a
INFO  02:23:08,622 - #40 ,
INFO  02:23:08,622 - #48 g
INFO  02:23:08,622 - #38 ;
INFO  02:23:08,622 - #46 {
INFO  02:23:08,622 - #47 }
INFO  02:23:08,622 - #47 }
INFO  02:23:08,623 - #46 {
INFO  02:23:08,623 - #48 int
INFO  02:23:08,624 - #48 nesto
INFO  02:23:08,624 - #42 (
INFO  02:23:08,624 - #43 )
INFO  02:23:08,625 - #46 {
INFO  02:23:08,625 - #13 print
INFO  02:23:08,626 - #42 (
INFO  02:23:08,626 - #51 c
INFO  02:23:08,626 - #43 )
INFO  02:23:08,627 - #38 ;
INFO  02:23:08,627 - #13 print
INFO  02:23:08,627 - #42 (
INFO  02:23:08,628 - #50 5
INFO  02:23:08,628 - #43 )
INFO  02:23:08,628 - #38 ;
INFO  02:23:08,628 - #15 return
INFO  02:23:08,628 - #50 2
INFO  02:23:08,628 - #38 ;
INFO  02:23:08,628 - #47 }
INFO  02:23:08,628 - #3 void
INFO  02:23:08,629 - #48 kita2
INFO  02:23:08,629 - #42 (
INFO  02:23:08,630 - #43 )
INFO  02:23:08,630 - #46 {
INFO  02:23:08,630 - #47 }
INFO  02:23:08,630 - #3 void
INFO  02:23:08,630 - #48 kita
INFO  02:23:08,630 - #42 (
INFO  02:23:08,630 - #43 )
INFO  02:23:08,630 - #46 {
INFO  02:23:08,630 - #47 }
INFO  02:23:08,630 - #3 void
INFO  02:23:08,630 - #48 main
INFO  02:23:08,630 - #42 (
INFO  02:23:08,631 - #43 )
INFO  02:23:08,631 - #48 int
INFO  02:23:08,631 - #48 x
INFO  02:23:08,631 - #44 [
INFO  02:23:08,631 - #45 ]
INFO  02:23:08,631 - #40 ,
INFO  02:23:08,631 - #48 i
INFO  02:23:08,631 - #40 ,
INFO  02:23:08,631 - #48 l
INFO  02:23:08,631 - #38 ;
INFO  02:23:08,632 - #48 char
INFO  02:23:08,632 - #48 c
INFO  02:23:08,632 - #38 ;
INFO  02:23:08,632 - #48 Rekord
INFO  02:23:08,632 - #48 rek
INFO  02:23:08,632 - #38 ;
INFO  02:23:08,632 - #48 Klasa
INFO  02:23:08,632 - #48 neka
INFO  02:23:08,632 - #38 ;
INFO  02:23:08,632 - #46 {
INFO  02:23:08,632 - #48 i
INFO  02:23:08,632 - #35 =
INFO  02:23:08,633 - #50 0
INFO  02:23:08,634 - #38 ;
INFO  02:23:08,634 - #9 if
INFO  02:23:08,634 - #42 (
INFO  02:23:08,635 - #50 64
INFO  02:23:08,635 - #31 <
INFO  02:23:08,635 - #50 65
INFO  02:23:08,635 - #34 ||
INFO  02:23:08,636 - #49 true
INFO  02:23:08,636 - #34 ||
INFO  02:23:08,636 - #50 5
INFO  02:23:08,636 - #27 ==
INFO  02:23:08,636 - #50 5
INFO  02:23:08,639 - #33 &&
INFO  02:23:08,639 - #50 2
INFO  02:23:08,639 - #27 ==
INFO  02:23:08,639 - #50 1
INFO  02:23:08,639 - #43 )
INFO  02:23:08,640 - #46 {
INFO  02:23:08,640 - #13 print
INFO  02:23:08,640 - #42 (
INFO  02:23:08,640 - #50 1
INFO  02:23:08,640 - #43 )
INFO  02:23:08,640 - #38 ;
INFO  02:23:08,640 - #47 }
INFO  02:23:08,640 - #7 else
INFO  02:23:08,640 - #46 {
INFO  02:23:08,641 - #13 print
INFO  02:23:08,641 - #42 (
INFO  02:23:08,641 - #50 2
INFO  02:23:08,641 - #43 )
INFO  02:23:08,641 - #38 ;
INFO  02:23:08,641 - #47 }
INFO  02:23:08,641 - #47 }
INFO  02:23:08,641 - #47 }
INFO  02:23:08,647 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             65
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:23:08,648 - ===================================
INFO  02:23:08,651 - Deklarisana promenljiva x na liniji 2
INFO  02:23:08,652 - Deklarisana promenljiva y na liniji 2
INFO  02:23:08,652 - Deklarisan rekord Rekord na liniji 3
INFO  02:23:08,652 - Deklarisana promenljiva d na liniji 5
INFO  02:23:08,652 - Deklarisana promenljiva c na liniji 5
INFO  02:23:08,652 - Deklarisana  klasa Klasa na liniji 7
INFO  02:23:08,652 - Deklarisana poljeb na liniji 9
INFO  02:23:08,652 - Deklarisana poljeb na liniji 9
INFO  02:23:08,652 - Deklarisana poljea na liniji 9
INFO  02:23:08,652 - Deklarisana poljea na liniji 9
INFO  02:23:08,652 - Deklarisana poljeg na liniji 9
INFO  02:23:08,652 - Deklarisana poljeg na liniji 9
INFO  02:23:08,652 - Obradjuje se funkcija nesto na liniji 16
INFO  02:23:08,652 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:23:08,652 - Obradjuje se funkcija kita na liniji 23
INFO  02:23:08,653 - Obradjuje se funkcija main na liniji 26
INFO  02:23:08,653 - Deklarisana niz promenljiva x na liniji 26
INFO  02:23:08,653 - Deklarisana promenljiva i na liniji 26
INFO  02:23:08,653 - Deklarisana promenljiva l na liniji 26
INFO  02:23:08,653 - Deklarisana promenljiva c na liniji 26
INFO  02:23:08,653 - Deklarisana promenljiva rek na liniji 26
INFO  02:23:08,653 - Deklarisana promenljiva neka na liniji 26
INFO  02:23:08,653 - Pristupa se promenljivoj i na liniji 28
INFO  02:23:08,654 -  Deklarisanih promenljivih ima = 7
INFO  02:23:08,654 - ===================================
INFO  02:23:08,659 - usao je nekada4
INFO  02:23:08,659 - neki kurac
INFO  02:23:08,659 - neko sranje2
INFO  02:23:08,659 - neko sranje
INFO  02:23:08,659 - usao je nekada4
INFO  02:23:08,659 - neko sranje2
INFO  02:23:08,659 - usao je nekada2
INFO  02:23:08,659 - neko sranje
INFO  02:23:08,659 - neko sranje
INFO  02:23:08,659 - bratskalovskiii
INFO  02:23:08,659 - matched
INFO  02:23:08,660 - Parsiranje uspesno zavrseno!
INFO  02:26:55,062 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:26:55,117 - #2 program
INFO  02:26:55,117 - #48 p
INFO  02:26:55,117 - #48 int
INFO  02:26:55,118 - #48 x
INFO  02:26:55,119 - #38 ;
INFO  02:26:55,120 - #48 int
INFO  02:26:55,121 - #48 y
INFO  02:26:55,121 - #38 ;
INFO  02:26:55,121 - #21 record
INFO  02:26:55,121 - #48 Rekord
INFO  02:26:55,121 - #46 {
INFO  02:26:55,122 - #48 int
INFO  02:26:55,122 - #48 d
INFO  02:26:55,123 - #40 ,
INFO  02:26:55,123 - #48 c
INFO  02:26:55,123 - #38 ;
INFO  02:26:55,123 - #47 }
INFO  02:26:55,123 - #5 class
INFO  02:26:55,124 - #48 Klasa
INFO  02:26:55,124 - #46 {
INFO  02:26:55,125 - #48 int
INFO  02:26:55,125 - #48 b
INFO  02:26:55,125 - #40 ,
INFO  02:26:55,126 - #48 a
INFO  02:26:55,126 - #40 ,
INFO  02:26:55,126 - #48 g
INFO  02:26:55,126 - #38 ;
INFO  02:26:55,126 - #46 {
INFO  02:26:55,126 - #47 }
INFO  02:26:55,126 - #47 }
INFO  02:26:55,128 - #46 {
INFO  02:26:55,128 - #48 int
INFO  02:26:55,129 - #48 nesto
INFO  02:26:55,129 - #42 (
INFO  02:26:55,129 - #43 )
INFO  02:26:55,130 - #46 {
INFO  02:26:55,130 - #13 print
INFO  02:26:55,131 - #42 (
INFO  02:26:55,131 - #51 c
INFO  02:26:55,132 - #43 )
INFO  02:26:55,132 - #38 ;
INFO  02:26:55,133 - #13 print
INFO  02:26:55,133 - #42 (
INFO  02:26:55,133 - #50 5
INFO  02:26:55,133 - #43 )
INFO  02:26:55,133 - #38 ;
INFO  02:26:55,133 - #15 return
INFO  02:26:55,134 - #50 2
INFO  02:26:55,134 - #38 ;
INFO  02:26:55,134 - #47 }
INFO  02:26:55,134 - #3 void
INFO  02:26:55,135 - #48 kita2
INFO  02:26:55,135 - #42 (
INFO  02:26:55,135 - #43 )
INFO  02:26:55,135 - #46 {
INFO  02:26:55,135 - #47 }
INFO  02:26:55,135 - #3 void
INFO  02:26:55,135 - #48 kita
INFO  02:26:55,135 - #42 (
INFO  02:26:55,136 - #43 )
INFO  02:26:55,136 - #46 {
INFO  02:26:55,136 - #47 }
INFO  02:26:55,136 - #3 void
INFO  02:26:55,136 - #48 main
INFO  02:26:55,136 - #42 (
INFO  02:26:55,136 - #43 )
INFO  02:26:55,136 - #48 int
INFO  02:26:55,136 - #48 x
INFO  02:26:55,136 - #44 [
INFO  02:26:55,136 - #45 ]
INFO  02:26:55,136 - #40 ,
INFO  02:26:55,137 - #48 i
INFO  02:26:55,137 - #40 ,
INFO  02:26:55,137 - #48 l
INFO  02:26:55,137 - #38 ;
INFO  02:26:55,137 - #48 char
INFO  02:26:55,137 - #48 c
INFO  02:26:55,137 - #38 ;
INFO  02:26:55,137 - #48 Rekord
INFO  02:26:55,138 - #48 rek
INFO  02:26:55,138 - #38 ;
INFO  02:26:55,138 - #48 Klasa
INFO  02:26:55,138 - #48 neka
INFO  02:26:55,138 - #38 ;
INFO  02:26:55,138 - #46 {
INFO  02:26:55,138 - #48 i
INFO  02:26:55,138 - #35 =
INFO  02:26:55,139 - #50 0
INFO  02:26:55,140 - #38 ;
INFO  02:26:55,140 - #9 if
INFO  02:26:55,140 - #42 (
INFO  02:26:55,141 - #50 64
INFO  02:26:55,141 - #31 <
INFO  02:26:55,141 - #50 65
INFO  02:26:55,142 - #34 ||
INFO  02:26:55,142 - #49 true
INFO  02:26:55,142 - #34 ||
INFO  02:26:55,143 - #50 5
INFO  02:26:55,143 - #27 ==
INFO  02:26:55,143 - #50 5
INFO  02:26:55,146 - #33 &&
INFO  02:26:55,146 - #50 2
INFO  02:26:55,146 - #27 ==
INFO  02:26:55,147 - #50 2
INFO  02:26:55,147 - #43 )
INFO  02:26:55,147 - #46 {
INFO  02:26:55,147 - #13 print
INFO  02:26:55,147 - #42 (
INFO  02:26:55,147 - #50 1
INFO  02:26:55,147 - #43 )
INFO  02:26:55,147 - #38 ;
INFO  02:26:55,147 - #47 }
INFO  02:26:55,147 - #7 else
INFO  02:26:55,148 - #46 {
INFO  02:26:55,148 - #13 print
INFO  02:26:55,148 - #42 (
INFO  02:26:55,148 - #50 2
INFO  02:26:55,148 - #43 )
INFO  02:26:55,148 - #38 ;
INFO  02:26:55,149 - #47 }
INFO  02:26:55,149 - #47 }
INFO  02:26:55,149 - #47 }
INFO  02:26:55,155 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             65
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:26:55,155 - ===================================
INFO  02:26:55,159 - Deklarisana promenljiva x na liniji 2
INFO  02:26:55,160 - Deklarisana promenljiva y na liniji 2
INFO  02:26:55,160 - Deklarisan rekord Rekord na liniji 3
INFO  02:26:55,160 - Deklarisana promenljiva d na liniji 5
INFO  02:26:55,160 - Deklarisana promenljiva c na liniji 5
INFO  02:26:55,160 - Deklarisana  klasa Klasa na liniji 7
INFO  02:26:55,161 - Deklarisana poljeb na liniji 9
INFO  02:26:55,161 - Deklarisana poljeb na liniji 9
INFO  02:26:55,161 - Deklarisana poljea na liniji 9
INFO  02:26:55,161 - Deklarisana poljea na liniji 9
INFO  02:26:55,161 - Deklarisana poljeg na liniji 9
INFO  02:26:55,161 - Deklarisana poljeg na liniji 9
INFO  02:26:55,161 - Obradjuje se funkcija nesto na liniji 16
INFO  02:26:55,161 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:26:55,161 - Obradjuje se funkcija kita na liniji 23
INFO  02:26:55,161 - Obradjuje se funkcija main na liniji 26
INFO  02:26:55,162 - Deklarisana niz promenljiva x na liniji 26
INFO  02:26:55,162 - Deklarisana promenljiva i na liniji 26
INFO  02:26:55,162 - Deklarisana promenljiva l na liniji 26
INFO  02:26:55,162 - Deklarisana promenljiva c na liniji 26
INFO  02:26:55,162 - Deklarisana promenljiva rek na liniji 26
INFO  02:26:55,162 - Deklarisana promenljiva neka na liniji 26
INFO  02:26:55,162 - Pristupa se promenljivoj i na liniji 28
INFO  02:26:55,163 -  Deklarisanih promenljivih ima = 7
INFO  02:26:55,163 - ===================================
INFO  02:26:55,168 - usao je nekada4
INFO  02:26:55,168 - neki kurac
INFO  02:26:55,168 - neko sranje2
INFO  02:26:55,168 - neko sranje
INFO  02:26:55,169 - usao je nekada4
INFO  02:26:55,169 - neko sranje2
INFO  02:26:55,169 - usao je nekada2
INFO  02:26:55,169 - neko sranje
INFO  02:26:55,169 - neko sranje
INFO  02:26:55,169 - bratskalovskiii
INFO  02:26:55,169 - matched
INFO  02:26:55,170 - Parsiranje uspesno zavrseno!
INFO  02:28:43,607 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:28:43,659 - #2 program
INFO  02:28:43,659 - #48 p
INFO  02:28:43,659 - #48 int
INFO  02:28:43,660 - #48 x
INFO  02:28:43,661 - #38 ;
INFO  02:28:43,663 - #48 int
INFO  02:28:43,664 - #48 y
INFO  02:28:43,664 - #38 ;
INFO  02:28:43,664 - #21 record
INFO  02:28:43,664 - #48 Rekord
INFO  02:28:43,664 - #46 {
INFO  02:28:43,665 - #48 int
INFO  02:28:43,666 - #48 d
INFO  02:28:43,666 - #40 ,
INFO  02:28:43,666 - #48 c
INFO  02:28:43,666 - #38 ;
INFO  02:28:43,666 - #47 }
INFO  02:28:43,667 - #5 class
INFO  02:28:43,667 - #48 Klasa
INFO  02:28:43,667 - #46 {
INFO  02:28:43,669 - #48 int
INFO  02:28:43,669 - #48 b
INFO  02:28:43,669 - #40 ,
INFO  02:28:43,669 - #48 a
INFO  02:28:43,669 - #40 ,
INFO  02:28:43,669 - #48 g
INFO  02:28:43,669 - #38 ;
INFO  02:28:43,669 - #46 {
INFO  02:28:43,670 - #47 }
INFO  02:28:43,670 - #47 }
INFO  02:28:43,670 - #46 {
INFO  02:28:43,671 - #48 int
INFO  02:28:43,671 - #48 nesto
INFO  02:28:43,671 - #42 (
INFO  02:28:43,672 - #43 )
INFO  02:28:43,672 - #46 {
INFO  02:28:43,672 - #13 print
INFO  02:28:43,673 - #42 (
INFO  02:28:43,673 - #51 c
INFO  02:28:43,674 - #43 )
INFO  02:28:43,674 - #38 ;
INFO  02:28:43,674 - #13 print
INFO  02:28:43,675 - #42 (
INFO  02:28:43,675 - #50 5
INFO  02:28:43,675 - #43 )
INFO  02:28:43,675 - #38 ;
INFO  02:28:43,675 - #15 return
INFO  02:28:43,675 - #50 2
INFO  02:28:43,675 - #38 ;
INFO  02:28:43,675 - #47 }
INFO  02:28:43,675 - #3 void
INFO  02:28:43,676 - #48 kita2
INFO  02:28:43,676 - #42 (
INFO  02:28:43,676 - #43 )
INFO  02:28:43,677 - #46 {
INFO  02:28:43,677 - #47 }
INFO  02:28:43,677 - #3 void
INFO  02:28:43,677 - #48 kita
INFO  02:28:43,677 - #42 (
INFO  02:28:43,677 - #43 )
INFO  02:28:43,677 - #46 {
INFO  02:28:43,677 - #47 }
INFO  02:28:43,677 - #3 void
INFO  02:28:43,677 - #48 main
INFO  02:28:43,677 - #42 (
INFO  02:28:43,677 - #43 )
INFO  02:28:43,677 - #48 int
INFO  02:28:43,678 - #48 x
INFO  02:28:43,678 - #44 [
INFO  02:28:43,678 - #45 ]
INFO  02:28:43,678 - #40 ,
INFO  02:28:43,678 - #48 i
INFO  02:28:43,678 - #40 ,
INFO  02:28:43,678 - #48 l
INFO  02:28:43,678 - #38 ;
INFO  02:28:43,679 - #48 char
INFO  02:28:43,679 - #48 c
INFO  02:28:43,679 - #38 ;
INFO  02:28:43,679 - #48 Rekord
INFO  02:28:43,679 - #48 rek
INFO  02:28:43,679 - #38 ;
INFO  02:28:43,679 - #48 Klasa
INFO  02:28:43,679 - #48 neka
INFO  02:28:43,679 - #38 ;
INFO  02:28:43,679 - #46 {
INFO  02:28:43,679 - #48 i
INFO  02:28:43,679 - #35 =
INFO  02:28:43,681 - #50 0
INFO  02:28:43,681 - #38 ;
INFO  02:28:43,682 - #9 if
INFO  02:28:43,682 - #42 (
INFO  02:28:43,682 - #50 64
INFO  02:28:43,682 - #31 <
INFO  02:28:43,682 - #50 65
INFO  02:28:43,683 - #34 ||
INFO  02:28:43,683 - #49 true
INFO  02:28:43,684 - #34 ||
INFO  02:28:43,684 - #50 5
INFO  02:28:43,684 - #27 ==
INFO  02:28:43,684 - #50 5
INFO  02:28:43,687 - #33 &&
INFO  02:28:43,687 - #50 2
INFO  02:28:43,688 - #27 ==
INFO  02:28:43,688 - #50 2
INFO  02:28:43,688 - #43 )
INFO  02:28:43,688 - #46 {
INFO  02:28:43,688 - #13 print
INFO  02:28:43,688 - #42 (
INFO  02:28:43,688 - #50 1
INFO  02:28:43,688 - #43 )
INFO  02:28:43,688 - #38 ;
INFO  02:28:43,688 - #47 }
INFO  02:28:43,688 - #7 else
INFO  02:28:43,689 - #46 {
INFO  02:28:43,689 - #13 print
INFO  02:28:43,689 - #42 (
INFO  02:28:43,689 - #50 2
INFO  02:28:43,689 - #43 )
INFO  02:28:43,689 - #38 ;
INFO  02:28:43,689 - #47 }
INFO  02:28:43,690 - #47 }
INFO  02:28:43,690 - #47 }
INFO  02:28:43,697 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             65
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:28:43,698 - ===================================
INFO  02:28:43,702 - Deklarisana promenljiva x na liniji 2
INFO  02:28:43,702 - Deklarisana promenljiva y na liniji 2
INFO  02:28:43,702 - Deklarisan rekord Rekord na liniji 3
INFO  02:28:43,702 - Deklarisana promenljiva d na liniji 5
INFO  02:28:43,702 - Deklarisana promenljiva c na liniji 5
INFO  02:28:43,702 - Deklarisana  klasa Klasa na liniji 7
INFO  02:28:43,702 - Deklarisana poljeb na liniji 9
INFO  02:28:43,702 - Deklarisana poljeb na liniji 9
INFO  02:28:43,702 - Deklarisana poljea na liniji 9
INFO  02:28:43,702 - Deklarisana poljea na liniji 9
INFO  02:28:43,702 - Deklarisana poljeg na liniji 9
INFO  02:28:43,702 - Deklarisana poljeg na liniji 9
INFO  02:28:43,703 - Obradjuje se funkcija nesto na liniji 16
INFO  02:28:43,703 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:28:43,703 - Obradjuje se funkcija kita na liniji 23
INFO  02:28:43,703 - Obradjuje se funkcija main na liniji 26
INFO  02:28:43,703 - Deklarisana niz promenljiva x na liniji 26
INFO  02:28:43,703 - Deklarisana promenljiva i na liniji 26
INFO  02:28:43,703 - Deklarisana promenljiva l na liniji 26
INFO  02:28:43,703 - Deklarisana promenljiva c na liniji 26
INFO  02:28:43,703 - Deklarisana promenljiva rek na liniji 26
INFO  02:28:43,703 - Deklarisana promenljiva neka na liniji 26
INFO  02:28:43,703 - Pristupa se promenljivoj i na liniji 28
INFO  02:28:43,704 -  Deklarisanih promenljivih ima = 7
INFO  02:28:43,704 - ===================================
INFO  02:28:43,709 - usao je nekada4
INFO  02:28:43,709 - neki kurac
INFO  02:28:43,709 - neko sranje2
INFO  02:28:43,709 - neko sranje
INFO  02:28:43,710 - usao je nekada4
INFO  02:28:43,710 - neko sranje2
INFO  02:28:43,710 - usao je nekada2
INFO  02:28:43,710 - neko sranje
INFO  02:28:43,710 - neko sranje
INFO  02:28:43,710 - bratskalovskiii
INFO  02:28:43,710 - matched
INFO  02:28:43,711 - Parsiranje uspesno zavrseno!
INFO  02:28:59,905 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:28:59,956 - #2 program
INFO  02:28:59,956 - #48 p
INFO  02:28:59,956 - #48 int
INFO  02:28:59,957 - #48 x
INFO  02:28:59,958 - #38 ;
INFO  02:28:59,959 - #48 int
INFO  02:28:59,959 - #48 y
INFO  02:28:59,959 - #38 ;
INFO  02:28:59,960 - #21 record
INFO  02:28:59,960 - #48 Rekord
INFO  02:28:59,960 - #46 {
INFO  02:28:59,960 - #48 int
INFO  02:28:59,961 - #48 d
INFO  02:28:59,961 - #40 ,
INFO  02:28:59,961 - #48 c
INFO  02:28:59,961 - #38 ;
INFO  02:28:59,961 - #47 }
INFO  02:28:59,962 - #5 class
INFO  02:28:59,962 - #48 Klasa
INFO  02:28:59,962 - #46 {
INFO  02:28:59,963 - #48 int
INFO  02:28:59,963 - #48 b
INFO  02:28:59,964 - #40 ,
INFO  02:28:59,964 - #48 a
INFO  02:28:59,964 - #40 ,
INFO  02:28:59,964 - #48 g
INFO  02:28:59,964 - #38 ;
INFO  02:28:59,964 - #46 {
INFO  02:28:59,964 - #47 }
INFO  02:28:59,965 - #47 }
INFO  02:28:59,965 - #46 {
INFO  02:28:59,966 - #48 int
INFO  02:28:59,966 - #48 nesto
INFO  02:28:59,966 - #42 (
INFO  02:28:59,966 - #43 )
INFO  02:28:59,967 - #46 {
INFO  02:28:59,967 - #13 print
INFO  02:28:59,968 - #42 (
INFO  02:28:59,968 - #51 c
INFO  02:28:59,968 - #43 )
INFO  02:28:59,969 - #38 ;
INFO  02:28:59,969 - #13 print
INFO  02:28:59,969 - #42 (
INFO  02:28:59,969 - #50 5
INFO  02:28:59,969 - #43 )
INFO  02:28:59,970 - #38 ;
INFO  02:28:59,970 - #15 return
INFO  02:28:59,970 - #50 2
INFO  02:28:59,970 - #38 ;
INFO  02:28:59,970 - #47 }
INFO  02:28:59,970 - #3 void
INFO  02:28:59,971 - #48 kita2
INFO  02:28:59,972 - #42 (
INFO  02:28:59,972 - #43 )
INFO  02:28:59,972 - #46 {
INFO  02:28:59,972 - #47 }
INFO  02:28:59,972 - #3 void
INFO  02:28:59,972 - #48 kita
INFO  02:28:59,973 - #42 (
INFO  02:28:59,973 - #43 )
INFO  02:28:59,973 - #46 {
INFO  02:28:59,973 - #47 }
INFO  02:28:59,973 - #3 void
INFO  02:28:59,973 - #48 main
INFO  02:28:59,973 - #42 (
INFO  02:28:59,973 - #43 )
INFO  02:28:59,973 - #48 int
INFO  02:28:59,973 - #48 x
INFO  02:28:59,973 - #44 [
INFO  02:28:59,973 - #45 ]
INFO  02:28:59,973 - #40 ,
INFO  02:28:59,974 - #48 i
INFO  02:28:59,974 - #40 ,
INFO  02:28:59,974 - #48 l
INFO  02:28:59,974 - #38 ;
INFO  02:28:59,974 - #48 char
INFO  02:28:59,974 - #48 c
INFO  02:28:59,974 - #38 ;
INFO  02:28:59,974 - #48 Rekord
INFO  02:28:59,974 - #48 rek
INFO  02:28:59,975 - #38 ;
INFO  02:28:59,975 - #48 Klasa
INFO  02:28:59,975 - #48 neka
INFO  02:28:59,975 - #38 ;
INFO  02:28:59,975 - #46 {
INFO  02:28:59,975 - #48 i
INFO  02:28:59,975 - #35 =
INFO  02:28:59,976 - #50 0
INFO  02:28:59,976 - #38 ;
INFO  02:28:59,977 - #9 if
INFO  02:28:59,977 - #42 (
INFO  02:28:59,977 - #50 64
INFO  02:28:59,977 - #31 <
INFO  02:28:59,977 - #50 65
INFO  02:28:59,978 - #34 ||
INFO  02:28:59,979 - #49 true
INFO  02:28:59,979 - #34 ||
INFO  02:28:59,980 - #50 5
INFO  02:28:59,980 - #27 ==
INFO  02:28:59,980 - #50 5
INFO  02:28:59,982 - #33 &&
INFO  02:28:59,982 - #50 2
INFO  02:28:59,982 - #27 ==
INFO  02:28:59,983 - #50 2
INFO  02:28:59,983 - #43 )
INFO  02:28:59,983 - #46 {
INFO  02:28:59,983 - #13 print
INFO  02:28:59,983 - #42 (
INFO  02:28:59,983 - #50 1
INFO  02:28:59,983 - #43 )
INFO  02:28:59,983 - #38 ;
INFO  02:28:59,983 - #47 }
INFO  02:28:59,983 - #7 else
INFO  02:28:59,983 - #46 {
INFO  02:28:59,984 - #13 print
INFO  02:28:59,984 - #42 (
INFO  02:28:59,984 - #50 2
INFO  02:28:59,984 - #43 )
INFO  02:28:59,984 - #38 ;
INFO  02:28:59,984 - #47 }
INFO  02:28:59,984 - #47 }
INFO  02:28:59,985 - #47 }
INFO  02:28:59,991 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             65
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:28:59,992 - ===================================
INFO  02:28:59,996 - Deklarisana promenljiva x na liniji 2
INFO  02:28:59,996 - Deklarisana promenljiva y na liniji 2
INFO  02:28:59,996 - Deklarisan rekord Rekord na liniji 3
INFO  02:28:59,996 - Deklarisana promenljiva d na liniji 5
INFO  02:28:59,996 - Deklarisana promenljiva c na liniji 5
INFO  02:28:59,996 - Deklarisana  klasa Klasa na liniji 7
INFO  02:28:59,996 - Deklarisana poljeb na liniji 9
INFO  02:28:59,996 - Deklarisana poljeb na liniji 9
INFO  02:28:59,996 - Deklarisana poljea na liniji 9
INFO  02:28:59,997 - Deklarisana poljea na liniji 9
INFO  02:28:59,997 - Deklarisana poljeg na liniji 9
INFO  02:28:59,997 - Deklarisana poljeg na liniji 9
INFO  02:28:59,997 - Obradjuje se funkcija nesto na liniji 16
INFO  02:28:59,997 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:28:59,997 - Obradjuje se funkcija kita na liniji 23
INFO  02:28:59,997 - Obradjuje se funkcija main na liniji 26
INFO  02:28:59,997 - Deklarisana niz promenljiva x na liniji 26
INFO  02:28:59,997 - Deklarisana promenljiva i na liniji 26
INFO  02:28:59,997 - Deklarisana promenljiva l na liniji 26
INFO  02:28:59,997 - Deklarisana promenljiva c na liniji 26
INFO  02:28:59,997 - Deklarisana promenljiva rek na liniji 26
INFO  02:28:59,998 - Deklarisana promenljiva neka na liniji 26
INFO  02:28:59,998 - Pristupa se promenljivoj i na liniji 28
INFO  02:28:59,998 -  Deklarisanih promenljivih ima = 7
INFO  02:28:59,999 - ===================================
INFO  02:29:00,003 - usao je nekada4
INFO  02:29:00,004 - neki kurac
INFO  02:29:00,004 - neko sranje2
INFO  02:29:00,004 - neko sranje
INFO  02:29:00,004 - usao je nekada4
INFO  02:29:00,004 - neko sranje2
INFO  02:29:00,004 - usao je nekada2
INFO  02:29:00,004 - neko sranje
INFO  02:29:00,004 - neko sranje
INFO  02:29:00,004 - bratskalovskiii
INFO  02:29:00,004 - matched
INFO  02:29:00,005 - Parsiranje uspesno zavrseno!
INFO  02:29:13,712 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:29:13,766 - #2 program
INFO  02:29:13,766 - #48 p
INFO  02:29:13,766 - #48 int
INFO  02:29:13,767 - #48 x
INFO  02:29:13,768 - #38 ;
INFO  02:29:13,769 - #48 int
INFO  02:29:13,769 - #48 y
INFO  02:29:13,769 - #38 ;
INFO  02:29:13,769 - #21 record
INFO  02:29:13,770 - #48 Rekord
INFO  02:29:13,770 - #46 {
INFO  02:29:13,770 - #48 int
INFO  02:29:13,771 - #48 d
INFO  02:29:13,771 - #40 ,
INFO  02:29:13,771 - #48 c
INFO  02:29:13,771 - #38 ;
INFO  02:29:13,771 - #47 }
INFO  02:29:13,771 - #5 class
INFO  02:29:13,772 - #48 Klasa
INFO  02:29:13,772 - #46 {
INFO  02:29:13,773 - #48 int
INFO  02:29:13,773 - #48 b
INFO  02:29:13,773 - #40 ,
INFO  02:29:13,773 - #48 a
INFO  02:29:13,773 - #40 ,
INFO  02:29:13,774 - #48 g
INFO  02:29:13,774 - #38 ;
INFO  02:29:13,774 - #46 {
INFO  02:29:13,774 - #47 }
INFO  02:29:13,774 - #47 }
INFO  02:29:13,775 - #46 {
INFO  02:29:13,775 - #48 int
INFO  02:29:13,776 - #48 nesto
INFO  02:29:13,776 - #42 (
INFO  02:29:13,776 - #43 )
INFO  02:29:13,777 - #46 {
INFO  02:29:13,777 - #13 print
INFO  02:29:13,778 - #42 (
INFO  02:29:13,779 - #51 c
INFO  02:29:13,779 - #43 )
INFO  02:29:13,779 - #38 ;
INFO  02:29:13,779 - #13 print
INFO  02:29:13,780 - #42 (
INFO  02:29:13,780 - #50 5
INFO  02:29:13,780 - #43 )
INFO  02:29:13,780 - #38 ;
INFO  02:29:13,780 - #15 return
INFO  02:29:13,780 - #50 2
INFO  02:29:13,780 - #38 ;
INFO  02:29:13,780 - #47 }
INFO  02:29:13,780 - #3 void
INFO  02:29:13,781 - #48 kita2
INFO  02:29:13,782 - #42 (
INFO  02:29:13,782 - #43 )
INFO  02:29:13,782 - #46 {
INFO  02:29:13,782 - #47 }
INFO  02:29:13,782 - #3 void
INFO  02:29:13,782 - #48 kita
INFO  02:29:13,782 - #42 (
INFO  02:29:13,782 - #43 )
INFO  02:29:13,782 - #46 {
INFO  02:29:13,782 - #47 }
INFO  02:29:13,782 - #3 void
INFO  02:29:13,782 - #48 main
INFO  02:29:13,782 - #42 (
INFO  02:29:13,783 - #43 )
INFO  02:29:13,783 - #48 int
INFO  02:29:13,783 - #48 x
INFO  02:29:13,783 - #44 [
INFO  02:29:13,783 - #45 ]
INFO  02:29:13,783 - #40 ,
INFO  02:29:13,784 - #48 i
INFO  02:29:13,784 - #40 ,
INFO  02:29:13,784 - #48 l
INFO  02:29:13,784 - #38 ;
INFO  02:29:13,784 - #48 char
INFO  02:29:13,784 - #48 c
INFO  02:29:13,784 - #38 ;
INFO  02:29:13,784 - #48 Rekord
INFO  02:29:13,784 - #48 rek
INFO  02:29:13,784 - #38 ;
INFO  02:29:13,784 - #48 Klasa
INFO  02:29:13,784 - #48 neka
INFO  02:29:13,784 - #38 ;
INFO  02:29:13,784 - #46 {
INFO  02:29:13,784 - #48 i
INFO  02:29:13,785 - #35 =
INFO  02:29:13,786 - #50 0
INFO  02:29:13,786 - #38 ;
INFO  02:29:13,786 - #9 if
INFO  02:29:13,786 - #42 (
INFO  02:29:13,787 - #50 64
INFO  02:29:13,787 - #31 <
INFO  02:29:13,787 - #50 65
INFO  02:29:13,788 - #34 ||
INFO  02:29:13,788 - #49 true
INFO  02:29:13,788 - #34 ||
INFO  02:29:13,789 - #50 5
INFO  02:29:13,789 - #27 ==
INFO  02:29:13,789 - #50 5
INFO  02:29:13,791 - #33 &&
INFO  02:29:13,791 - #50 2
INFO  02:29:13,792 - #27 ==
INFO  02:29:13,792 - #50 2
INFO  02:29:13,792 - #43 )
INFO  02:29:13,792 - #46 {
INFO  02:29:13,792 - #13 print
INFO  02:29:13,792 - #42 (
INFO  02:29:13,792 - #50 1
INFO  02:29:13,792 - #43 )
INFO  02:29:13,793 - #38 ;
INFO  02:29:13,793 - #47 }
INFO  02:29:13,793 - #7 else
INFO  02:29:13,793 - #46 {
INFO  02:29:13,793 - #13 print
INFO  02:29:13,793 - #42 (
INFO  02:29:13,793 - #50 2
INFO  02:29:13,793 - #43 )
INFO  02:29:13,794 - #38 ;
INFO  02:29:13,794 - #47 }
INFO  02:29:13,794 - #47 }
INFO  02:29:13,794 - #47 }
INFO  02:29:13,800 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             65
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:29:13,801 - ===================================
INFO  02:29:13,805 - Deklarisana promenljiva x na liniji 2
INFO  02:29:13,805 - Deklarisana promenljiva y na liniji 2
INFO  02:29:13,805 - Deklarisan rekord Rekord na liniji 3
INFO  02:29:13,805 - Deklarisana promenljiva d na liniji 5
INFO  02:29:13,805 - Deklarisana promenljiva c na liniji 5
INFO  02:29:13,805 - Deklarisana  klasa Klasa na liniji 7
INFO  02:29:13,805 - Deklarisana poljeb na liniji 9
INFO  02:29:13,805 - Deklarisana poljeb na liniji 9
INFO  02:29:13,806 - Deklarisana poljea na liniji 9
INFO  02:29:13,806 - Deklarisana poljea na liniji 9
INFO  02:29:13,806 - Deklarisana poljeg na liniji 9
INFO  02:29:13,806 - Deklarisana poljeg na liniji 9
INFO  02:29:13,806 - Obradjuje se funkcija nesto na liniji 16
INFO  02:29:13,806 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:29:13,806 - Obradjuje se funkcija kita na liniji 23
INFO  02:29:13,806 - Obradjuje se funkcija main na liniji 26
INFO  02:29:13,806 - Deklarisana niz promenljiva x na liniji 26
INFO  02:29:13,807 - Deklarisana promenljiva i na liniji 26
INFO  02:29:13,807 - Deklarisana promenljiva l na liniji 26
INFO  02:29:13,807 - Deklarisana promenljiva c na liniji 26
INFO  02:29:13,807 - Deklarisana promenljiva rek na liniji 26
INFO  02:29:13,807 - Deklarisana promenljiva neka na liniji 26
INFO  02:29:13,807 - Pristupa se promenljivoj i na liniji 28
INFO  02:29:13,808 -  Deklarisanih promenljivih ima = 7
INFO  02:29:13,808 - ===================================
INFO  02:29:13,813 - usao je nekada4
INFO  02:29:13,813 - neki kurac
INFO  02:29:13,813 - neko sranje2
INFO  02:29:13,813 - neko sranje
INFO  02:29:13,813 - usao je nekada4
INFO  02:29:13,813 - neko sranje2
INFO  02:29:13,813 - usao je nekada2
INFO  02:29:13,813 - neko sranje
INFO  02:29:13,813 - neko sranje
INFO  02:29:13,813 - bratskalovskiii
INFO  02:29:13,813 - matched
INFO  02:29:13,814 - Parsiranje uspesno zavrseno!
INFO  02:30:23,725 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:30:23,780 - #2 program
INFO  02:30:23,781 - #48 p
INFO  02:30:23,781 - #48 int
INFO  02:30:23,782 - #48 x
INFO  02:30:23,783 - #38 ;
INFO  02:30:23,784 - #48 int
INFO  02:30:23,785 - #48 y
INFO  02:30:23,785 - #38 ;
INFO  02:30:23,785 - #21 record
INFO  02:30:23,785 - #48 Rekord
INFO  02:30:23,785 - #46 {
INFO  02:30:23,786 - #48 int
INFO  02:30:23,787 - #48 d
INFO  02:30:23,787 - #40 ,
INFO  02:30:23,787 - #48 c
INFO  02:30:23,787 - #38 ;
INFO  02:30:23,787 - #47 }
INFO  02:30:23,787 - #5 class
INFO  02:30:23,788 - #48 Klasa
INFO  02:30:23,788 - #46 {
INFO  02:30:23,789 - #48 int
INFO  02:30:23,790 - #48 b
INFO  02:30:23,790 - #40 ,
INFO  02:30:23,790 - #48 a
INFO  02:30:23,790 - #40 ,
INFO  02:30:23,790 - #48 g
INFO  02:30:23,791 - #38 ;
INFO  02:30:23,791 - #46 {
INFO  02:30:23,791 - #47 }
INFO  02:30:23,791 - #47 }
INFO  02:30:23,791 - #46 {
INFO  02:30:23,792 - #48 int
INFO  02:30:23,792 - #48 nesto
INFO  02:30:23,792 - #42 (
INFO  02:30:23,793 - #43 )
INFO  02:30:23,793 - #46 {
INFO  02:30:23,793 - #13 print
INFO  02:30:23,795 - #42 (
INFO  02:30:23,795 - #51 c
INFO  02:30:23,795 - #43 )
INFO  02:30:23,795 - #38 ;
INFO  02:30:23,796 - #13 print
INFO  02:30:23,796 - #42 (
INFO  02:30:23,796 - #50 5
INFO  02:30:23,796 - #43 )
INFO  02:30:23,796 - #38 ;
INFO  02:30:23,796 - #15 return
INFO  02:30:23,796 - #50 2
INFO  02:30:23,796 - #38 ;
INFO  02:30:23,797 - #47 }
INFO  02:30:23,797 - #3 void
INFO  02:30:23,798 - #48 kita2
INFO  02:30:23,798 - #42 (
INFO  02:30:23,798 - #43 )
INFO  02:30:23,798 - #46 {
INFO  02:30:23,798 - #47 }
INFO  02:30:23,799 - #3 void
INFO  02:30:23,799 - #48 kita
INFO  02:30:23,799 - #42 (
INFO  02:30:23,799 - #43 )
INFO  02:30:23,799 - #46 {
INFO  02:30:23,799 - #47 }
INFO  02:30:23,799 - #3 void
INFO  02:30:23,799 - #48 main
INFO  02:30:23,799 - #42 (
INFO  02:30:23,799 - #43 )
INFO  02:30:23,799 - #48 int
INFO  02:30:23,799 - #48 x
INFO  02:30:23,799 - #44 [
INFO  02:30:23,799 - #45 ]
INFO  02:30:23,799 - #40 ,
INFO  02:30:23,800 - #48 i
INFO  02:30:23,800 - #40 ,
INFO  02:30:23,801 - #48 l
INFO  02:30:23,801 - #38 ;
INFO  02:30:23,801 - #48 char
INFO  02:30:23,801 - #48 c
INFO  02:30:23,801 - #38 ;
INFO  02:30:23,801 - #48 Rekord
INFO  02:30:23,802 - #48 rek
INFO  02:30:23,802 - #38 ;
INFO  02:30:23,802 - #48 Klasa
INFO  02:30:23,802 - #48 neka
INFO  02:30:23,802 - #38 ;
INFO  02:30:23,802 - #46 {
INFO  02:30:23,802 - #48 i
INFO  02:30:23,802 - #35 =
INFO  02:30:23,803 - #50 0
INFO  02:30:23,804 - #38 ;
INFO  02:30:23,804 - #9 if
INFO  02:30:23,804 - #42 (
INFO  02:30:23,805 - #50 64
INFO  02:30:23,805 - #31 <
INFO  02:30:23,805 - #50 65
INFO  02:30:23,806 - #34 ||
INFO  02:30:23,806 - #49 true
INFO  02:30:23,806 - #34 ||
INFO  02:30:23,807 - #50 5
INFO  02:30:23,807 - #27 ==
INFO  02:30:23,807 - #50 5
INFO  02:30:23,809 - #33 &&
INFO  02:30:23,809 - #50 2
INFO  02:30:23,809 - #27 ==
INFO  02:30:23,810 - #50 2
INFO  02:30:23,810 - #43 )
INFO  02:30:23,810 - #46 {
INFO  02:30:23,810 - #13 print
INFO  02:30:23,810 - #42 (
INFO  02:30:23,810 - #50 1
INFO  02:30:23,810 - #43 )
INFO  02:30:23,810 - #38 ;
INFO  02:30:23,810 - #47 }
INFO  02:30:23,810 - #7 else
INFO  02:30:23,810 - #46 {
INFO  02:30:23,811 - #13 print
INFO  02:30:23,811 - #42 (
INFO  02:30:23,811 - #50 2
INFO  02:30:23,811 - #43 )
INFO  02:30:23,811 - #38 ;
INFO  02:30:23,811 - #47 }
INFO  02:30:23,812 - #47 }
INFO  02:30:23,812 - #47 }
INFO  02:30:23,818 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             65
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:30:23,819 - ===================================
INFO  02:30:23,822 - Deklarisana promenljiva x na liniji 2
INFO  02:30:23,823 - Deklarisana promenljiva y na liniji 2
INFO  02:30:23,823 - Deklarisan rekord Rekord na liniji 3
INFO  02:30:23,823 - Deklarisana promenljiva d na liniji 5
INFO  02:30:23,823 - Deklarisana promenljiva c na liniji 5
INFO  02:30:23,823 - Deklarisana  klasa Klasa na liniji 7
INFO  02:30:23,823 - Deklarisana poljeb na liniji 9
INFO  02:30:23,823 - Deklarisana poljeb na liniji 9
INFO  02:30:23,823 - Deklarisana poljea na liniji 9
INFO  02:30:23,824 - Deklarisana poljea na liniji 9
INFO  02:30:23,824 - Deklarisana poljeg na liniji 9
INFO  02:30:23,824 - Deklarisana poljeg na liniji 9
INFO  02:30:23,824 - Obradjuje se funkcija nesto na liniji 16
INFO  02:30:23,824 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:30:23,824 - Obradjuje se funkcija kita na liniji 23
INFO  02:30:23,824 - Obradjuje se funkcija main na liniji 26
INFO  02:30:23,824 - Deklarisana niz promenljiva x na liniji 26
INFO  02:30:23,824 - Deklarisana promenljiva i na liniji 26
INFO  02:30:23,824 - Deklarisana promenljiva l na liniji 26
INFO  02:30:23,824 - Deklarisana promenljiva c na liniji 26
INFO  02:30:23,824 - Deklarisana promenljiva rek na liniji 26
INFO  02:30:23,825 - Deklarisana promenljiva neka na liniji 26
INFO  02:30:23,825 - Pristupa se promenljivoj i na liniji 28
INFO  02:30:23,825 -  Deklarisanih promenljivih ima = 7
INFO  02:30:23,825 - ===================================
INFO  02:30:23,830 - usao je nekada4
INFO  02:30:23,830 - neko sranje2
INFO  02:30:23,830 - neko sranje
INFO  02:30:23,831 - usao je nekada4
INFO  02:30:23,831 - neko sranje2
INFO  02:30:23,831 - usao je nekada2
INFO  02:30:23,831 - neko sranje
INFO  02:30:23,831 - neko sranje
INFO  02:30:23,831 - bratskalovskiii
INFO  02:30:23,831 - matched
INFO  02:30:23,831 - Parsiranje uspesno zavrseno!
INFO  02:30:44,157 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:30:44,215 - #2 program
INFO  02:30:44,215 - #48 p
INFO  02:30:44,215 - #48 int
INFO  02:30:44,216 - #48 x
INFO  02:30:44,217 - #38 ;
INFO  02:30:44,218 - #48 int
INFO  02:30:44,218 - #48 y
INFO  02:30:44,218 - #38 ;
INFO  02:30:44,218 - #21 record
INFO  02:30:44,218 - #48 Rekord
INFO  02:30:44,219 - #46 {
INFO  02:30:44,219 - #48 int
INFO  02:30:44,220 - #48 d
INFO  02:30:44,220 - #40 ,
INFO  02:30:44,220 - #48 c
INFO  02:30:44,220 - #38 ;
INFO  02:30:44,221 - #47 }
INFO  02:30:44,221 - #5 class
INFO  02:30:44,222 - #48 Klasa
INFO  02:30:44,222 - #46 {
INFO  02:30:44,223 - #48 int
INFO  02:30:44,223 - #48 b
INFO  02:30:44,223 - #40 ,
INFO  02:30:44,223 - #48 a
INFO  02:30:44,223 - #40 ,
INFO  02:30:44,223 - #48 g
INFO  02:30:44,223 - #38 ;
INFO  02:30:44,223 - #46 {
INFO  02:30:44,224 - #47 }
INFO  02:30:44,224 - #47 }
INFO  02:30:44,225 - #46 {
INFO  02:30:44,226 - #48 int
INFO  02:30:44,226 - #48 nesto
INFO  02:30:44,226 - #42 (
INFO  02:30:44,226 - #43 )
INFO  02:30:44,227 - #46 {
INFO  02:30:44,227 - #13 print
INFO  02:30:44,228 - #42 (
INFO  02:30:44,228 - #51 c
INFO  02:30:44,228 - #43 )
INFO  02:30:44,229 - #38 ;
INFO  02:30:44,229 - #13 print
INFO  02:30:44,229 - #42 (
INFO  02:30:44,230 - #50 5
INFO  02:30:44,230 - #43 )
INFO  02:30:44,230 - #38 ;
INFO  02:30:44,230 - #15 return
INFO  02:30:44,230 - #50 2
INFO  02:30:44,230 - #38 ;
INFO  02:30:44,230 - #47 }
INFO  02:30:44,230 - #3 void
INFO  02:30:44,231 - #48 kita2
INFO  02:30:44,231 - #42 (
INFO  02:30:44,231 - #43 )
INFO  02:30:44,231 - #46 {
INFO  02:30:44,231 - #47 }
INFO  02:30:44,231 - #3 void
INFO  02:30:44,231 - #48 kita
INFO  02:30:44,231 - #42 (
INFO  02:30:44,232 - #43 )
INFO  02:30:44,232 - #46 {
INFO  02:30:44,232 - #47 }
INFO  02:30:44,232 - #3 void
INFO  02:30:44,232 - #48 main
INFO  02:30:44,232 - #42 (
INFO  02:30:44,232 - #43 )
INFO  02:30:44,232 - #48 int
INFO  02:30:44,232 - #48 x
INFO  02:30:44,232 - #44 [
INFO  02:30:44,232 - #45 ]
INFO  02:30:44,232 - #40 ,
INFO  02:30:44,233 - #48 i
INFO  02:30:44,233 - #40 ,
INFO  02:30:44,233 - #48 l
INFO  02:30:44,233 - #38 ;
INFO  02:30:44,233 - #48 char
INFO  02:30:44,233 - #48 c
INFO  02:30:44,233 - #38 ;
INFO  02:30:44,234 - #48 Rekord
INFO  02:30:44,234 - #48 rek
INFO  02:30:44,234 - #38 ;
INFO  02:30:44,234 - #48 Klasa
INFO  02:30:44,234 - #48 neka
INFO  02:30:44,234 - #38 ;
INFO  02:30:44,234 - #46 {
INFO  02:30:44,234 - #48 i
INFO  02:30:44,234 - #35 =
INFO  02:30:44,235 - #50 0
INFO  02:30:44,235 - #38 ;
INFO  02:30:44,236 - #9 if
INFO  02:30:44,236 - #42 (
INFO  02:30:44,236 - #50 64
INFO  02:30:44,236 - #31 <
INFO  02:30:44,236 - #50 65
INFO  02:30:44,237 - #34 ||
INFO  02:30:44,238 - #49 false
INFO  02:30:44,238 - #34 ||
INFO  02:30:44,238 - #50 5
INFO  02:30:44,238 - #27 ==
INFO  02:30:44,239 - #50 4
INFO  02:30:44,241 - #33 &&
INFO  02:30:44,242 - #50 2
INFO  02:30:44,242 - #27 ==
INFO  02:30:44,242 - #50 2
INFO  02:30:44,243 - #43 )
INFO  02:30:44,243 - #46 {
INFO  02:30:44,243 - #13 print
INFO  02:30:44,243 - #42 (
INFO  02:30:44,243 - #50 1
INFO  02:30:44,243 - #43 )
INFO  02:30:44,243 - #38 ;
INFO  02:30:44,243 - #47 }
INFO  02:30:44,243 - #7 else
INFO  02:30:44,243 - #46 {
INFO  02:30:44,244 - #13 print
INFO  02:30:44,244 - #42 (
INFO  02:30:44,244 - #50 2
INFO  02:30:44,244 - #43 )
INFO  02:30:44,244 - #38 ;
INFO  02:30:44,244 - #47 }
INFO  02:30:44,244 - #47 }
INFO  02:30:44,244 - #47 }
INFO  02:30:44,250 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             65
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           false
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           4
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:30:44,250 - ===================================
INFO  02:30:44,254 - Deklarisana promenljiva x na liniji 2
INFO  02:30:44,254 - Deklarisana promenljiva y na liniji 2
INFO  02:30:44,254 - Deklarisan rekord Rekord na liniji 3
INFO  02:30:44,254 - Deklarisana promenljiva d na liniji 5
INFO  02:30:44,254 - Deklarisana promenljiva c na liniji 5
INFO  02:30:44,254 - Deklarisana  klasa Klasa na liniji 7
INFO  02:30:44,254 - Deklarisana poljeb na liniji 9
INFO  02:30:44,254 - Deklarisana poljeb na liniji 9
INFO  02:30:44,254 - Deklarisana poljea na liniji 9
INFO  02:30:44,255 - Deklarisana poljea na liniji 9
INFO  02:30:44,255 - Deklarisana poljeg na liniji 9
INFO  02:30:44,255 - Deklarisana poljeg na liniji 9
INFO  02:30:44,255 - Obradjuje se funkcija nesto na liniji 16
INFO  02:30:44,255 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:30:44,255 - Obradjuje se funkcija kita na liniji 23
INFO  02:30:44,255 - Obradjuje se funkcija main na liniji 26
INFO  02:30:44,255 - Deklarisana niz promenljiva x na liniji 26
INFO  02:30:44,255 - Deklarisana promenljiva i na liniji 26
INFO  02:30:44,255 - Deklarisana promenljiva l na liniji 26
INFO  02:30:44,255 - Deklarisana promenljiva c na liniji 26
INFO  02:30:44,255 - Deklarisana promenljiva rek na liniji 26
INFO  02:30:44,255 - Deklarisana promenljiva neka na liniji 26
INFO  02:30:44,255 - Pristupa se promenljivoj i na liniji 28
INFO  02:30:44,256 -  Deklarisanih promenljivih ima = 7
INFO  02:30:44,256 - ===================================
INFO  02:30:44,262 - usao je nekada4
INFO  02:30:44,262 - neko sranje2
INFO  02:30:44,262 - neko sranje
INFO  02:30:44,262 - usao je nekada4
INFO  02:30:44,262 - neko sranje2
INFO  02:30:44,262 - neko sranje
INFO  02:30:44,262 - usao je nekada2
INFO  02:30:44,262 - neko sranje
INFO  02:30:44,262 - neko sranje
INFO  02:30:44,262 - bratskalovskiii
INFO  02:30:44,263 - matched
INFO  02:30:44,263 - Parsiranje uspesno zavrseno!
INFO  02:31:00,888 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:31:00,947 - #2 program
INFO  02:31:00,947 - #48 p
INFO  02:31:00,947 - #48 int
INFO  02:31:00,948 - #48 x
INFO  02:31:00,948 - #38 ;
INFO  02:31:00,950 - #48 int
INFO  02:31:00,950 - #48 y
INFO  02:31:00,951 - #38 ;
INFO  02:31:00,951 - #21 record
INFO  02:31:00,951 - #48 Rekord
INFO  02:31:00,951 - #46 {
INFO  02:31:00,952 - #48 int
INFO  02:31:00,952 - #48 d
INFO  02:31:00,953 - #40 ,
INFO  02:31:00,953 - #48 c
INFO  02:31:00,953 - #38 ;
INFO  02:31:00,953 - #47 }
INFO  02:31:00,953 - #5 class
INFO  02:31:00,954 - #48 Klasa
INFO  02:31:00,954 - #46 {
INFO  02:31:00,955 - #48 int
INFO  02:31:00,955 - #48 b
INFO  02:31:00,955 - #40 ,
INFO  02:31:00,955 - #48 a
INFO  02:31:00,956 - #40 ,
INFO  02:31:00,956 - #48 g
INFO  02:31:00,956 - #38 ;
INFO  02:31:00,956 - #46 {
INFO  02:31:00,956 - #47 }
INFO  02:31:00,956 - #47 }
INFO  02:31:00,957 - #46 {
INFO  02:31:00,957 - #48 int
INFO  02:31:00,958 - #48 nesto
INFO  02:31:00,958 - #42 (
INFO  02:31:00,958 - #43 )
INFO  02:31:00,958 - #46 {
INFO  02:31:00,958 - #13 print
INFO  02:31:00,959 - #42 (
INFO  02:31:00,960 - #51 c
INFO  02:31:00,960 - #43 )
INFO  02:31:00,961 - #38 ;
INFO  02:31:00,961 - #13 print
INFO  02:31:00,961 - #42 (
INFO  02:31:00,961 - #50 5
INFO  02:31:00,961 - #43 )
INFO  02:31:00,961 - #38 ;
INFO  02:31:00,961 - #15 return
INFO  02:31:00,961 - #50 2
INFO  02:31:00,961 - #38 ;
INFO  02:31:00,962 - #47 }
INFO  02:31:00,962 - #3 void
INFO  02:31:00,962 - #48 kita2
INFO  02:31:00,963 - #42 (
INFO  02:31:00,963 - #43 )
INFO  02:31:00,963 - #46 {
INFO  02:31:00,963 - #47 }
INFO  02:31:00,963 - #3 void
INFO  02:31:00,963 - #48 kita
INFO  02:31:00,963 - #42 (
INFO  02:31:00,963 - #43 )
INFO  02:31:00,963 - #46 {
INFO  02:31:00,963 - #47 }
INFO  02:31:00,963 - #3 void
INFO  02:31:00,963 - #48 main
INFO  02:31:00,964 - #42 (
INFO  02:31:00,964 - #43 )
INFO  02:31:00,964 - #48 int
INFO  02:31:00,964 - #48 x
INFO  02:31:00,964 - #44 [
INFO  02:31:00,964 - #45 ]
INFO  02:31:00,964 - #40 ,
INFO  02:31:00,964 - #48 i
INFO  02:31:00,964 - #40 ,
INFO  02:31:00,964 - #48 l
INFO  02:31:00,965 - #38 ;
INFO  02:31:00,965 - #48 char
INFO  02:31:00,965 - #48 c
INFO  02:31:00,965 - #38 ;
INFO  02:31:00,965 - #48 Rekord
INFO  02:31:00,965 - #48 rek
INFO  02:31:00,965 - #38 ;
INFO  02:31:00,965 - #48 Klasa
INFO  02:31:00,965 - #48 neka
INFO  02:31:00,965 - #38 ;
INFO  02:31:00,965 - #46 {
INFO  02:31:00,965 - #48 i
INFO  02:31:00,965 - #35 =
INFO  02:31:00,967 - #50 0
INFO  02:31:00,968 - #38 ;
INFO  02:31:00,968 - #9 if
INFO  02:31:00,968 - #42 (
INFO  02:31:00,968 - #50 64
INFO  02:31:00,969 - #31 <
INFO  02:31:00,969 - #50 63
INFO  02:31:00,969 - #34 ||
INFO  02:31:00,970 - #49 false
INFO  02:31:00,970 - #34 ||
INFO  02:31:00,970 - #50 5
INFO  02:31:00,971 - #27 ==
INFO  02:31:00,971 - #50 4
INFO  02:31:00,973 - #33 &&
INFO  02:31:00,973 - #50 2
INFO  02:31:00,973 - #27 ==
INFO  02:31:00,973 - #50 2
INFO  02:31:00,974 - #43 )
INFO  02:31:00,974 - #46 {
INFO  02:31:00,974 - #13 print
INFO  02:31:00,974 - #42 (
INFO  02:31:00,974 - #50 1
INFO  02:31:00,974 - #43 )
INFO  02:31:00,974 - #38 ;
INFO  02:31:00,974 - #47 }
INFO  02:31:00,974 - #7 else
INFO  02:31:00,974 - #46 {
INFO  02:31:00,975 - #13 print
INFO  02:31:00,975 - #42 (
INFO  02:31:00,975 - #50 2
INFO  02:31:00,975 - #43 )
INFO  02:31:00,975 - #38 ;
INFO  02:31:00,975 - #47 }
INFO  02:31:00,975 - #47 }
INFO  02:31:00,975 - #47 }
INFO  02:31:00,981 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             63
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           false
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           4
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:31:00,981 - ===================================
INFO  02:31:00,985 - Deklarisana promenljiva x na liniji 2
INFO  02:31:00,985 - Deklarisana promenljiva y na liniji 2
INFO  02:31:00,986 - Deklarisan rekord Rekord na liniji 3
INFO  02:31:00,986 - Deklarisana promenljiva d na liniji 5
INFO  02:31:00,986 - Deklarisana promenljiva c na liniji 5
INFO  02:31:00,986 - Deklarisana  klasa Klasa na liniji 7
INFO  02:31:00,986 - Deklarisana poljeb na liniji 9
INFO  02:31:00,986 - Deklarisana poljeb na liniji 9
INFO  02:31:00,986 - Deklarisana poljea na liniji 9
INFO  02:31:00,986 - Deklarisana poljea na liniji 9
INFO  02:31:00,986 - Deklarisana poljeg na liniji 9
INFO  02:31:00,986 - Deklarisana poljeg na liniji 9
INFO  02:31:00,986 - Obradjuje se funkcija nesto na liniji 16
INFO  02:31:00,986 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:31:00,987 - Obradjuje se funkcija kita na liniji 23
INFO  02:31:00,987 - Obradjuje se funkcija main na liniji 26
INFO  02:31:00,987 - Deklarisana niz promenljiva x na liniji 26
INFO  02:31:00,987 - Deklarisana promenljiva i na liniji 26
INFO  02:31:00,987 - Deklarisana promenljiva l na liniji 26
INFO  02:31:00,987 - Deklarisana promenljiva c na liniji 26
INFO  02:31:00,987 - Deklarisana promenljiva rek na liniji 26
INFO  02:31:00,987 - Deklarisana promenljiva neka na liniji 26
INFO  02:31:00,987 - Pristupa se promenljivoj i na liniji 28
INFO  02:31:00,988 -  Deklarisanih promenljivih ima = 7
INFO  02:31:00,988 - ===================================
INFO  02:31:00,993 - usao je nekada4
INFO  02:31:00,993 - neko sranje2
INFO  02:31:00,993 - neko sranje
INFO  02:31:00,993 - usao je nekada4
INFO  02:31:00,993 - neko sranje2
INFO  02:31:00,993 - neko sranje
INFO  02:31:00,993 - usao je nekada2
INFO  02:31:00,993 - neko sranje
INFO  02:31:00,993 - neko sranje
INFO  02:31:00,993 - bratskalovskiii
INFO  02:31:00,993 - matched
INFO  02:31:00,994 - Parsiranje uspesno zavrseno!
INFO  02:31:15,415 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:31:15,471 - #2 program
INFO  02:31:15,471 - #48 p
INFO  02:31:15,471 - #48 int
INFO  02:31:15,472 - #48 x
INFO  02:31:15,473 - #38 ;
INFO  02:31:15,474 - #48 int
INFO  02:31:15,474 - #48 y
INFO  02:31:15,474 - #38 ;
INFO  02:31:15,474 - #21 record
INFO  02:31:15,475 - #48 Rekord
INFO  02:31:15,475 - #46 {
INFO  02:31:15,475 - #48 int
INFO  02:31:15,476 - #48 d
INFO  02:31:15,476 - #40 ,
INFO  02:31:15,476 - #48 c
INFO  02:31:15,476 - #38 ;
INFO  02:31:15,477 - #47 }
INFO  02:31:15,477 - #5 class
INFO  02:31:15,478 - #48 Klasa
INFO  02:31:15,478 - #46 {
INFO  02:31:15,480 - #48 int
INFO  02:31:15,480 - #48 b
INFO  02:31:15,480 - #40 ,
INFO  02:31:15,481 - #48 a
INFO  02:31:15,481 - #40 ,
INFO  02:31:15,481 - #48 g
INFO  02:31:15,481 - #38 ;
INFO  02:31:15,481 - #46 {
INFO  02:31:15,481 - #47 }
INFO  02:31:15,481 - #47 }
INFO  02:31:15,482 - #46 {
INFO  02:31:15,482 - #48 int
INFO  02:31:15,483 - #48 nesto
INFO  02:31:15,483 - #42 (
INFO  02:31:15,483 - #43 )
INFO  02:31:15,483 - #46 {
INFO  02:31:15,483 - #13 print
INFO  02:31:15,484 - #42 (
INFO  02:31:15,485 - #51 c
INFO  02:31:15,485 - #43 )
INFO  02:31:15,485 - #38 ;
INFO  02:31:15,486 - #13 print
INFO  02:31:15,486 - #42 (
INFO  02:31:15,486 - #50 5
INFO  02:31:15,486 - #43 )
INFO  02:31:15,486 - #38 ;
INFO  02:31:15,486 - #15 return
INFO  02:31:15,486 - #50 2
INFO  02:31:15,486 - #38 ;
INFO  02:31:15,487 - #47 }
INFO  02:31:15,487 - #3 void
INFO  02:31:15,488 - #48 kita2
INFO  02:31:15,488 - #42 (
INFO  02:31:15,488 - #43 )
INFO  02:31:15,488 - #46 {
INFO  02:31:15,488 - #47 }
INFO  02:31:15,488 - #3 void
INFO  02:31:15,488 - #48 kita
INFO  02:31:15,488 - #42 (
INFO  02:31:15,488 - #43 )
INFO  02:31:15,489 - #46 {
INFO  02:31:15,489 - #47 }
INFO  02:31:15,489 - #3 void
INFO  02:31:15,489 - #48 main
INFO  02:31:15,489 - #42 (
INFO  02:31:15,489 - #43 )
INFO  02:31:15,489 - #48 int
INFO  02:31:15,489 - #48 x
INFO  02:31:15,489 - #44 [
INFO  02:31:15,489 - #45 ]
INFO  02:31:15,490 - #40 ,
INFO  02:31:15,490 - #48 i
INFO  02:31:15,490 - #40 ,
INFO  02:31:15,490 - #48 l
INFO  02:31:15,490 - #38 ;
INFO  02:31:15,490 - #48 char
INFO  02:31:15,491 - #48 c
INFO  02:31:15,491 - #38 ;
INFO  02:31:15,491 - #48 Rekord
INFO  02:31:15,491 - #48 rek
INFO  02:31:15,491 - #38 ;
INFO  02:31:15,491 - #48 Klasa
INFO  02:31:15,491 - #48 neka
INFO  02:31:15,491 - #38 ;
INFO  02:31:15,491 - #46 {
INFO  02:31:15,491 - #48 i
INFO  02:31:15,491 - #35 =
INFO  02:31:15,493 - #50 0
INFO  02:31:15,493 - #38 ;
INFO  02:31:15,494 - #9 if
INFO  02:31:15,494 - #42 (
INFO  02:31:15,495 - #50 64
INFO  02:31:15,496 - #31 <
INFO  02:31:15,496 - #50 63
INFO  02:31:15,497 - #34 ||
INFO  02:31:15,497 - #49 false
INFO  02:31:15,498 - #34 ||
INFO  02:31:15,498 - #50 5
INFO  02:31:15,498 - #27 ==
INFO  02:31:15,498 - #50 5
INFO  02:31:15,501 - #33 &&
INFO  02:31:15,501 - #50 2
INFO  02:31:15,501 - #27 ==
INFO  02:31:15,501 - #50 2
INFO  02:31:15,501 - #43 )
INFO  02:31:15,502 - #46 {
INFO  02:31:15,502 - #13 print
INFO  02:31:15,502 - #42 (
INFO  02:31:15,502 - #50 1
INFO  02:31:15,502 - #43 )
INFO  02:31:15,502 - #38 ;
INFO  02:31:15,502 - #47 }
INFO  02:31:15,502 - #7 else
INFO  02:31:15,502 - #46 {
INFO  02:31:15,503 - #13 print
INFO  02:31:15,503 - #42 (
INFO  02:31:15,503 - #50 2
INFO  02:31:15,503 - #43 )
INFO  02:31:15,503 - #38 ;
INFO  02:31:15,503 - #47 }
INFO  02:31:15,503 - #47 }
INFO  02:31:15,503 - #47 }
INFO  02:31:15,509 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             64
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopLess(
                        ) [RelopLess]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             63
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           false
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                ConditionTerm(
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                  And(
                  ) [And]
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopEqual(
                    ) [RelopEqual]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [ConditionTerm]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:31:15,510 - ===================================
INFO  02:31:15,514 - Deklarisana promenljiva x na liniji 2
INFO  02:31:15,515 - Deklarisana promenljiva y na liniji 2
INFO  02:31:15,515 - Deklarisan rekord Rekord na liniji 3
INFO  02:31:15,515 - Deklarisana promenljiva d na liniji 5
INFO  02:31:15,515 - Deklarisana promenljiva c na liniji 5
INFO  02:31:15,515 - Deklarisana  klasa Klasa na liniji 7
INFO  02:31:15,515 - Deklarisana poljeb na liniji 9
INFO  02:31:15,515 - Deklarisana poljeb na liniji 9
INFO  02:31:15,515 - Deklarisana poljea na liniji 9
INFO  02:31:15,515 - Deklarisana poljea na liniji 9
INFO  02:31:15,515 - Deklarisana poljeg na liniji 9
INFO  02:31:15,515 - Deklarisana poljeg na liniji 9
INFO  02:31:15,515 - Obradjuje se funkcija nesto na liniji 16
INFO  02:31:15,516 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:31:15,516 - Obradjuje se funkcija kita na liniji 23
INFO  02:31:15,516 - Obradjuje se funkcija main na liniji 26
INFO  02:31:15,516 - Deklarisana niz promenljiva x na liniji 26
INFO  02:31:15,516 - Deklarisana promenljiva i na liniji 26
INFO  02:31:15,516 - Deklarisana promenljiva l na liniji 26
INFO  02:31:15,516 - Deklarisana promenljiva c na liniji 26
INFO  02:31:15,516 - Deklarisana promenljiva rek na liniji 26
INFO  02:31:15,516 - Deklarisana promenljiva neka na liniji 26
INFO  02:31:15,516 - Pristupa se promenljivoj i na liniji 28
INFO  02:31:15,517 -  Deklarisanih promenljivih ima = 7
INFO  02:31:15,517 - ===================================
INFO  02:31:15,522 - usao je nekada4
INFO  02:31:15,522 - neko sranje2
INFO  02:31:15,522 - neko sranje
INFO  02:31:15,522 - usao je nekada4
INFO  02:31:15,522 - neko sranje2
INFO  02:31:15,522 - neko sranje
INFO  02:31:15,523 - usao je nekada2
INFO  02:31:15,523 - neko sranje
INFO  02:31:15,523 - neko sranje
INFO  02:31:15,523 - bratskalovskiii
INFO  02:31:15,523 - matched
INFO  02:31:15,523 - Parsiranje uspesno zavrseno!
INFO  02:31:35,813 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:31:35,865 - #2 program
INFO  02:31:35,865 - #48 p
INFO  02:31:35,865 - #48 int
INFO  02:31:35,866 - #48 x
INFO  02:31:35,867 - #38 ;
INFO  02:31:35,868 - #48 int
INFO  02:31:35,869 - #48 y
INFO  02:31:35,869 - #38 ;
INFO  02:31:35,869 - #21 record
INFO  02:31:35,869 - #48 Rekord
INFO  02:31:35,869 - #46 {
INFO  02:31:35,870 - #48 int
INFO  02:31:35,870 - #48 d
INFO  02:31:35,870 - #40 ,
INFO  02:31:35,871 - #48 c
INFO  02:31:35,871 - #38 ;
INFO  02:31:35,871 - #47 }
INFO  02:31:35,871 - #5 class
INFO  02:31:35,872 - #48 Klasa
INFO  02:31:35,872 - #46 {
INFO  02:31:35,873 - #48 int
INFO  02:31:35,873 - #48 b
INFO  02:31:35,873 - #40 ,
INFO  02:31:35,873 - #48 a
INFO  02:31:35,873 - #40 ,
INFO  02:31:35,874 - #48 g
INFO  02:31:35,874 - #38 ;
INFO  02:31:35,874 - #46 {
INFO  02:31:35,874 - #47 }
INFO  02:31:35,874 - #47 }
INFO  02:31:35,874 - #46 {
INFO  02:31:35,875 - #48 int
INFO  02:31:35,875 - #48 nesto
INFO  02:31:35,875 - #42 (
INFO  02:31:35,875 - #43 )
INFO  02:31:35,876 - #46 {
INFO  02:31:35,876 - #13 print
INFO  02:31:35,877 - #42 (
INFO  02:31:35,878 - #51 c
INFO  02:31:35,878 - #43 )
INFO  02:31:35,878 - #38 ;
INFO  02:31:35,879 - #13 print
INFO  02:31:35,879 - #42 (
INFO  02:31:35,879 - #50 5
INFO  02:31:35,879 - #43 )
INFO  02:31:35,879 - #38 ;
INFO  02:31:35,879 - #15 return
INFO  02:31:35,879 - #50 2
INFO  02:31:35,879 - #38 ;
INFO  02:31:35,879 - #47 }
INFO  02:31:35,879 - #3 void
INFO  02:31:35,880 - #48 kita2
INFO  02:31:35,881 - #42 (
INFO  02:31:35,881 - #43 )
INFO  02:31:35,881 - #46 {
INFO  02:31:35,881 - #47 }
INFO  02:31:35,881 - #3 void
INFO  02:31:35,881 - #48 kita
INFO  02:31:35,881 - #42 (
INFO  02:31:35,881 - #43 )
INFO  02:31:35,881 - #46 {
INFO  02:31:35,881 - #47 }
INFO  02:31:35,881 - #3 void
INFO  02:31:35,882 - #48 main
INFO  02:31:35,882 - #42 (
INFO  02:31:35,882 - #43 )
INFO  02:31:35,882 - #48 int
INFO  02:31:35,882 - #48 x
INFO  02:31:35,882 - #44 [
INFO  02:31:35,882 - #45 ]
INFO  02:31:35,882 - #40 ,
INFO  02:31:35,882 - #48 i
INFO  02:31:35,882 - #40 ,
INFO  02:31:35,883 - #48 l
INFO  02:31:35,883 - #38 ;
INFO  02:31:35,883 - #48 char
INFO  02:31:35,883 - #48 c
INFO  02:31:35,883 - #38 ;
INFO  02:31:35,883 - #48 Rekord
INFO  02:31:35,883 - #48 rek
INFO  02:31:35,883 - #38 ;
INFO  02:31:35,883 - #48 Klasa
INFO  02:31:35,883 - #48 neka
INFO  02:31:35,883 - #38 ;
INFO  02:31:35,883 - #46 {
INFO  02:31:35,883 - #48 i
INFO  02:31:35,883 - #35 =
INFO  02:31:35,885 - #50 0
INFO  02:31:35,885 - #38 ;
INFO  02:31:35,886 - #9 if
INFO  02:31:35,886 - #42 (
INFO  02:31:35,886 - #50 64
INFO  02:31:35,886 - #31 <
INFO  02:31:35,886 - #50 63
INFO  02:31:35,887 - #34 ||
INFO  02:31:35,888 - #49 false
INFO  02:31:35,888 - #34 ||
INFO  02:31:35,888 - #50 5
INFO  02:31:35,889 - #27 ==
INFO  02:31:35,889 - #50 5
INFO  02:31:35,891 - #33 &&
INFO  02:31:35,891 - #50 2
INFO  02:31:35,892 - #27 ==
INFO  02:31:35,892 - #50 2
INFO  02:31:35,892 - #34 ||
INFO  02:31:35,892 - #50 2
INFO  02:31:35,892 - #31 <
INFO  02:31:35,892 - #50 1
INFO  02:31:35,892 - #43 )
INFO  02:31:35,892 - #46 {
INFO  02:31:35,892 - #13 print
INFO  02:31:35,893 - #42 (
INFO  02:31:35,893 - #50 1
INFO  02:31:35,893 - #43 )
INFO  02:31:35,893 - #38 ;
INFO  02:31:35,893 - #47 }
INFO  02:31:35,893 - #7 else
INFO  02:31:35,893 - #46 {
INFO  02:31:35,894 - #13 print
INFO  02:31:35,894 - #42 (
INFO  02:31:35,894 - #50 2
INFO  02:31:35,894 - #43 )
INFO  02:31:35,894 - #38 ;
INFO  02:31:35,894 - #47 }
INFO  02:31:35,894 - #47 }
INFO  02:31:35,894 - #47 }
INFO  02:31:35,900 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  ConditionTerms(
                    SingleCondTerm(
                      SingleCondFact(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               64
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               63
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFact]
                    ) [SingleCondTerm]
                    Or(
                    ) [Or]
                    SingleCondFact(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             false
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFact]
                  ) [ConditionTerms]
                  Or(
                  ) [Or]
                  ConditionTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             5
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopEqual(
                        ) [RelopEqual]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             5
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                    And(
                    ) [And]
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           2
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           2
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [ConditionTerm]
                ) [ConditionTerms]
                Or(
                ) [Or]
                SingleCondFact(
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopLess(
                    ) [RelopLess]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [SingleCondFact]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:31:35,900 - ===================================
INFO  02:31:35,905 - Deklarisana promenljiva x na liniji 2
INFO  02:31:35,905 - Deklarisana promenljiva y na liniji 2
INFO  02:31:35,905 - Deklarisan rekord Rekord na liniji 3
INFO  02:31:35,905 - Deklarisana promenljiva d na liniji 5
INFO  02:31:35,905 - Deklarisana promenljiva c na liniji 5
INFO  02:31:35,905 - Deklarisana  klasa Klasa na liniji 7
INFO  02:31:35,905 - Deklarisana poljeb na liniji 9
INFO  02:31:35,905 - Deklarisana poljeb na liniji 9
INFO  02:31:35,905 - Deklarisana poljea na liniji 9
INFO  02:31:35,905 - Deklarisana poljea na liniji 9
INFO  02:31:35,905 - Deklarisana poljeg na liniji 9
INFO  02:31:35,905 - Deklarisana poljeg na liniji 9
INFO  02:31:35,905 - Obradjuje se funkcija nesto na liniji 16
INFO  02:31:35,905 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:31:35,906 - Obradjuje se funkcija kita na liniji 23
INFO  02:31:35,906 - Obradjuje se funkcija main na liniji 26
INFO  02:31:35,906 - Deklarisana niz promenljiva x na liniji 26
INFO  02:31:35,906 - Deklarisana promenljiva i na liniji 26
INFO  02:31:35,906 - Deklarisana promenljiva l na liniji 26
INFO  02:31:35,906 - Deklarisana promenljiva c na liniji 26
INFO  02:31:35,906 - Deklarisana promenljiva rek na liniji 26
INFO  02:31:35,906 - Deklarisana promenljiva neka na liniji 26
INFO  02:31:35,906 - Pristupa se promenljivoj i na liniji 28
INFO  02:31:35,907 -  Deklarisanih promenljivih ima = 7
INFO  02:31:35,907 - ===================================
INFO  02:31:35,912 - usao je nekada4
INFO  02:31:35,912 - neko sranje2
INFO  02:31:35,912 - neko sranje
INFO  02:31:35,912 - usao je nekada4
INFO  02:31:35,912 - neko sranje2
INFO  02:31:35,912 - neko sranje
INFO  02:31:35,912 - usao je nekada2
INFO  02:31:35,912 - neko sranje2
INFO  02:31:35,912 - neko sranje
INFO  02:31:35,912 - neko sranje
INFO  02:31:35,913 - usao je nekada4
INFO  02:31:35,913 - neko sranje
INFO  02:31:35,913 - bratskalovskiii
INFO  02:31:35,913 - matched
INFO  02:31:35,913 - Parsiranje uspesno zavrseno!
INFO  02:31:52,992 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:31:53,046 - #2 program
INFO  02:31:53,046 - #48 p
INFO  02:31:53,046 - #48 int
INFO  02:31:53,048 - #48 x
INFO  02:31:53,048 - #38 ;
INFO  02:31:53,049 - #48 int
INFO  02:31:53,050 - #48 y
INFO  02:31:53,050 - #38 ;
INFO  02:31:53,050 - #21 record
INFO  02:31:53,050 - #48 Rekord
INFO  02:31:53,050 - #46 {
INFO  02:31:53,051 - #48 int
INFO  02:31:53,052 - #48 d
INFO  02:31:53,052 - #40 ,
INFO  02:31:53,052 - #48 c
INFO  02:31:53,052 - #38 ;
INFO  02:31:53,052 - #47 }
INFO  02:31:53,052 - #5 class
INFO  02:31:53,053 - #48 Klasa
INFO  02:31:53,053 - #46 {
INFO  02:31:53,054 - #48 int
INFO  02:31:53,054 - #48 b
INFO  02:31:53,054 - #40 ,
INFO  02:31:53,054 - #48 a
INFO  02:31:53,055 - #40 ,
INFO  02:31:53,055 - #48 g
INFO  02:31:53,055 - #38 ;
INFO  02:31:53,055 - #46 {
INFO  02:31:53,055 - #47 }
INFO  02:31:53,055 - #47 }
INFO  02:31:53,056 - #46 {
INFO  02:31:53,056 - #48 int
INFO  02:31:53,057 - #48 nesto
INFO  02:31:53,057 - #42 (
INFO  02:31:53,057 - #43 )
INFO  02:31:53,057 - #46 {
INFO  02:31:53,057 - #13 print
INFO  02:31:53,058 - #42 (
INFO  02:31:53,059 - #51 c
INFO  02:31:53,059 - #43 )
INFO  02:31:53,059 - #38 ;
INFO  02:31:53,060 - #13 print
INFO  02:31:53,060 - #42 (
INFO  02:31:53,060 - #50 5
INFO  02:31:53,060 - #43 )
INFO  02:31:53,061 - #38 ;
INFO  02:31:53,061 - #15 return
INFO  02:31:53,061 - #50 2
INFO  02:31:53,061 - #38 ;
INFO  02:31:53,061 - #47 }
INFO  02:31:53,061 - #3 void
INFO  02:31:53,062 - #48 kita2
INFO  02:31:53,063 - #42 (
INFO  02:31:53,063 - #43 )
INFO  02:31:53,063 - #46 {
INFO  02:31:53,063 - #47 }
INFO  02:31:53,063 - #3 void
INFO  02:31:53,063 - #48 kita
INFO  02:31:53,063 - #42 (
INFO  02:31:53,063 - #43 )
INFO  02:31:53,064 - #46 {
INFO  02:31:53,064 - #47 }
INFO  02:31:53,064 - #3 void
INFO  02:31:53,064 - #48 main
INFO  02:31:53,064 - #42 (
INFO  02:31:53,064 - #43 )
INFO  02:31:53,064 - #48 int
INFO  02:31:53,064 - #48 x
INFO  02:31:53,064 - #44 [
INFO  02:31:53,064 - #45 ]
INFO  02:31:53,064 - #40 ,
INFO  02:31:53,065 - #48 i
INFO  02:31:53,065 - #40 ,
INFO  02:31:53,065 - #48 l
INFO  02:31:53,065 - #38 ;
INFO  02:31:53,065 - #48 char
INFO  02:31:53,065 - #48 c
INFO  02:31:53,066 - #38 ;
INFO  02:31:53,066 - #48 Rekord
INFO  02:31:53,066 - #48 rek
INFO  02:31:53,066 - #38 ;
INFO  02:31:53,066 - #48 Klasa
INFO  02:31:53,066 - #48 neka
INFO  02:31:53,066 - #38 ;
INFO  02:31:53,066 - #46 {
INFO  02:31:53,066 - #48 i
INFO  02:31:53,066 - #35 =
INFO  02:31:53,067 - #50 0
INFO  02:31:53,068 - #38 ;
INFO  02:31:53,068 - #9 if
INFO  02:31:53,068 - #42 (
INFO  02:31:53,069 - #50 64
INFO  02:31:53,069 - #31 <
INFO  02:31:53,069 - #50 63
INFO  02:31:53,070 - #34 ||
INFO  02:31:53,070 - #49 false
INFO  02:31:53,071 - #34 ||
INFO  02:31:53,071 - #50 5
INFO  02:31:53,071 - #27 ==
INFO  02:31:53,071 - #50 1
INFO  02:31:53,073 - #33 &&
INFO  02:31:53,073 - #50 2
INFO  02:31:53,074 - #27 ==
INFO  02:31:53,074 - #50 2
INFO  02:31:53,074 - #34 ||
INFO  02:31:53,074 - #50 2
INFO  02:31:53,074 - #31 <
INFO  02:31:53,074 - #50 1
INFO  02:31:53,074 - #43 )
INFO  02:31:53,074 - #46 {
INFO  02:31:53,074 - #13 print
INFO  02:31:53,074 - #42 (
INFO  02:31:53,075 - #50 1
INFO  02:31:53,075 - #43 )
INFO  02:31:53,075 - #38 ;
INFO  02:31:53,075 - #47 }
INFO  02:31:53,075 - #7 else
INFO  02:31:53,075 - #46 {
INFO  02:31:53,075 - #13 print
INFO  02:31:53,076 - #42 (
INFO  02:31:53,076 - #50 2
INFO  02:31:53,076 - #43 )
INFO  02:31:53,076 - #38 ;
INFO  02:31:53,076 - #47 }
INFO  02:31:53,076 - #47 }
INFO  02:31:53,076 - #47 }
INFO  02:31:53,082 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  ConditionTerms(
                    SingleCondTerm(
                      SingleCondFact(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               64
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               63
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFact]
                    ) [SingleCondTerm]
                    Or(
                    ) [Or]
                    SingleCondFact(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             false
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFact]
                  ) [ConditionTerms]
                  Or(
                  ) [Or]
                  ConditionTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             5
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopEqual(
                        ) [RelopEqual]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                    And(
                    ) [And]
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           2
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           2
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [ConditionTerm]
                ) [ConditionTerms]
                Or(
                ) [Or]
                SingleCondFact(
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopLess(
                    ) [RelopLess]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [SingleCondFact]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:31:53,083 - ===================================
INFO  02:31:53,087 - Deklarisana promenljiva x na liniji 2
INFO  02:31:53,087 - Deklarisana promenljiva y na liniji 2
INFO  02:31:53,087 - Deklarisan rekord Rekord na liniji 3
INFO  02:31:53,087 - Deklarisana promenljiva d na liniji 5
INFO  02:31:53,087 - Deklarisana promenljiva c na liniji 5
INFO  02:31:53,087 - Deklarisana  klasa Klasa na liniji 7
INFO  02:31:53,087 - Deklarisana poljeb na liniji 9
INFO  02:31:53,087 - Deklarisana poljeb na liniji 9
INFO  02:31:53,087 - Deklarisana poljea na liniji 9
INFO  02:31:53,087 - Deklarisana poljea na liniji 9
INFO  02:31:53,087 - Deklarisana poljeg na liniji 9
INFO  02:31:53,087 - Deklarisana poljeg na liniji 9
INFO  02:31:53,088 - Obradjuje se funkcija nesto na liniji 16
INFO  02:31:53,088 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:31:53,088 - Obradjuje se funkcija kita na liniji 23
INFO  02:31:53,088 - Obradjuje se funkcija main na liniji 26
INFO  02:31:53,088 - Deklarisana niz promenljiva x na liniji 26
INFO  02:31:53,088 - Deklarisana promenljiva i na liniji 26
INFO  02:31:53,088 - Deklarisana promenljiva l na liniji 26
INFO  02:31:53,088 - Deklarisana promenljiva c na liniji 26
INFO  02:31:53,088 - Deklarisana promenljiva rek na liniji 26
INFO  02:31:53,088 - Deklarisana promenljiva neka na liniji 26
INFO  02:31:53,088 - Pristupa se promenljivoj i na liniji 28
INFO  02:31:53,089 -  Deklarisanih promenljivih ima = 7
INFO  02:31:53,089 - ===================================
INFO  02:31:53,095 - usao je nekada4
INFO  02:31:53,095 - neko sranje2
INFO  02:31:53,095 - neko sranje
INFO  02:31:53,095 - usao je nekada4
INFO  02:31:53,095 - neko sranje2
INFO  02:31:53,095 - neko sranje
INFO  02:31:53,095 - usao je nekada2
INFO  02:31:53,095 - neko sranje2
INFO  02:31:53,095 - neko sranje
INFO  02:31:53,095 - neko sranje
INFO  02:31:53,095 - usao je nekada4
INFO  02:31:53,095 - neko sranje
INFO  02:31:53,095 - bratskalovskiii
INFO  02:31:53,096 - matched
INFO  02:31:53,096 - Parsiranje uspesno zavrseno!
INFO  02:32:07,155 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:32:07,216 - #2 program
INFO  02:32:07,216 - #48 p
INFO  02:32:07,216 - #48 int
INFO  02:32:07,217 - #48 x
INFO  02:32:07,218 - #38 ;
INFO  02:32:07,219 - #48 int
INFO  02:32:07,219 - #48 y
INFO  02:32:07,219 - #38 ;
INFO  02:32:07,219 - #21 record
INFO  02:32:07,219 - #48 Rekord
INFO  02:32:07,219 - #46 {
INFO  02:32:07,220 - #48 int
INFO  02:32:07,221 - #48 d
INFO  02:32:07,221 - #40 ,
INFO  02:32:07,221 - #48 c
INFO  02:32:07,221 - #38 ;
INFO  02:32:07,221 - #47 }
INFO  02:32:07,222 - #5 class
INFO  02:32:07,222 - #48 Klasa
INFO  02:32:07,223 - #46 {
INFO  02:32:07,223 - #48 int
INFO  02:32:07,224 - #48 b
INFO  02:32:07,224 - #40 ,
INFO  02:32:07,224 - #48 a
INFO  02:32:07,224 - #40 ,
INFO  02:32:07,224 - #48 g
INFO  02:32:07,224 - #38 ;
INFO  02:32:07,224 - #46 {
INFO  02:32:07,224 - #47 }
INFO  02:32:07,224 - #47 }
INFO  02:32:07,225 - #46 {
INFO  02:32:07,225 - #48 int
INFO  02:32:07,226 - #48 nesto
INFO  02:32:07,226 - #42 (
INFO  02:32:07,226 - #43 )
INFO  02:32:07,226 - #46 {
INFO  02:32:07,226 - #13 print
INFO  02:32:07,227 - #42 (
INFO  02:32:07,228 - #51 c
INFO  02:32:07,228 - #43 )
INFO  02:32:07,228 - #38 ;
INFO  02:32:07,228 - #13 print
INFO  02:32:07,229 - #42 (
INFO  02:32:07,229 - #50 5
INFO  02:32:07,229 - #43 )
INFO  02:32:07,229 - #38 ;
INFO  02:32:07,229 - #15 return
INFO  02:32:07,229 - #50 2
INFO  02:32:07,229 - #38 ;
INFO  02:32:07,229 - #47 }
INFO  02:32:07,229 - #3 void
INFO  02:32:07,230 - #48 kita2
INFO  02:32:07,230 - #42 (
INFO  02:32:07,230 - #43 )
INFO  02:32:07,230 - #46 {
INFO  02:32:07,230 - #47 }
INFO  02:32:07,231 - #3 void
INFO  02:32:07,231 - #48 kita
INFO  02:32:07,231 - #42 (
INFO  02:32:07,231 - #43 )
INFO  02:32:07,231 - #46 {
INFO  02:32:07,231 - #47 }
INFO  02:32:07,231 - #3 void
INFO  02:32:07,231 - #48 main
INFO  02:32:07,231 - #42 (
INFO  02:32:07,231 - #43 )
INFO  02:32:07,231 - #48 int
INFO  02:32:07,231 - #48 x
INFO  02:32:07,231 - #44 [
INFO  02:32:07,231 - #45 ]
INFO  02:32:07,231 - #40 ,
INFO  02:32:07,232 - #48 i
INFO  02:32:07,232 - #40 ,
INFO  02:32:07,232 - #48 l
INFO  02:32:07,232 - #38 ;
INFO  02:32:07,232 - #48 char
INFO  02:32:07,232 - #48 c
INFO  02:32:07,232 - #38 ;
INFO  02:32:07,232 - #48 Rekord
INFO  02:32:07,232 - #48 rek
INFO  02:32:07,233 - #38 ;
INFO  02:32:07,233 - #48 Klasa
INFO  02:32:07,233 - #48 neka
INFO  02:32:07,233 - #38 ;
INFO  02:32:07,233 - #46 {
INFO  02:32:07,233 - #48 i
INFO  02:32:07,233 - #35 =
INFO  02:32:07,234 - #50 0
INFO  02:32:07,234 - #38 ;
INFO  02:32:07,234 - #9 if
INFO  02:32:07,235 - #42 (
INFO  02:32:07,235 - #50 64
INFO  02:32:07,235 - #31 <
INFO  02:32:07,235 - #50 63
INFO  02:32:07,236 - #34 ||
INFO  02:32:07,236 - #49 true
INFO  02:32:07,237 - #34 ||
INFO  02:32:07,237 - #50 5
INFO  02:32:07,237 - #27 ==
INFO  02:32:07,238 - #50 1
INFO  02:32:07,240 - #33 &&
INFO  02:32:07,240 - #50 2
INFO  02:32:07,241 - #27 ==
INFO  02:32:07,241 - #50 2
INFO  02:32:07,241 - #34 ||
INFO  02:32:07,241 - #50 2
INFO  02:32:07,241 - #31 <
INFO  02:32:07,241 - #50 1
INFO  02:32:07,241 - #43 )
INFO  02:32:07,242 - #46 {
INFO  02:32:07,242 - #13 print
INFO  02:32:07,242 - #42 (
INFO  02:32:07,242 - #50 1
INFO  02:32:07,242 - #43 )
INFO  02:32:07,242 - #38 ;
INFO  02:32:07,242 - #47 }
INFO  02:32:07,242 - #7 else
INFO  02:32:07,242 - #46 {
INFO  02:32:07,243 - #13 print
INFO  02:32:07,243 - #42 (
INFO  02:32:07,243 - #50 2
INFO  02:32:07,243 - #43 )
INFO  02:32:07,243 - #38 ;
INFO  02:32:07,243 - #47 }
INFO  02:32:07,243 - #47 }
INFO  02:32:07,243 - #47 }
INFO  02:32:07,249 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  ConditionTerms(
                    SingleCondTerm(
                      SingleCondFact(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               64
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopLess(
                          ) [RelopLess]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               63
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFact]
                    ) [SingleCondTerm]
                    Or(
                    ) [Or]
                    SingleCondFact(
                      CondFactExpr(
                        TermExpression(
                          SingleFactor(
                            BoolConstFactor(
                             true
                            ) [BoolConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [CondFactExpr]
                    ) [SingleCondFact]
                  ) [ConditionTerms]
                  Or(
                  ) [Or]
                  ConditionTerm(
                    SingleCondFact(
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             5
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopEqual(
                        ) [RelopEqual]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [SingleCondFact]
                    And(
                    ) [And]
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           2
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           2
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [ConditionTerm]
                ) [ConditionTerms]
                Or(
                ) [Or]
                SingleCondFact(
                  ConditionFact(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                    RelopLess(
                    ) [RelopLess]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         1
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ConditionFact]
                ) [SingleCondFact]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:32:07,249 - ===================================
INFO  02:32:07,254 - Deklarisana promenljiva x na liniji 2
INFO  02:32:07,254 - Deklarisana promenljiva y na liniji 2
INFO  02:32:07,254 - Deklarisan rekord Rekord na liniji 3
INFO  02:32:07,255 - Deklarisana promenljiva d na liniji 5
INFO  02:32:07,255 - Deklarisana promenljiva c na liniji 5
INFO  02:32:07,255 - Deklarisana  klasa Klasa na liniji 7
INFO  02:32:07,255 - Deklarisana poljeb na liniji 9
INFO  02:32:07,255 - Deklarisana poljeb na liniji 9
INFO  02:32:07,255 - Deklarisana poljea na liniji 9
INFO  02:32:07,255 - Deklarisana poljea na liniji 9
INFO  02:32:07,255 - Deklarisana poljeg na liniji 9
INFO  02:32:07,255 - Deklarisana poljeg na liniji 9
INFO  02:32:07,255 - Obradjuje se funkcija nesto na liniji 16
INFO  02:32:07,255 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:32:07,256 - Obradjuje se funkcija kita na liniji 23
INFO  02:32:07,256 - Obradjuje se funkcija main na liniji 26
INFO  02:32:07,256 - Deklarisana niz promenljiva x na liniji 26
INFO  02:32:07,256 - Deklarisana promenljiva i na liniji 26
INFO  02:32:07,256 - Deklarisana promenljiva l na liniji 26
INFO  02:32:07,256 - Deklarisana promenljiva c na liniji 26
INFO  02:32:07,256 - Deklarisana promenljiva rek na liniji 26
INFO  02:32:07,256 - Deklarisana promenljiva neka na liniji 26
INFO  02:32:07,256 - Pristupa se promenljivoj i na liniji 28
INFO  02:32:07,257 -  Deklarisanih promenljivih ima = 7
INFO  02:32:07,257 - ===================================
INFO  02:32:07,262 - usao je nekada4
INFO  02:32:07,262 - neko sranje2
INFO  02:32:07,263 - neko sranje
INFO  02:32:07,263 - usao je nekada4
INFO  02:32:07,263 - neko sranje2
INFO  02:32:07,263 - usao je nekada2
INFO  02:32:07,263 - neko sranje2
INFO  02:32:07,263 - neko sranje
INFO  02:32:07,263 - neko sranje
INFO  02:32:07,263 - usao je nekada4
INFO  02:32:07,263 - neko sranje
INFO  02:32:07,263 - bratskalovskiii
INFO  02:32:07,263 - matched
INFO  02:32:07,264 - Parsiranje uspesno zavrseno!
INFO  02:33:20,171 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:33:20,224 - #2 program
INFO  02:33:20,224 - #48 p
INFO  02:33:20,224 - #48 int
INFO  02:33:20,225 - #48 x
INFO  02:33:20,225 - #38 ;
INFO  02:33:20,226 - #48 int
INFO  02:33:20,227 - #48 y
INFO  02:33:20,227 - #38 ;
INFO  02:33:20,227 - #21 record
INFO  02:33:20,227 - #48 Rekord
INFO  02:33:20,227 - #46 {
INFO  02:33:20,228 - #48 int
INFO  02:33:20,228 - #48 d
INFO  02:33:20,228 - #40 ,
INFO  02:33:20,228 - #48 c
INFO  02:33:20,229 - #38 ;
INFO  02:33:20,229 - #47 }
INFO  02:33:20,229 - #5 class
INFO  02:33:20,230 - #48 Klasa
INFO  02:33:20,230 - #46 {
INFO  02:33:20,231 - #48 int
INFO  02:33:20,231 - #48 b
INFO  02:33:20,231 - #40 ,
INFO  02:33:20,231 - #48 a
INFO  02:33:20,231 - #40 ,
INFO  02:33:20,232 - #48 g
INFO  02:33:20,232 - #38 ;
INFO  02:33:20,232 - #46 {
INFO  02:33:20,232 - #47 }
INFO  02:33:20,232 - #47 }
INFO  02:33:20,232 - #46 {
INFO  02:33:20,233 - #48 int
INFO  02:33:20,233 - #48 nesto
INFO  02:33:20,233 - #42 (
INFO  02:33:20,233 - #43 )
INFO  02:33:20,234 - #46 {
INFO  02:33:20,234 - #13 print
INFO  02:33:20,235 - #42 (
INFO  02:33:20,235 - #51 c
INFO  02:33:20,235 - #43 )
INFO  02:33:20,236 - #38 ;
INFO  02:33:20,236 - #13 print
INFO  02:33:20,237 - #42 (
INFO  02:33:20,238 - #50 5
INFO  02:33:20,238 - #43 )
INFO  02:33:20,238 - #38 ;
INFO  02:33:20,238 - #15 return
INFO  02:33:20,238 - #50 2
INFO  02:33:20,238 - #38 ;
INFO  02:33:20,238 - #47 }
INFO  02:33:20,238 - #3 void
INFO  02:33:20,239 - #48 kita2
INFO  02:33:20,240 - #42 (
INFO  02:33:20,240 - #43 )
INFO  02:33:20,240 - #46 {
INFO  02:33:20,240 - #47 }
INFO  02:33:20,240 - #3 void
INFO  02:33:20,240 - #48 kita
INFO  02:33:20,240 - #42 (
INFO  02:33:20,240 - #43 )
INFO  02:33:20,240 - #46 {
INFO  02:33:20,241 - #47 }
INFO  02:33:20,241 - #3 void
INFO  02:33:20,241 - #48 main
INFO  02:33:20,241 - #42 (
INFO  02:33:20,241 - #43 )
INFO  02:33:20,241 - #48 int
INFO  02:33:20,241 - #48 x
INFO  02:33:20,241 - #44 [
INFO  02:33:20,241 - #45 ]
INFO  02:33:20,241 - #40 ,
INFO  02:33:20,242 - #48 i
INFO  02:33:20,242 - #40 ,
INFO  02:33:20,242 - #48 l
INFO  02:33:20,242 - #38 ;
INFO  02:33:20,242 - #48 char
INFO  02:33:20,242 - #48 c
INFO  02:33:20,242 - #38 ;
INFO  02:33:20,243 - #48 Rekord
INFO  02:33:20,243 - #48 rek
INFO  02:33:20,243 - #38 ;
INFO  02:33:20,243 - #48 Klasa
INFO  02:33:20,243 - #48 neka
INFO  02:33:20,243 - #38 ;
INFO  02:33:20,243 - #46 {
INFO  02:33:20,243 - #48 i
INFO  02:33:20,243 - #35 =
INFO  02:33:20,245 - #50 0
INFO  02:33:20,245 - #38 ;
INFO  02:33:20,245 - #9 if
INFO  02:33:20,246 - #42 (
INFO  02:33:20,246 - #50 64
INFO  02:33:20,246 - #31 <
INFO  02:33:20,246 - #50 63
INFO  02:33:20,247 - #34 ||
INFO  02:33:20,247 - #49 false
INFO  02:33:20,248 - #34 ||
INFO  02:33:20,248 - #50 1
INFO  02:33:20,248 - #27 ==
INFO  02:33:20,248 - #50 1
INFO  02:33:20,250 - #33 &&
INFO  02:33:20,250 - #50 2
INFO  02:33:20,251 - #27 ==
INFO  02:33:20,251 - #50 2
INFO  02:33:20,251 - #33 &&
INFO  02:33:20,251 - #50 3
INFO  02:33:20,251 - #27 ==
INFO  02:33:20,251 - #50 3
INFO  02:33:20,251 - #34 ||
INFO  02:33:20,252 - #50 5
INFO  02:33:20,252 - #27 ==
INFO  02:33:20,252 - #50 1
INFO  02:33:20,252 - #33 &&
INFO  02:33:20,252 - #50 2
INFO  02:33:20,252 - #27 ==
INFO  02:33:20,252 - #50 2
INFO  02:33:20,252 - #33 &&
INFO  02:33:20,252 - #50 3
INFO  02:33:20,252 - #27 ==
INFO  02:33:20,253 - #50 3
INFO  02:33:20,253 - #34 ||
INFO  02:33:20,253 - #50 2
INFO  02:33:20,253 - #31 <
INFO  02:33:20,253 - #50 1
INFO  02:33:20,253 - #34 ||
INFO  02:33:20,253 - #49 false
INFO  02:33:20,253 - #43 )
INFO  02:33:20,253 - #46 {
INFO  02:33:20,253 - #13 print
INFO  02:33:20,253 - #42 (
INFO  02:33:20,254 - #50 1
INFO  02:33:20,254 - #43 )
INFO  02:33:20,254 - #38 ;
INFO  02:33:20,254 - #47 }
INFO  02:33:20,254 - #7 else
INFO  02:33:20,254 - #46 {
INFO  02:33:20,255 - #13 print
INFO  02:33:20,255 - #42 (
INFO  02:33:20,255 - #50 2
INFO  02:33:20,255 - #43 )
INFO  02:33:20,255 - #38 ;
INFO  02:33:20,255 - #47 }
INFO  02:33:20,255 - #47 }
INFO  02:33:20,255 - #47 }
INFO  02:33:20,261 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  ConditionTerms(
                    ConditionTerms(
                      ConditionTerms(
                        SingleCondTerm(
                          SingleCondFact(
                            ConditionFact(
                              TermExpression(
                                SingleFactor(
                                  NumConstFactor(
                                   64
                                  ) [NumConstFactor]
                                ) [SingleFactor]
                              ) [TermExpression]
                              RelopLess(
                              ) [RelopLess]
                              TermExpression(
                                SingleFactor(
                                  NumConstFactor(
                                   63
                                  ) [NumConstFactor]
                                ) [SingleFactor]
                              ) [TermExpression]
                            ) [ConditionFact]
                          ) [SingleCondFact]
                        ) [SingleCondTerm]
                        Or(
                        ) [Or]
                        SingleCondFact(
                          CondFactExpr(
                            TermExpression(
                              SingleFactor(
                                BoolConstFactor(
                                 false
                                ) [BoolConstFactor]
                              ) [SingleFactor]
                            ) [TermExpression]
                          ) [CondFactExpr]
                        ) [SingleCondFact]
                      ) [ConditionTerms]
                      Or(
                      ) [Or]
                      ConditionTerm(
                        ConditionTerm(
                          SingleCondFact(
                            ConditionFact(
                              TermExpression(
                                SingleFactor(
                                  NumConstFactor(
                                   1
                                  ) [NumConstFactor]
                                ) [SingleFactor]
                              ) [TermExpression]
                              RelopEqual(
                              ) [RelopEqual]
                              TermExpression(
                                SingleFactor(
                                  NumConstFactor(
                                   1
                                  ) [NumConstFactor]
                                ) [SingleFactor]
                              ) [TermExpression]
                            ) [ConditionFact]
                          ) [SingleCondFact]
                          And(
                          ) [And]
                          ConditionFact(
                            TermExpression(
                              SingleFactor(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactor]
                            ) [TermExpression]
                            RelopEqual(
                            ) [RelopEqual]
                            TermExpression(
                              SingleFactor(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactor]
                            ) [TermExpression]
                          ) [ConditionFact]
                        ) [ConditionTerm]
                        And(
                        ) [And]
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               3
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopEqual(
                          ) [RelopEqual]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               3
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [ConditionTerm]
                    ) [ConditionTerms]
                    Or(
                    ) [Or]
                    ConditionTerm(
                      ConditionTerm(
                        SingleCondFact(
                          ConditionFact(
                            TermExpression(
                              SingleFactor(
                                NumConstFactor(
                                 5
                                ) [NumConstFactor]
                              ) [SingleFactor]
                            ) [TermExpression]
                            RelopEqual(
                            ) [RelopEqual]
                            TermExpression(
                              SingleFactor(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactor]
                            ) [TermExpression]
                          ) [ConditionFact]
                        ) [SingleCondFact]
                        And(
                        ) [And]
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopEqual(
                          ) [RelopEqual]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [ConditionTerm]
                      And(
                      ) [And]
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopEqual(
                        ) [RelopEqual]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [ConditionTerm]
                  ) [ConditionTerms]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           2
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopLess(
                      ) [RelopLess]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           1
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                SingleCondFact(
                  CondFactExpr(
                    TermExpression(
                      SingleFactor(
                        BoolConstFactor(
                         false
                        ) [BoolConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [CondFactExpr]
                ) [SingleCondFact]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:33:20,262 - ===================================
INFO  02:33:20,265 - Deklarisana promenljiva x na liniji 2
INFO  02:33:20,265 - Deklarisana promenljiva y na liniji 2
INFO  02:33:20,265 - Deklarisan rekord Rekord na liniji 3
INFO  02:33:20,265 - Deklarisana promenljiva d na liniji 5
INFO  02:33:20,266 - Deklarisana promenljiva c na liniji 5
INFO  02:33:20,266 - Deklarisana  klasa Klasa na liniji 7
INFO  02:33:20,266 - Deklarisana poljeb na liniji 9
INFO  02:33:20,266 - Deklarisana poljeb na liniji 9
INFO  02:33:20,266 - Deklarisana poljea na liniji 9
INFO  02:33:20,266 - Deklarisana poljea na liniji 9
INFO  02:33:20,266 - Deklarisana poljeg na liniji 9
INFO  02:33:20,266 - Deklarisana poljeg na liniji 9
INFO  02:33:20,266 - Obradjuje se funkcija nesto na liniji 16
INFO  02:33:20,266 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:33:20,266 - Obradjuje se funkcija kita na liniji 23
INFO  02:33:20,266 - Obradjuje se funkcija main na liniji 26
INFO  02:33:20,266 - Deklarisana niz promenljiva x na liniji 26
INFO  02:33:20,266 - Deklarisana promenljiva i na liniji 26
INFO  02:33:20,266 - Deklarisana promenljiva l na liniji 26
INFO  02:33:20,266 - Deklarisana promenljiva c na liniji 26
INFO  02:33:20,266 - Deklarisana promenljiva rek na liniji 26
INFO  02:33:20,267 - Deklarisana promenljiva neka na liniji 26
INFO  02:33:20,267 - Pristupa se promenljivoj i na liniji 28
INFO  02:33:20,267 -  Deklarisanih promenljivih ima = 7
INFO  02:33:20,267 - ===================================
INFO  02:33:20,274 - usao je nekada4
INFO  02:33:20,274 - neko sranje2
INFO  02:33:20,274 - neko sranje
INFO  02:33:20,274 - usao je nekada4
INFO  02:33:20,274 - neko sranje2
INFO  02:33:20,274 - neko sranje
INFO  02:33:20,275 - usao je nekada2
INFO  02:33:20,275 - neko sranje2
INFO  02:33:20,275 - neko sranje
INFO  02:33:20,275 - neko sranje
INFO  02:33:20,275 - neko sranje
INFO  02:33:20,275 - usao je nekada2
INFO  02:33:20,275 - neko sranje2
INFO  02:33:20,275 - neko sranje
INFO  02:33:20,275 - neko sranje
INFO  02:33:20,275 - neko sranje
INFO  02:33:20,275 - usao je nekada4
INFO  02:33:20,275 - neko sranje2
INFO  02:33:20,275 - neko sranje
INFO  02:33:20,275 - usao je nekada4
INFO  02:33:20,275 - neko sranje
INFO  02:33:20,275 - bratskalovskiii
INFO  02:33:20,276 - matched
INFO  02:33:20,276 - Parsiranje uspesno zavrseno!
INFO  02:33:34,085 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  02:33:34,137 - #2 program
INFO  02:33:34,138 - #48 p
INFO  02:33:34,138 - #48 int
INFO  02:33:34,139 - #48 x
INFO  02:33:34,139 - #38 ;
INFO  02:33:34,140 - #48 int
INFO  02:33:34,141 - #48 y
INFO  02:33:34,141 - #38 ;
INFO  02:33:34,141 - #21 record
INFO  02:33:34,141 - #48 Rekord
INFO  02:33:34,141 - #46 {
INFO  02:33:34,142 - #48 int
INFO  02:33:34,142 - #48 d
INFO  02:33:34,142 - #40 ,
INFO  02:33:34,142 - #48 c
INFO  02:33:34,142 - #38 ;
INFO  02:33:34,143 - #47 }
INFO  02:33:34,143 - #5 class
INFO  02:33:34,143 - #48 Klasa
INFO  02:33:34,143 - #46 {
INFO  02:33:34,144 - #48 int
INFO  02:33:34,144 - #48 b
INFO  02:33:34,144 - #40 ,
INFO  02:33:34,145 - #48 a
INFO  02:33:34,145 - #40 ,
INFO  02:33:34,145 - #48 g
INFO  02:33:34,145 - #38 ;
INFO  02:33:34,145 - #46 {
INFO  02:33:34,145 - #47 }
INFO  02:33:34,145 - #47 }
INFO  02:33:34,146 - #46 {
INFO  02:33:34,146 - #48 int
INFO  02:33:34,146 - #48 nesto
INFO  02:33:34,146 - #42 (
INFO  02:33:34,147 - #43 )
INFO  02:33:34,147 - #46 {
INFO  02:33:34,147 - #13 print
INFO  02:33:34,149 - #42 (
INFO  02:33:34,149 - #51 c
INFO  02:33:34,149 - #43 )
INFO  02:33:34,150 - #38 ;
INFO  02:33:34,150 - #13 print
INFO  02:33:34,151 - #42 (
INFO  02:33:34,151 - #50 5
INFO  02:33:34,151 - #43 )
INFO  02:33:34,151 - #38 ;
INFO  02:33:34,151 - #15 return
INFO  02:33:34,151 - #50 2
INFO  02:33:34,151 - #38 ;
INFO  02:33:34,151 - #47 }
INFO  02:33:34,151 - #3 void
INFO  02:33:34,152 - #48 kita2
INFO  02:33:34,152 - #42 (
INFO  02:33:34,152 - #43 )
INFO  02:33:34,152 - #46 {
INFO  02:33:34,152 - #47 }
INFO  02:33:34,152 - #3 void
INFO  02:33:34,152 - #48 kita
INFO  02:33:34,152 - #42 (
INFO  02:33:34,153 - #43 )
INFO  02:33:34,153 - #46 {
INFO  02:33:34,153 - #47 }
INFO  02:33:34,153 - #3 void
INFO  02:33:34,153 - #48 main
INFO  02:33:34,153 - #42 (
INFO  02:33:34,153 - #43 )
INFO  02:33:34,153 - #48 int
INFO  02:33:34,153 - #48 x
INFO  02:33:34,153 - #44 [
INFO  02:33:34,153 - #45 ]
INFO  02:33:34,153 - #40 ,
INFO  02:33:34,154 - #48 i
INFO  02:33:34,154 - #40 ,
INFO  02:33:34,154 - #48 l
INFO  02:33:34,154 - #38 ;
INFO  02:33:34,154 - #48 char
INFO  02:33:34,154 - #48 c
INFO  02:33:34,154 - #38 ;
INFO  02:33:34,154 - #48 Rekord
INFO  02:33:34,154 - #48 rek
INFO  02:33:34,154 - #38 ;
INFO  02:33:34,154 - #48 Klasa
INFO  02:33:34,154 - #48 neka
INFO  02:33:34,154 - #38 ;
INFO  02:33:34,154 - #46 {
INFO  02:33:34,154 - #48 i
INFO  02:33:34,155 - #35 =
INFO  02:33:34,156 - #50 0
INFO  02:33:34,156 - #38 ;
INFO  02:33:34,156 - #9 if
INFO  02:33:34,156 - #42 (
INFO  02:33:34,157 - #50 64
INFO  02:33:34,157 - #31 <
INFO  02:33:34,157 - #50 63
INFO  02:33:34,158 - #34 ||
INFO  02:33:34,158 - #49 false
INFO  02:33:34,158 - #34 ||
INFO  02:33:34,158 - #50 1
INFO  02:33:34,158 - #27 ==
INFO  02:33:34,159 - #50 1
INFO  02:33:34,161 - #33 &&
INFO  02:33:34,161 - #50 3
INFO  02:33:34,161 - #27 ==
INFO  02:33:34,161 - #50 2
INFO  02:33:34,161 - #33 &&
INFO  02:33:34,162 - #50 3
INFO  02:33:34,162 - #27 ==
INFO  02:33:34,162 - #50 3
INFO  02:33:34,162 - #34 ||
INFO  02:33:34,162 - #50 5
INFO  02:33:34,162 - #27 ==
INFO  02:33:34,162 - #50 1
INFO  02:33:34,162 - #33 &&
INFO  02:33:34,162 - #50 2
INFO  02:33:34,162 - #27 ==
INFO  02:33:34,162 - #50 2
INFO  02:33:34,162 - #33 &&
INFO  02:33:34,162 - #50 3
INFO  02:33:34,162 - #27 ==
INFO  02:33:34,162 - #50 3
INFO  02:33:34,162 - #34 ||
INFO  02:33:34,162 - #50 2
INFO  02:33:34,162 - #31 <
INFO  02:33:34,163 - #50 1
INFO  02:33:34,163 - #34 ||
INFO  02:33:34,163 - #49 false
INFO  02:33:34,163 - #43 )
INFO  02:33:34,163 - #46 {
INFO  02:33:34,163 - #13 print
INFO  02:33:34,163 - #42 (
INFO  02:33:34,163 - #50 1
INFO  02:33:34,163 - #43 )
INFO  02:33:34,163 - #38 ;
INFO  02:33:34,163 - #47 }
INFO  02:33:34,163 - #7 else
INFO  02:33:34,163 - #46 {
INFO  02:33:34,164 - #13 print
INFO  02:33:34,164 - #42 (
INFO  02:33:34,164 - #50 2
INFO  02:33:34,165 - #43 )
INFO  02:33:34,165 - #38 ;
INFO  02:33:34,165 - #47 }
INFO  02:33:34,165 - #47 }
INFO  02:33:34,165 - #47 }
INFO  02:33:34,171 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  ConditionTerms(
                    ConditionTerms(
                      ConditionTerms(
                        SingleCondTerm(
                          SingleCondFact(
                            ConditionFact(
                              TermExpression(
                                SingleFactor(
                                  NumConstFactor(
                                   64
                                  ) [NumConstFactor]
                                ) [SingleFactor]
                              ) [TermExpression]
                              RelopLess(
                              ) [RelopLess]
                              TermExpression(
                                SingleFactor(
                                  NumConstFactor(
                                   63
                                  ) [NumConstFactor]
                                ) [SingleFactor]
                              ) [TermExpression]
                            ) [ConditionFact]
                          ) [SingleCondFact]
                        ) [SingleCondTerm]
                        Or(
                        ) [Or]
                        SingleCondFact(
                          CondFactExpr(
                            TermExpression(
                              SingleFactor(
                                BoolConstFactor(
                                 false
                                ) [BoolConstFactor]
                              ) [SingleFactor]
                            ) [TermExpression]
                          ) [CondFactExpr]
                        ) [SingleCondFact]
                      ) [ConditionTerms]
                      Or(
                      ) [Or]
                      ConditionTerm(
                        ConditionTerm(
                          SingleCondFact(
                            ConditionFact(
                              TermExpression(
                                SingleFactor(
                                  NumConstFactor(
                                   1
                                  ) [NumConstFactor]
                                ) [SingleFactor]
                              ) [TermExpression]
                              RelopEqual(
                              ) [RelopEqual]
                              TermExpression(
                                SingleFactor(
                                  NumConstFactor(
                                   1
                                  ) [NumConstFactor]
                                ) [SingleFactor]
                              ) [TermExpression]
                            ) [ConditionFact]
                          ) [SingleCondFact]
                          And(
                          ) [And]
                          ConditionFact(
                            TermExpression(
                              SingleFactor(
                                NumConstFactor(
                                 3
                                ) [NumConstFactor]
                              ) [SingleFactor]
                            ) [TermExpression]
                            RelopEqual(
                            ) [RelopEqual]
                            TermExpression(
                              SingleFactor(
                                NumConstFactor(
                                 2
                                ) [NumConstFactor]
                              ) [SingleFactor]
                            ) [TermExpression]
                          ) [ConditionFact]
                        ) [ConditionTerm]
                        And(
                        ) [And]
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               3
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopEqual(
                          ) [RelopEqual]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               3
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [ConditionTerm]
                    ) [ConditionTerms]
                    Or(
                    ) [Or]
                    ConditionTerm(
                      ConditionTerm(
                        SingleCondFact(
                          ConditionFact(
                            TermExpression(
                              SingleFactor(
                                NumConstFactor(
                                 5
                                ) [NumConstFactor]
                              ) [SingleFactor]
                            ) [TermExpression]
                            RelopEqual(
                            ) [RelopEqual]
                            TermExpression(
                              SingleFactor(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactor]
                            ) [TermExpression]
                          ) [ConditionFact]
                        ) [SingleCondFact]
                        And(
                        ) [And]
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopEqual(
                          ) [RelopEqual]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               2
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [ConditionTerm]
                      And(
                      ) [And]
                      ConditionFact(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        RelopEqual(
                        ) [RelopEqual]
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             3
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                      ) [ConditionFact]
                    ) [ConditionTerm]
                  ) [ConditionTerms]
                  Or(
                  ) [Or]
                  SingleCondFact(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           2
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopLess(
                      ) [RelopLess]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           1
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFact]
                ) [ConditionTerms]
                Or(
                ) [Or]
                SingleCondFact(
                  CondFactExpr(
                    TermExpression(
                      SingleFactor(
                        BoolConstFactor(
                         false
                        ) [BoolConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [CondFactExpr]
                ) [SingleCondFact]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:33:34,172 - ===================================
INFO  02:33:34,175 - Deklarisana promenljiva x na liniji 2
INFO  02:33:34,175 - Deklarisana promenljiva y na liniji 2
INFO  02:33:34,175 - Deklarisan rekord Rekord na liniji 3
INFO  02:33:34,176 - Deklarisana promenljiva d na liniji 5
INFO  02:33:34,176 - Deklarisana promenljiva c na liniji 5
INFO  02:33:34,176 - Deklarisana  klasa Klasa na liniji 7
INFO  02:33:34,176 - Deklarisana poljeb na liniji 9
INFO  02:33:34,176 - Deklarisana poljeb na liniji 9
INFO  02:33:34,176 - Deklarisana poljea na liniji 9
INFO  02:33:34,176 - Deklarisana poljea na liniji 9
INFO  02:33:34,176 - Deklarisana poljeg na liniji 9
INFO  02:33:34,176 - Deklarisana poljeg na liniji 9
INFO  02:33:34,176 - Obradjuje se funkcija nesto na liniji 16
INFO  02:33:34,176 - Obradjuje se funkcija kita2 na liniji 22
INFO  02:33:34,176 - Obradjuje se funkcija kita na liniji 23
INFO  02:33:34,176 - Obradjuje se funkcija main na liniji 26
INFO  02:33:34,176 - Deklarisana niz promenljiva x na liniji 26
INFO  02:33:34,176 - Deklarisana promenljiva i na liniji 26
INFO  02:33:34,176 - Deklarisana promenljiva l na liniji 26
INFO  02:33:34,176 - Deklarisana promenljiva c na liniji 26
INFO  02:33:34,176 - Deklarisana promenljiva rek na liniji 26
INFO  02:33:34,177 - Deklarisana promenljiva neka na liniji 26
INFO  02:33:34,177 - Pristupa se promenljivoj i na liniji 28
INFO  02:33:34,178 -  Deklarisanih promenljivih ima = 7
INFO  02:33:34,178 - ===================================
INFO  02:33:34,183 - usao je nekada4
INFO  02:33:34,183 - neko sranje2
INFO  02:33:34,183 - neko sranje
INFO  02:33:34,184 - usao je nekada4
INFO  02:33:34,184 - neko sranje2
INFO  02:33:34,184 - neko sranje
INFO  02:33:34,184 - usao je nekada2
INFO  02:33:34,184 - neko sranje2
INFO  02:33:34,184 - neko sranje
INFO  02:33:34,184 - neko sranje
INFO  02:33:34,184 - neko sranje
INFO  02:33:34,184 - usao je nekada2
INFO  02:33:34,184 - neko sranje2
INFO  02:33:34,184 - neko sranje
INFO  02:33:34,184 - neko sranje
INFO  02:33:34,184 - neko sranje
INFO  02:33:34,184 - usao je nekada4
INFO  02:33:34,185 - neko sranje2
INFO  02:33:34,185 - neko sranje
INFO  02:33:34,185 - usao je nekada4
INFO  02:33:34,185 - neko sranje
INFO  02:33:34,185 - bratskalovskiii
INFO  02:33:34,185 - matched
INFO  02:33:34,185 - Parsiranje uspesno zavrseno!
