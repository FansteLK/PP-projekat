INFO  00:15:46,292 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  00:15:46,343 - #2 program
INFO  00:15:46,343 - #48 p
INFO  00:15:46,343 - #48 int
INFO  00:15:46,344 - #48 x
INFO  00:15:46,345 - #38 ;
INFO  00:15:46,345 - #48 int
INFO  00:15:46,346 - #48 y
INFO  00:15:46,346 - #38 ;
INFO  00:15:46,346 - #21 record
INFO  00:15:46,346 - #48 Rekord
INFO  00:15:46,346 - #46 {
INFO  00:15:46,347 - #48 int
INFO  00:15:46,347 - #48 d
INFO  00:15:46,347 - #40 ,
INFO  00:15:46,347 - #48 c
INFO  00:15:46,347 - #38 ;
INFO  00:15:46,348 - #47 }
INFO  00:15:46,348 - #5 class
INFO  00:15:46,348 - #48 Klasa
INFO  00:15:46,348 - #46 {
INFO  00:15:46,349 - #48 int
INFO  00:15:46,349 - #48 b
INFO  00:15:46,357 - #40 ,
INFO  00:15:46,357 - #48 a
INFO  00:15:46,357 - #40 ,
INFO  00:15:46,357 - #48 g
INFO  00:15:46,357 - #38 ;
INFO  00:15:46,357 - #46 {
INFO  00:15:46,357 - #47 }
INFO  00:15:46,358 - #47 }
INFO  00:15:46,358 - #46 {
INFO  00:15:46,358 - #48 int
INFO  00:15:46,359 - #48 nesto
INFO  00:15:46,359 - #42 (
INFO  00:15:46,359 - #43 )
INFO  00:15:46,359 - #46 {
INFO  00:15:46,359 - #13 print
INFO  00:15:46,360 - #42 (
INFO  00:15:46,361 - #51 c
INFO  00:15:46,361 - #43 )
INFO  00:15:46,361 - #38 ;
INFO  00:15:46,361 - #13 print
INFO  00:15:46,362 - #42 (
INFO  00:15:46,362 - #50 5
INFO  00:15:46,362 - #43 )
INFO  00:15:46,362 - #38 ;
INFO  00:15:46,362 - #15 return
INFO  00:15:46,362 - #50 2
INFO  00:15:46,362 - #38 ;
INFO  00:15:46,362 - #47 }
INFO  00:15:46,362 - #3 void
INFO  00:15:46,363 - #48 kita2
INFO  00:15:46,363 - #42 (
INFO  00:15:46,363 - #43 )
INFO  00:15:46,363 - #46 {
INFO  00:15:46,363 - #47 }
INFO  00:15:46,363 - #3 void
INFO  00:15:46,363 - #48 kita
INFO  00:15:46,363 - #42 (
INFO  00:15:46,363 - #43 )
INFO  00:15:46,363 - #46 {
INFO  00:15:46,364 - #47 }
INFO  00:15:46,364 - #3 void
INFO  00:15:46,364 - #48 main
INFO  00:15:46,364 - #42 (
INFO  00:15:46,364 - #43 )
INFO  00:15:46,364 - #48 int
INFO  00:15:46,364 - #48 x
INFO  00:15:46,364 - #44 [
INFO  00:15:46,364 - #45 ]
INFO  00:15:46,364 - #40 ,
INFO  00:15:46,364 - #48 i
INFO  00:15:46,365 - #40 ,
INFO  00:15:46,365 - #48 l
INFO  00:15:46,365 - #38 ;
INFO  00:15:46,365 - #48 char
INFO  00:15:46,365 - #48 c
INFO  00:15:46,365 - #38 ;
INFO  00:15:46,365 - #48 Rekord
INFO  00:15:46,365 - #48 rek
INFO  00:15:46,365 - #38 ;
INFO  00:15:46,365 - #48 Klasa
INFO  00:15:46,365 - #48 neka
INFO  00:15:46,365 - #38 ;
INFO  00:15:46,365 - #46 {
INFO  00:15:46,365 - #48 i
INFO  00:15:46,365 - #35 =
INFO  00:15:46,366 - #50 0
INFO  00:15:46,367 - #38 ;
INFO  00:15:46,367 - #9 if
INFO  00:15:46,367 - #42 (
INFO  00:15:46,367 - #49 true
INFO  00:15:46,367 - #34 ||
INFO  00:15:46,368 - #50 5
INFO  00:15:46,369 - #27 ==
INFO  00:15:46,369 - #50 6
INFO  00:15:46,370 - #33 &&
INFO  00:15:46,370 - #50 3
INFO  00:15:46,370 - #27 ==
INFO  00:15:46,370 - #50 4
INFO  00:15:46,371 - #34 ||
INFO  00:15:46,371 - #50 1
INFO  00:15:46,371 - #29 >
INFO  00:15:46,371 - #50 2
INFO  00:15:46,371 - #43 )
INFO  00:15:46,371 - #46 {
INFO  00:15:46,372 - #13 print
INFO  00:15:46,372 - #42 (
INFO  00:15:46,372 - #50 1
INFO  00:15:46,372 - #43 )
INFO  00:15:46,372 - #38 ;
INFO  00:15:46,372 - #47 }
INFO  00:15:46,372 - #7 else
INFO  00:15:46,372 - #46 {
INFO  00:15:46,373 - #13 print
INFO  00:15:46,373 - #42 (
INFO  00:15:46,373 - #50 2
INFO  00:15:46,373 - #43 )
INFO  00:15:46,373 - #38 ;
INFO  00:15:46,373 - #47 }
INFO  00:15:46,373 - #47 }
INFO  00:15:46,373 - #47 }
INFO  00:15:46,379 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VariableDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               y
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclaration]
      ) [Declarations]
      RecordDeclaration(
        RecordDecl(
          RecordName(
            Type(
             Rekord
            ) [Type]
          ) [RecordName]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
        ) [RecordDecl]
      ) [RecordDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDecl1(
        ClassName(
          Type(
           Klasa
          ) [Type]
        ) [ClassName]
        DoesntExtendsClass(
        ) [DoesntExtendsClass]
        CLassVarDeclarations2(
          SingleClassDecl(
            ClassVarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationClassList(
                VarDeclarationClassList(
                  SingleClassVar(
                    SingleClassVarDeclaration(
                     b
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [SingleClassVar]
                  SingleClassVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleClassVarDeclaration]
                ) [VarDeclarationClassList]
                SingleClassVarDeclaration(
                 g
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleClassVarDeclaration]
              ) [VarDeclarationClassList]
            ) [ClassVarDeclaration]
          ) [SingleClassDecl]
        ) [CLassVarDeclarations2]
        EmptyClassBody2(
        ) [EmptyClassBody2]
      ) [ClassDecl1]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             nesto
            ) [MethodDeclType]
            NoFormParams(
            ) [NoFormParams]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            CharConstFactor(
                             c
                            ) [CharConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    PrintStmt(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           5
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      NoNumConstPrint(
                      ) [NoNumConstPrint]
                    ) [PrintStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         2
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodVoidType(
           kita2
          ) [MethodVoidType]
          NoFormParams(
          ) [NoFormParams]
          NoVarDecls(
          ) [NoVarDecls]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            NoStatements(
            ) [NoStatements]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         kita
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          NoStatements(
          ) [NoStatements]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  VarDeclarationList(
                    SingleVar(
                      SingleVarDeclaration(
                       x
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleVarDeclaration]
                    ) [SingleVar]
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [VarDeclarationList]
                  SingleVarDeclaration(
                   l
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
            VariableDeclaration(
              Type(
               char
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 c
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             Rekord
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               rek
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        VariableDeclaration(
          Type(
           Klasa
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             neka
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclarations]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  Designator(
                    Base(
                     i
                    ) [Base]
                    NoDesignatorAdded(
                    ) [NoDesignatorAdded]
                  ) [Designator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            MatchedStatement(
              If(
              ) [If]
              ConditionTerms(
                ConditionTerms(
                  SingleCondTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        CondFactExpr(
                          TermExpression(
                            SingleFactor(
                              BoolConstFactor(
                               true
                              ) [BoolConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [CondFactExpr]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                  ) [SingleCondTerm]
                  Or(
                  ) [Or]
                  ConditionTerm(
                    SingleCondFact(
                      SingleCondFactJMP(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               5
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopEqual(
                          ) [RelopEqual]
                          TermExpression(
                            SingleFactor(
                              NumConstFactor(
                               6
                              ) [NumConstFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFactJMP]
                    ) [SingleCondFact]
                    And(
                    ) [And]
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           3
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopEqual(
                      ) [RelopEqual]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           4
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [ConditionTerm]
                ) [ConditionTerms]
                Or(
                ) [Or]
                SingleCondFact(
                  SingleCondFactJMP(
                    ConditionFact(
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           1
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      RelopGreater(
                      ) [RelopGreater]
                      TermExpression(
                        SingleFactor(
                          NumConstFactor(
                           2
                          ) [NumConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [ConditionFact]
                  ) [SingleCondFactJMP]
                ) [SingleCondFact]
              ) [ConditionTerms]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             1
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              Else(
              ) [Else]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    NoStatements(
                    ) [NoStatements]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            NumConstFactor(
                             2
                            ) [NumConstFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
            ) [MatchedStatement]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  00:15:46,379 - ===================================
INFO  00:15:46,383 - Deklarisana promenljiva x na liniji 2
INFO  00:15:46,383 - Deklarisana promenljiva y na liniji 2
INFO  00:15:46,383 - Deklarisan rekord Rekord na liniji 3
INFO  00:15:46,383 - Deklarisana promenljiva d na liniji 5
INFO  00:15:46,383 - Deklarisana promenljiva c na liniji 5
INFO  00:15:46,383 - Deklarisana  klasa Klasa na liniji 7
INFO  00:15:46,383 - Deklarisana poljeb na liniji 9
INFO  00:15:46,383 - Deklarisana poljeb na liniji 9
INFO  00:15:46,383 - Deklarisana poljea na liniji 9
INFO  00:15:46,383 - Deklarisana poljea na liniji 9
INFO  00:15:46,383 - Deklarisana poljeg na liniji 9
INFO  00:15:46,383 - Deklarisana poljeg na liniji 9
INFO  00:15:46,383 - Obradjuje se funkcija nesto na liniji 16
INFO  00:15:46,383 - Obradjuje se funkcija kita2 na liniji 22
INFO  00:15:46,384 - Obradjuje se funkcija kita na liniji 23
INFO  00:15:46,384 - Obradjuje se funkcija main na liniji 26
INFO  00:15:46,384 - Deklarisana niz promenljiva x na liniji 26
INFO  00:15:46,384 - Deklarisana promenljiva i na liniji 26
INFO  00:15:46,384 - Deklarisana promenljiva l na liniji 26
INFO  00:15:46,384 - Deklarisana promenljiva c na liniji 26
INFO  00:15:46,384 - Deklarisana promenljiva rek na liniji 26
INFO  00:15:46,384 - Deklarisana promenljiva neka na liniji 26
INFO  00:15:46,384 - Pristupa se promenljivoj i na liniji 28
INFO  00:15:46,385 -  Deklarisanih promenljivih ima = 7
INFO  00:15:46,385 - ===================================
INFO  00:15:46,389 - neko sranje2
INFO  00:15:46,389 - neko sranje
INFO  00:15:46,389 - neko sranje
INFO  00:15:46,390 - neko sranje2
INFO  00:15:46,390 - neko sranje
INFO  00:15:46,390 - matched
INFO  00:15:46,390 - Parsiranje uspesno zavrseno!
