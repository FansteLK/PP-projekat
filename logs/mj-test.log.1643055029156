INFO  21:10:08,562 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\functionsAndStatementsErrors.mj
INFO  21:10:08,638 - #2 program
INFO  21:10:08,638 - #48 p
INFO  21:10:08,638 - #8 const
INFO  21:10:08,639 - #48 int
INFO  21:10:08,640 - #48 size
INFO  21:10:08,640 - #35 =
INFO  21:10:08,641 - #50 10
INFO  21:10:08,641 - #38 ;
INFO  21:10:08,642 - #5 class
INFO  21:10:08,643 - #48 Table
INFO  21:10:08,643 - #16 extends
INFO  21:10:08,644 - #48 Table
INFO  21:10:08,644 - #46 {
INFO  21:10:08,644 - #48 int
INFO  21:10:08,645 - #48 pos
INFO  21:10:08,645 - #44 [
INFO  21:10:08,645 - #45 ]
INFO  21:10:08,645 - #40 ,
INFO  21:10:08,646 - #48 neg
INFO  21:10:08,647 - #44 [
INFO  21:10:08,647 - #45 ]
INFO  21:10:08,649 - #38 ;
INFO  21:10:08,649 - #46 {
INFO  21:10:08,649 - #48 Table
INFO  21:10:08,649 - #42 (
INFO  21:10:08,649 - #43 )
INFO  21:10:08,650 - #46 {
INFO  21:10:08,650 - #19 super
INFO  21:10:08,651 - #42 (
INFO  21:10:08,651 - #43 )
INFO  21:10:08,651 - #38 ;
INFO  21:10:08,651 - #15 return
INFO  21:10:08,653 - #38 ;
INFO  21:10:08,653 - #47 }
INFO  21:10:08,653 - #3 void
INFO  21:10:08,655 - #48 putp
INFO  21:10:08,655 - #42 (
INFO  21:10:08,656 - #48 int
INFO  21:10:08,657 - #48 a
INFO  21:10:08,657 - #40 ,
INFO  21:10:08,658 - #48 int
INFO  21:10:08,658 - #48 idx
INFO  21:10:08,658 - #43 )
INFO  21:10:08,658 - #46 {
INFO  21:10:08,658 - #48 pos
INFO  21:10:08,659 - #44 [
INFO  21:10:08,660 - #48 idx
INFO  21:10:08,660 - #45 ]
INFO  21:10:08,660 - #35 =
INFO  21:10:08,660 - #48 a
INFO  21:10:08,661 - #38 ;
INFO  21:10:08,661 - #47 }
INFO  21:10:08,662 - #3 void
INFO  21:10:08,663 - #48 putn
INFO  21:10:08,663 - #42 (
INFO  21:10:08,663 - #48 int
INFO  21:10:08,663 - #48 a
INFO  21:10:08,663 - #40 ,
INFO  21:10:08,663 - #48 int
INFO  21:10:08,664 - #48 idx
INFO  21:10:08,664 - #43 )
INFO  21:10:08,664 - #46 {
INFO  21:10:08,664 - #48 neg
INFO  21:10:08,664 - #44 [
INFO  21:10:08,664 - #48 C
INFO  21:10:08,664 - #45 ]
INFO  21:10:08,665 - #35 =
INFO  21:10:08,665 - #48 a
INFO  21:10:08,665 - #38 ;
INFO  21:10:08,665 - #47 }
INFO  21:10:08,665 - #48 int
INFO  21:10:08,666 - #48 getp
INFO  21:10:08,666 - #42 (
INFO  21:10:08,666 - #48 int
INFO  21:10:08,666 - #48 idx
INFO  21:10:08,666 - #43 )
INFO  21:10:08,666 - #46 {
INFO  21:10:08,666 - #15 return
INFO  21:10:08,667 - #48 idx
INFO  21:10:08,667 - #38 ;
INFO  21:10:08,667 - #47 }
INFO  21:10:08,667 - #48 int
INFO  21:10:08,667 - #48 getn
INFO  21:10:08,668 - #42 (
INFO  21:10:08,668 - #48 int
INFO  21:10:08,668 - #48 idx
INFO  21:10:08,668 - #43 )
INFO  21:10:08,668 - #46 {
INFO  21:10:08,668 - #15 return
INFO  21:10:08,668 - #48 neg
INFO  21:10:08,668 - #44 [
INFO  21:10:08,668 - #48 idx
INFO  21:10:08,668 - #45 ]
INFO  21:10:08,669 - #38 ;
INFO  21:10:08,669 - #47 }
INFO  21:10:08,669 - #47 }
INFO  21:10:08,669 - #47 }
INFO  21:10:08,670 - #21 record
INFO  21:10:08,670 - #48 Board
INFO  21:10:08,670 - #46 {
INFO  21:10:08,673 - #48 int
INFO  21:10:08,674 - #48 rows
INFO  21:10:08,674 - #40 ,
INFO  21:10:08,674 - #48 columns
INFO  21:10:08,674 - #38 ;
INFO  21:10:08,674 - #47 }
INFO  21:10:08,675 - #48 Table
INFO  21:10:08,676 - #48 val
INFO  21:10:08,676 - #38 ;
INFO  21:10:08,676 - #48 Board
INFO  21:10:08,676 - #48 board
INFO  21:10:08,676 - #38 ;
INFO  21:10:08,676 - #46 {
INFO  21:10:08,676 - #3 void
INFO  21:10:08,677 - #48 f
INFO  21:10:08,677 - #42 (
INFO  21:10:08,677 - #48 char
INFO  21:10:08,678 - #48 ch
INFO  21:10:08,678 - #40 ,
INFO  21:10:08,678 - #48 int
INFO  21:10:08,678 - #48 a
INFO  21:10:08,678 - #40 ,
INFO  21:10:08,678 - #48 int
INFO  21:10:08,678 - #48 arg
INFO  21:10:08,678 - #43 )
INFO  21:10:08,678 - #48 int
INFO  21:10:08,678 - #48 x
INFO  21:10:08,679 - #38 ;
INFO  21:10:08,679 - #46 {
INFO  21:10:08,679 - #48 x
INFO  21:10:08,679 - #35 =
INFO  21:10:08,679 - #48 arg
INFO  21:10:08,679 - #38 ;
INFO  21:10:08,679 - #47 }
INFO  21:10:08,679 - #3 void
INFO  21:10:08,680 - #48 mains
INFO  21:10:08,680 - #42 (
INFO  21:10:08,680 - #43 )
INFO  21:10:08,681 - #48 int
INFO  21:10:08,681 - #48 x
INFO  21:10:08,681 - #40 ,
INFO  21:10:08,681 - #48 i
INFO  21:10:08,681 - #38 ;
INFO  21:10:08,681 - #48 char
INFO  21:10:08,681 - #48 c
INFO  21:10:08,681 - #38 ;
INFO  21:10:08,681 - #46 {
INFO  21:10:08,682 - #48 val
INFO  21:10:08,682 - #35 =
INFO  21:10:08,682 - #12 new
INFO  21:10:08,682 - #48 Table
INFO  21:10:08,682 - #38 ;
INFO  21:10:08,683 - #48 val
INFO  21:10:08,683 - #41 .
INFO  21:10:08,683 - #48 pos
INFO  21:10:08,683 - #35 =
INFO  21:10:08,683 - #12 new
INFO  21:10:08,684 - #48 int
INFO  21:10:08,684 - #44 [
INFO  21:10:08,684 - #48 size
INFO  21:10:08,684 - #45 ]
INFO  21:10:08,684 - #38 ;
INFO  21:10:08,684 - #48 val
INFO  21:10:08,684 - #41 .
INFO  21:10:08,684 - #48 neg
INFO  21:10:08,685 - #35 =
INFO  21:10:08,685 - #12 new
INFO  21:10:08,685 - #48 int
INFO  21:10:08,685 - #44 [
INFO  21:10:08,685 - #48 size
INFO  21:10:08,685 - #45 ]
INFO  21:10:08,685 - #38 ;
INFO  21:10:08,685 - #14 read
INFO  21:10:08,685 - #42 (
INFO  21:10:08,685 - #48 x
INFO  21:10:08,686 - #43 )
INFO  21:10:08,686 - #38 ;
INFO  21:10:08,686 - #9 if
INFO  21:10:08,686 - #42 (
INFO  21:10:08,687 - #48 x
INFO  21:10:08,687 - #29 >
INFO  21:10:08,687 - #50 5
INFO  21:10:08,688 - #43 )
INFO  21:10:08,689 - #46 {
INFO  21:10:08,689 - #20 goto
INFO  21:10:08,689 - #48 skip
INFO  21:10:08,689 - #38 ;
INFO  21:10:08,690 - #47 }
INFO  21:10:08,690 - #48 i
INFO  21:10:08,691 - #35 =
INFO  21:10:08,691 - #50 0
INFO  21:10:08,691 - #38 ;
INFO  21:10:08,691 - #17 continue
INFO  21:10:08,691 - #38 ;
INFO  21:10:08,691 - #10 do
INFO  21:10:08,692 - #46 {
INFO  21:10:08,693 - #48 val
INFO  21:10:08,693 - #41 .
INFO  21:10:08,693 - #48 putp
INFO  21:10:08,693 - #42 (
INFO  21:10:08,693 - #50 0
INFO  21:10:08,693 - #40 ,
INFO  21:10:08,693 - #48 i
INFO  21:10:08,694 - #43 )
INFO  21:10:08,694 - #38 ;
INFO  21:10:08,694 - #48 val
INFO  21:10:08,694 - #41 .
INFO  21:10:08,694 - #48 putn
INFO  21:10:08,694 - #42 (
INFO  21:10:08,694 - #50 0
INFO  21:10:08,694 - #40 ,
INFO  21:10:08,694 - #48 i
INFO  21:10:08,695 - #43 )
INFO  21:10:08,695 - #38 ;
INFO  21:10:08,695 - #48 i
INFO  21:10:08,695 - #36 ++
INFO  21:10:08,695 - #38 ;
INFO  21:10:08,696 - #47 }
INFO  21:10:08,696 - #11 while
INFO  21:10:08,696 - #42 (
INFO  21:10:08,696 - #48 i
INFO  21:10:08,697 - #31 <
INFO  21:10:08,697 - #48 size
INFO  21:10:08,697 - #43 )
INFO  21:10:08,698 - #38 ;
INFO  21:10:08,698 - #48 skip2
INFO  21:10:08,698 - #39 :
INFO  21:10:08,698 - #48 f
INFO  21:10:08,698 - #42 (
INFO  21:10:08,698 - #48 c
INFO  21:10:08,698 - #40 ,
INFO  21:10:08,698 - #48 x
INFO  21:10:08,698 - #40 ,
INFO  21:10:08,699 - #48 i
INFO  21:10:08,699 - #43 )
INFO  21:10:08,699 - #38 ;
INFO  21:10:08,699 - #48 board
INFO  21:10:08,699 - #35 =
INFO  21:10:08,699 - #12 new
INFO  21:10:08,699 - #48 Board
INFO  21:10:08,699 - #38 ;
INFO  21:10:08,699 - #14 read
INFO  21:10:08,699 - #42 (
INFO  21:10:08,699 - #48 board
INFO  21:10:08,699 - #41 .
INFO  21:10:08,699 - #48 rows
INFO  21:10:08,699 - #43 )
INFO  21:10:08,699 - #38 ;
INFO  21:10:08,700 - #48 x
INFO  21:10:08,700 - #35 =
INFO  21:10:08,700 - #48 board
INFO  21:10:08,700 - #41 .
INFO  21:10:08,700 - #48 rows
INFO  21:10:08,700 - #38 ;
INFO  21:10:08,700 - #10 do
INFO  21:10:08,700 - #46 {
INFO  21:10:08,701 - #9 if
INFO  21:10:08,701 - #42 (
INFO  21:10:08,701 - #48 x
INFO  21:10:08,701 - #32 <=
INFO  21:10:08,701 - #50 0
INFO  21:10:08,702 - #43 )
INFO  21:10:08,702 - #4 break
INFO  21:10:08,702 - #38 ;
INFO  21:10:08,702 - #9 if
INFO  21:10:08,703 - #42 (
INFO  21:10:08,703 - #48 board
INFO  21:10:08,703 - #32 <=
INFO  21:10:08,703 - #48 board
INFO  21:10:08,703 - #34 ||
INFO  21:10:08,704 - #48 x
INFO  21:10:08,704 - #31 <
INFO  21:10:08,705 - #48 size
INFO  21:10:08,705 - #33 &&
INFO  21:10:08,705 - #48 board
INFO  21:10:08,706 - #31 <
INFO  21:10:08,706 - #48 size
INFO  21:10:08,706 - #43 )
INFO  21:10:08,706 - #46 {
INFO  21:10:08,707 - #48 val
INFO  21:10:08,707 - #41 .
INFO  21:10:08,707 - #48 putp
INFO  21:10:08,707 - #42 (
INFO  21:10:08,707 - #48 val
INFO  21:10:08,707 - #41 .
INFO  21:10:08,707 - #48 getp
INFO  21:10:08,707 - #42 (
INFO  21:10:08,707 - #48 x
INFO  21:10:08,707 - #43 )
INFO  21:10:08,707 - #22 +
INFO  21:10:08,708 - #50 1
INFO  21:10:08,709 - #40 ,
INFO  21:10:08,709 - #50 2
INFO  21:10:08,709 - #43 )
INFO  21:10:08,709 - #38 ;
INFO  21:10:08,710 - #47 }
INFO  21:10:08,710 - #7 else
INFO  21:10:08,710 - #9 if
INFO  21:10:08,711 - #42 (
INFO  21:10:08,711 - #23 -
INFO  21:10:08,711 - #48 size
INFO  21:10:08,711 - #31 <
INFO  21:10:08,711 - #48 x
INFO  21:10:08,711 - #33 &&
INFO  21:10:08,711 - #48 x
INFO  21:10:08,711 - #31 <
INFO  21:10:08,711 - #50 0
INFO  21:10:08,711 - #43 )
INFO  21:10:08,712 - #46 {
INFO  21:10:08,712 - #48 val
INFO  21:10:08,712 - #41 .
INFO  21:10:08,712 - #48 putn
INFO  21:10:08,712 - #42 (
INFO  21:10:08,712 - #48 val
INFO  21:10:08,712 - #41 .
INFO  21:10:08,712 - #48 getn
INFO  21:10:08,712 - #42 (
INFO  21:10:08,712 - #23 -
INFO  21:10:08,712 - #48 x
INFO  21:10:08,712 - #43 )
INFO  21:10:08,712 - #40 ,
INFO  21:10:08,713 - #50 2
INFO  21:10:08,713 - #43 )
INFO  21:10:08,713 - #38 ;
INFO  21:10:08,713 - #47 }
INFO  21:10:08,713 - #47 }
INFO  21:10:08,713 - #3 void
ERROR 21:10:08,713 - 
Sintaksna greska na liniji 62
INFO  21:10:08,713 - #48 mains
INFO  21:10:08,713 - #42 (
INFO  21:10:08,713 - #43 )
INFO  21:10:08,715 - #46 {
INFO  21:10:08,715 - #47 }
INFO  21:10:08,715 - #47 }
ERROR 21:10:08,715 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 65
