INFO  13:23:54,678 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  13:23:54,927 - #2 program
INFO  13:23:54,927 - #51 p
INFO  13:23:54,927 - #7 const
INFO  13:23:54,929 - #51 int
INFO  13:23:54,929 - #51 size
INFO  13:23:54,931 - #35 =
INFO  13:23:54,931 - #48 10
INFO  13:23:54,931 - #38 ;
INFO  13:23:54,936 - #4 class
INFO  13:23:54,938 - #51 Table
INFO  13:23:54,938 - #46 {
INFO  13:23:54,941 - #51 int
INFO  13:23:54,944 - #51 pos
INFO  13:23:54,944 - #44 [
INFO  13:23:54,944 - #45 ]
INFO  13:23:54,944 - #40 ,
INFO  13:23:54,948 - #51 neg
INFO  13:23:54,948 - #44 [
INFO  13:23:54,948 - #45 ]
INFO  13:23:54,948 - #38 ;
INFO  13:23:54,948 - #46 {
INFO  13:23:54,948 - #15 void
INFO  13:23:54,951 - #51 putp
INFO  13:23:54,951 - #42 (
INFO  13:23:54,951 - #51 int
INFO  13:23:54,951 - #51 a
INFO  13:23:54,951 - #40 ,
INFO  13:23:54,954 - #51 int
INFO  13:23:54,954 - #51 idx
INFO  13:23:54,954 - #43 )
INFO  13:23:54,954 - #46 {
INFO  13:23:54,955 - #51 thi
INFO  13:23:54,957 - #41 .
INFO  13:23:54,958 - #51 pos
INFO  13:23:54,958 - #44 [
INFO  13:23:54,958 - #51 idx
INFO  13:23:54,958 - #45 ]
INFO  13:23:54,958 - #35 =
INFO  13:23:54,958 - #51 a
INFO  13:23:54,961 - #38 ;
INFO  13:23:54,965 - #47 }
INFO  13:23:54,965 - #15 void
INFO  13:23:54,966 - #51 putn
INFO  13:23:54,968 - #42 (
INFO  13:23:54,969 - #51 int
INFO  13:23:54,969 - #51 a
INFO  13:23:54,969 - #40 ,
INFO  13:23:54,969 - #51 int
INFO  13:23:54,969 - #51 idx
INFO  13:23:54,969 - #43 )
INFO  13:23:54,969 - #46 {
INFO  13:23:54,969 - #51 thi
INFO  13:23:54,969 - #41 .
INFO  13:23:54,969 - #51 neg
INFO  13:23:54,970 - #44 [
INFO  13:23:54,970 - #51 idx
INFO  13:23:54,970 - #45 ]
INFO  13:23:54,970 - #35 =
INFO  13:23:54,970 - #51 a
INFO  13:23:54,970 - #38 ;
INFO  13:23:54,970 - #47 }
INFO  13:23:54,970 - #51 int
INFO  13:23:54,971 - #51 getp
INFO  13:23:54,971 - #42 (
INFO  13:23:54,971 - #51 int
INFO  13:23:54,971 - #51 idx
INFO  13:23:54,971 - #43 )
INFO  13:23:54,971 - #46 {
INFO  13:23:54,971 - #14 return
INFO  13:23:54,971 - #51 pos
INFO  13:23:54,971 - #44 [
INFO  13:23:54,972 - #51 idx
INFO  13:23:54,972 - #45 ]
INFO  13:23:54,972 - #38 ;
INFO  13:23:54,972 - #47 }
INFO  13:23:54,972 - #51 int
INFO  13:23:54,972 - #51 getn
INFO  13:23:54,972 - #42 (
INFO  13:23:54,972 - #51 int
INFO  13:23:54,972 - #51 idx
INFO  13:23:54,972 - #43 )
INFO  13:23:54,972 - #46 {
INFO  13:23:54,972 - #14 return
INFO  13:23:54,973 - #51 neg
INFO  13:23:54,973 - #44 [
INFO  13:23:54,973 - #51 idx
INFO  13:23:54,973 - #45 ]
INFO  13:23:54,973 - #38 ;
INFO  13:23:54,973 - #47 }
INFO  13:23:54,973 - #47 }
INFO  13:23:54,973 - #47 }
INFO  13:23:54,973 - #21 record
INFO  13:23:54,976 - #51 Board
INFO  13:23:54,976 - #46 {
INFO  13:23:54,976 - #51 int
INFO  13:23:54,976 - #51 rows
INFO  13:23:54,977 - #40 ,
INFO  13:23:54,977 - #51 columns
INFO  13:23:54,977 - #38 ;
INFO  13:23:54,977 - #47 }
INFO  13:23:54,977 - #51 Table
INFO  13:23:54,979 - #51 val
INFO  13:23:54,979 - #38 ;
INFO  13:23:54,979 - #51 Table
INFO  13:23:54,979 - #51 x
INFO  13:23:54,979 - #40 ,
INFO  13:23:54,980 - #40 ,
ERROR 13:23:54,980 - 
Sintaksna greska na liniji 16
INFO  13:23:54,980 - #51 y
INFO  13:23:54,980 - #38 ;
INFO  13:23:54,980 - #51 Board
INFO  13:23:54,980 - #51 board
INFO  13:23:54,980 - #38 ;
INFO  13:23:54,980 - #46 {
INFO  13:23:54,981 - #15 void
INFO  13:23:54,981 - #51 f
INFO  13:23:54,981 - #42 (
INFO  13:23:54,981 - #51 char
INFO  13:23:54,981 - #51 ch
INFO  13:23:54,981 - #40 ,
INFO  13:23:54,981 - #51 int
INFO  13:23:54,981 - #51 a
INFO  13:23:54,981 - #40 ,
INFO  13:23:54,981 - #51 int
INFO  13:23:54,981 - #51 arg
INFO  13:23:54,981 - #43 )
INFO  13:23:54,981 - #51 int
INFO  13:23:54,981 - #51 x
INFO  13:23:54,981 - #38 ;
INFO  13:23:54,981 - #46 {
INFO  13:23:54,981 - #51 x
INFO  13:23:54,982 - #35 =
INFO  13:23:54,982 - #51 arg
INFO  13:23:54,982 - #38 ;
INFO  13:23:54,982 - #47 }
INFO  13:23:54,982 - #15 void
INFO  13:23:54,982 - #51 main
INFO  13:23:54,982 - #42 (
INFO  13:23:54,982 - #43 )
INFO  13:23:54,982 - #51 int
INFO  13:23:54,982 - #51 x
INFO  13:23:54,982 - #40 ,
INFO  13:23:54,982 - #51 i
INFO  13:23:54,982 - #38 ;
INFO  13:23:54,982 - #51 char
INFO  13:23:54,982 - #51 c
INFO  13:23:54,982 - #38 ;
INFO  13:23:54,982 - #46 {
INFO  13:23:54,982 - #51 val
INFO  13:23:54,982 - #35 =
INFO  13:23:54,983 - #11 new
INFO  13:23:54,983 - #51 Table
INFO  13:23:54,983 - #38 ;
INFO  13:23:54,983 - #51 val
INFO  13:23:54,983 - #41 .
INFO  13:23:54,983 - #51 pos
INFO  13:23:54,983 - #35 =
INFO  13:23:54,983 - #11 new
INFO  13:23:54,983 - #51 int
INFO  13:23:54,983 - #44 [
INFO  13:23:54,983 - #51 size
INFO  13:23:54,983 - #45 ]
INFO  13:23:54,983 - #38 ;
INFO  13:23:54,983 - #51 val
INFO  13:23:54,985 - #41 .
INFO  13:23:54,985 - #51 neg
INFO  13:23:54,985 - #35 =
INFO  13:23:54,985 - #11 new
INFO  13:23:54,985 - #51 int
INFO  13:23:54,985 - #44 [
INFO  13:23:54,985 - #51 size
INFO  13:23:54,985 - #45 ]
INFO  13:23:54,986 - #38 ;
INFO  13:23:54,986 - #13 read
INFO  13:23:54,986 - #42 (
INFO  13:23:54,986 - #51 x
INFO  13:23:54,986 - #43 )
INFO  13:23:54,986 - #38 ;
INFO  13:23:54,986 - #8 if
INFO  13:23:54,986 - #42 (
INFO  13:23:54,986 - #51 x
INFO  13:23:54,986 - #29 >
INFO  13:23:54,986 - #48 5
INFO  13:23:54,986 - #43 )
INFO  13:23:54,986 - #46 {
INFO  13:23:54,986 - #20 goto
INFO  13:23:54,987 - #51 skip
INFO  13:23:54,987 - #38 ;
INFO  13:23:54,987 - #47 }
INFO  13:23:54,987 - #51 i
INFO  13:23:54,987 - #35 =
INFO  13:23:54,987 - #48 0
INFO  13:23:54,987 - #38 ;
INFO  13:23:54,987 - #9 do
INFO  13:23:54,987 - #46 {
INFO  13:23:54,987 - #51 val
INFO  13:23:54,987 - #41 .
INFO  13:23:54,987 - #51 putp
INFO  13:23:54,987 - #42 (
INFO  13:23:54,987 - #48 0
INFO  13:23:54,988 - #40 ,
INFO  13:23:54,988 - #51 i
INFO  13:23:54,988 - #43 )
INFO  13:23:54,988 - #38 ;
INFO  13:23:54,988 - #51 val
INFO  13:23:54,988 - #41 .
INFO  13:23:54,988 - #51 putn
INFO  13:23:54,988 - #42 (
INFO  13:23:54,988 - #48 0
INFO  13:23:54,988 - #40 ,
INFO  13:23:54,988 - #51 i
INFO  13:23:54,988 - #43 )
INFO  13:23:54,988 - #38 ;
INFO  13:23:54,988 - #51 i
INFO  13:23:54,988 - #36 ++
INFO  13:23:54,988 - #38 ;
INFO  13:23:54,988 - #47 }
INFO  13:23:54,989 - #10 while
INFO  13:23:54,989 - #42 (
INFO  13:23:54,989 - #51 i
INFO  13:23:54,989 - #31 <
INFO  13:23:54,989 - #51 size
INFO  13:23:54,989 - #43 )
INFO  13:23:54,989 - #38 ;
INFO  13:23:54,989 - #51 skip
INFO  13:23:54,989 - #39 :
INFO  13:23:54,989 - #51 f
INFO  13:23:54,989 - #42 (
INFO  13:23:54,989 - #51 c
INFO  13:23:54,989 - #40 ,
INFO  13:23:54,989 - #51 x
INFO  13:23:54,989 - #40 ,
INFO  13:23:54,989 - #51 i
INFO  13:23:54,990 - #43 )
INFO  13:23:54,990 - #38 ;
INFO  13:23:54,990 - #51 board
INFO  13:23:54,990 - #35 =
INFO  13:23:54,990 - #11 new
INFO  13:23:54,990 - #51 Board
INFO  13:23:54,990 - #38 ;
INFO  13:23:54,990 - #13 read
INFO  13:23:54,990 - #42 (
INFO  13:23:54,990 - #51 board
INFO  13:23:54,990 - #41 .
INFO  13:23:54,990 - #51 rows
INFO  13:23:54,990 - #43 )
INFO  13:23:54,990 - #38 ;
INFO  13:23:54,990 - #51 x
INFO  13:23:54,990 - #35 =
INFO  13:23:54,990 - #51 board
INFO  13:23:54,991 - #41 .
INFO  13:23:54,991 - #51 rows
INFO  13:23:54,991 - #38 ;
INFO  13:23:54,991 - #9 do
INFO  13:23:54,991 - #46 {
INFO  13:23:54,991 - #8 if
INFO  13:23:54,991 - #42 (
INFO  13:23:54,991 - #51 x
INFO  13:23:54,991 - #32 <=
INFO  13:23:54,991 - #48 0
INFO  13:23:54,991 - #43 )
INFO  13:23:54,991 - #3 break
INFO  13:23:54,991 - #38 ;
INFO  13:23:54,991 - #8 if
INFO  13:23:54,991 - #42 (
INFO  13:23:54,991 - #48 0
INFO  13:23:54,991 - #32 <=
INFO  13:23:54,991 - #51 x
INFO  13:23:54,991 - #33 &&
INFO  13:23:54,991 - #51 x
INFO  13:23:54,991 - #31 <
INFO  13:23:54,992 - #51 size
INFO  13:23:54,992 - #43 )
INFO  13:23:54,992 - #46 {
INFO  13:23:54,992 - #51 val
INFO  13:23:54,992 - #41 .
INFO  13:23:54,992 - #51 putp
INFO  13:23:54,992 - #42 (
INFO  13:23:54,992 - #51 val
INFO  13:23:54,992 - #41 .
INFO  13:23:54,992 - #51 getp
INFO  13:23:54,992 - #42 (
INFO  13:23:54,992 - #51 x
INFO  13:23:54,992 - #43 )
INFO  13:23:54,992 - #22 +
INFO  13:23:54,992 - #48 1
INFO  13:23:54,992 - #43 )
INFO  13:23:54,992 - #38 ;
INFO  13:23:54,992 - #47 }
INFO  13:23:54,992 - #6 else
INFO  13:23:54,992 - #8 if
INFO  13:23:54,993 - #42 (
INFO  13:23:54,993 - #23 -
INFO  13:23:54,993 - #51 size
INFO  13:23:54,993 - #31 <
INFO  13:23:54,993 - #51 c
INFO  13:23:54,993 - #33 &&
INFO  13:23:54,993 - #51 x
INFO  13:23:54,993 - #31 <
INFO  13:23:54,993 - #48 0
INFO  13:23:54,993 - #43 )
INFO  13:23:54,993 - #46 {
INFO  13:23:54,993 - #51 val
INFO  13:23:54,993 - #41 .
INFO  13:23:54,993 - #51 putn
INFO  13:23:54,993 - #42 (
INFO  13:23:54,993 - #51 val
INFO  13:23:54,993 - #41 .
INFO  13:23:54,993 - #51 getn
INFO  13:23:54,994 - #42 (
INFO  13:23:54,994 - #23 -
INFO  13:23:54,994 - #51 x
INFO  13:23:54,994 - #43 )
INFO  13:23:54,994 - #22 +
INFO  13:23:54,994 - #48 1
INFO  13:23:54,994 - #43 )
INFO  13:23:54,994 - #38 ;
INFO  13:23:54,994 - #47 }
INFO  13:23:54,994 - #13 read
INFO  13:23:54,994 - #42 (
INFO  13:23:54,994 - #51 x
INFO  13:23:54,994 - #43 )
INFO  13:23:54,994 - #38 ;
INFO  13:23:54,994 - #47 }
INFO  13:23:54,994 - #10 while
INFO  13:23:54,994 - #42 (
INFO  13:23:54,994 - #50 true
INFO  13:23:54,995 - #43 )
INFO  13:23:54,995 - #38 ;
INFO  13:23:54,995 - #47 }
INFO  13:23:54,995 - #47 }
ERROR 13:23:54,995 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 57
