INFO  22:45:25,384 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\program.mj
INFO  22:45:25,451 - #2 program
INFO  22:45:25,451 - #48 test302
INFO  22:45:25,451 - #8 const
INFO  22:45:25,452 - #48 int
INFO  22:45:25,452 - #48 jedan
INFO  22:45:25,453 - #35 =
INFO  22:45:25,453 - #50 1
INFO  22:45:25,453 - #38 ;
INFO  22:45:25,454 - #48 int
INFO  22:45:25,455 - #48 i
INFO  22:45:25,455 - #38 ;
INFO  22:45:25,456 - #48 bool
INFO  22:45:25,456 - #48 ibool
INFO  22:45:25,457 - #38 ;
INFO  22:45:25,457 - #48 int
INFO  22:45:25,457 - #48 niz2
INFO  22:45:25,457 - #38 ;
INFO  22:45:25,457 - #21 record
INFO  22:45:25,457 - #48 Test
INFO  22:45:25,457 - #46 {
INFO  22:45:25,458 - #48 int
INFO  22:45:25,460 - #48 niz
INFO  22:45:25,460 - #44 [
INFO  22:45:25,460 - #45 ]
INFO  22:45:25,460 - #38 ;
INFO  22:45:25,461 - #48 int
INFO  22:45:25,461 - #48 a
INFO  22:45:25,461 - #38 ;
INFO  22:45:25,461 - #47 }
INFO  22:45:25,461 - #48 Test
INFO  22:45:25,462 - #48 t1
INFO  22:45:25,462 - #40 ,
INFO  22:45:25,462 - #48 t2
INFO  22:45:25,462 - #38 ;
INFO  22:45:25,463 - #48 int
INFO  22:45:25,463 - #48 c
INFO  22:45:25,463 - #38 ;
INFO  22:45:25,463 - #46 {
INFO  22:45:25,463 - #48 int
INFO  22:45:25,463 - #48 sum
INFO  22:45:25,464 - #42 (
INFO  22:45:25,464 - #48 int
INFO  22:45:25,464 - #48 z
INFO  22:45:25,464 - #40 ,
INFO  22:45:25,464 - #48 int
INFO  22:45:25,464 - #48 d
INFO  22:45:25,464 - #43 )
INFO  22:45:25,465 - #46 {
INFO  22:45:25,465 - #15 return
INFO  22:45:25,466 - #48 z
INFO  22:45:25,466 - #22 +
INFO  22:45:25,466 - #48 d
INFO  22:45:25,467 - #38 ;
INFO  22:45:25,467 - #47 }
INFO  22:45:25,468 - #48 int
INFO  22:45:25,468 - #48 inkrement
INFO  22:45:25,468 - #42 (
INFO  22:45:25,468 - #48 int
INFO  22:45:25,468 - #48 a
INFO  22:45:25,468 - #40 ,
INFO  22:45:25,469 - #48 int
INFO  22:45:25,469 - #48 inc
INFO  22:45:25,469 - #43 )
INFO  22:45:25,469 - #48 int
INFO  22:45:25,469 - #48 pom
INFO  22:45:25,469 - #38 ;
INFO  22:45:25,469 - #46 {
INFO  22:45:25,469 - #9 if
INFO  22:45:25,469 - #42 (
INFO  22:45:25,470 - #48 inc
INFO  22:45:25,470 - #27 ==
INFO  22:45:25,470 - #48 jedan
INFO  22:45:25,471 - #43 )
INFO  22:45:25,471 - #48 pom
INFO  22:45:25,471 - #35 =
INFO  22:45:25,471 - #50 1
INFO  22:45:25,472 - #38 ;
INFO  22:45:25,472 - #7 else
INFO  22:45:25,472 - #9 if
INFO  22:45:25,472 - #42 (
INFO  22:45:25,472 - #48 inc
INFO  22:45:25,472 - #27 ==
INFO  22:45:25,473 - #50 2
INFO  22:45:25,473 - #43 )
INFO  22:45:25,473 - #48 pom
INFO  22:45:25,473 - #35 =
INFO  22:45:25,473 - #48 a
INFO  22:45:25,473 - #38 ;
INFO  22:45:25,473 - #15 return
INFO  22:45:25,473 - #48 sum
INFO  22:45:25,473 - #42 (
INFO  22:45:25,473 - #48 a
INFO  22:45:25,473 - #40 ,
INFO  22:45:25,474 - #48 pom
INFO  22:45:25,474 - #43 )
INFO  22:45:25,474 - #38 ;
INFO  22:45:25,474 - #47 }
INFO  22:45:25,474 - #48 bool
INFO  22:45:25,474 - #48 verify
INFO  22:45:25,474 - #42 (
INFO  22:45:25,476 - #43 )
INFO  22:45:25,476 - #46 {
INFO  22:45:25,477 - #13 print
INFO  22:45:25,477 - #42 (
INFO  22:45:25,477 - #51 v
INFO  22:45:25,477 - #43 )
INFO  22:45:25,477 - #38 ;
INFO  22:45:25,477 - #15 return
INFO  22:45:25,477 - #49 false
INFO  22:45:25,478 - #38 ;
INFO  22:45:25,478 - #47 }
INFO  22:45:25,478 - #3 void
INFO  22:45:25,478 - #48 main
INFO  22:45:25,478 - #42 (
INFO  22:45:25,478 - #43 )
INFO  22:45:25,478 - #46 {
INFO  22:45:25,478 - #48 c
INFO  22:45:25,478 - #35 =
INFO  22:45:25,478 - #50 0
INFO  22:45:25,478 - #38 ;
INFO  22:45:25,478 - #10 do
INFO  22:45:25,478 - #46 {
INFO  22:45:25,479 - #48 c
INFO  22:45:25,479 - #37 --
INFO  22:45:25,479 - #38 ;
INFO  22:45:25,480 - #13 print
INFO  22:45:25,480 - #42 (
INFO  22:45:25,480 - #48 c
INFO  22:45:25,480 - #43 )
INFO  22:45:25,480 - #38 ;
INFO  22:45:25,480 - #47 }
INFO  22:45:25,480 - #11 while
INFO  22:45:25,480 - #42 (
INFO  22:45:25,481 - #49 true
INFO  22:45:25,481 - #43 )
INFO  22:45:25,481 - #38 ;
INFO  22:45:25,481 - #47 }
INFO  22:45:25,481 - #47 }
INFO  22:45:25,487 - Program(
  ProgName(
   test302
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                NoDeclarations(
                ) [NoDeclarations]
                ConstDeclaration(
                  ConstDecl(
                    Type(
                     int
                    ) [Type]
                    ConstDeclListDerived1(
                      SingleConstDeclaration(
                        ConstName(
                         jedan
                        ) [ConstName]
                        NumConst(
                         1
                        ) [NumConst]
                      ) [SingleConstDeclaration]
                    ) [ConstDeclListDerived1]
                  ) [ConstDecl]
                ) [ConstDeclaration]
              ) [Declarations]
              VarDeclaration(
                VariableDeclaration(
                  Type(
                   int
                  ) [Type]
                  SingleVar(
                    SingleVarDeclaration(
                     i
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [SingleVar]
                ) [VariableDeclaration]
              ) [VarDeclaration]
            ) [Declarations]
            VarDeclaration(
              VariableDeclaration(
                Type(
                 bool
                ) [Type]
                SingleVar(
                  SingleVarDeclaration(
                   ibool
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
              ) [VariableDeclaration]
            ) [VarDeclaration]
          ) [Declarations]
          VarDeclaration(
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 niz2
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclaration]
        ) [Declarations]
        RecordDeclaration(
          RecordDecl(
            RecordName(
              Type(
               Test
              ) [Type]
            ) [RecordName]
            VarDeclarations(
              VarDeclarations(
                NoVarDecls(
                ) [NoVarDecls]
                VariableDeclaration(
                  Type(
                   int
                  ) [Type]
                  SingleVar(
                    SingleVarDeclaration(
                     niz
                      WithBrackets(
                      ) [WithBrackets]
                    ) [SingleVarDeclaration]
                  ) [SingleVar]
                ) [VariableDeclaration]
              ) [VarDeclarations]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                SingleVar(
                  SingleVarDeclaration(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
              ) [VariableDeclaration]
            ) [VarDeclarations]
          ) [RecordDecl]
        ) [RecordDeclaration]
      ) [Declarations]
      VarDeclaration(
        VariableDeclaration(
          Type(
           Test
          ) [Type]
          VarDeclarationList(
            SingleVar(
              SingleVarDeclaration(
               t1
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
            SingleVarDeclaration(
             t2
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [VarDeclarationList]
        ) [VariableDeclaration]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VariableDeclaration(
        Type(
         int
        ) [Type]
        SingleVar(
          SingleVarDeclaration(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [SingleVarDeclaration]
        ) [SingleVar]
      ) [VariableDeclaration]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecls(
          ) [NoMethodDecls]
          MethodDeclaration(
            MethodDeclType(
              Type(
               int
              ) [Type]
             sum
            ) [MethodDeclType]
            FormParamLs(
              FormParams(
                SingleFormParam(
                  FormParameter(
                    Type(
                     int
                    ) [Type]
                   z
                    NoBrackets(
                    ) [NoBrackets]
                  ) [FormParameter]
                ) [SingleFormParam]
                FormParameter(
                  Type(
                   int
                  ) [Type]
                 d
                  NoBrackets(
                  ) [NoBrackets]
                ) [FormParameter]
              ) [FormParams]
            ) [FormParamLs]
            NoVarDecls(
            ) [NoVarDecls]
            MultipleStatements(
              NotSuperStmt(
              ) [NotSuperStmt]
              StatementListNotEmpty(
                NoStatements(
                ) [NoStatements]
                SingleStatementNoLabel(
                  ReturnExprStmt(
                    Expression(
                      TermExpression(
                        SingleFactor(
                          VarFactor(
                            SingleDesignator(
                             z
                            ) [SingleDesignator]
                          ) [VarFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                      AddopPlus(
                      ) [AddopPlus]
                      SingleFactor(
                        VarFactor(
                          SingleDesignator(
                           d
                          ) [SingleDesignator]
                        ) [VarFactor]
                      ) [SingleFactor]
                    ) [Expression]
                  ) [ReturnExprStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              RbraceStatements(
              ) [RbraceStatements]
            ) [MultipleStatements]
          ) [MethodDeclaration]
        ) [MethodDeclarations]
        MethodDeclaration(
          MethodDeclType(
            Type(
             int
            ) [Type]
           inkrement
          ) [MethodDeclType]
          FormParamLs(
            FormParams(
              SingleFormParam(
                FormParameter(
                  Type(
                   int
                  ) [Type]
                 a
                  NoBrackets(
                  ) [NoBrackets]
                ) [FormParameter]
              ) [SingleFormParam]
              FormParameter(
                Type(
                 int
                ) [Type]
               inc
                NoBrackets(
                ) [NoBrackets]
              ) [FormParameter]
            ) [FormParams]
          ) [FormParamLs]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 pom
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            StatementListNotEmpty(
              StatementListNotEmpty(
                NoStatements(
                ) [NoStatements]
                SingleStatementNoLabel(
                  MatchedStatement(
                    If(
                    ) [If]
                    SingleCondTerm(
                      SingleCondFact(
                        ConditionFact(
                          TermExpression(
                            SingleFactor(
                              VarFactor(
                                SingleDesignator(
                                 inc
                                ) [SingleDesignator]
                              ) [VarFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                          RelopEqual(
                          ) [RelopEqual]
                          TermExpression(
                            SingleFactor(
                              VarFactor(
                                SingleDesignator(
                                 jedan
                                ) [SingleDesignator]
                              ) [VarFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [ConditionFact]
                      ) [SingleCondFact]
                    ) [SingleCondTerm]
                    SingleStatementNoLabel(
                      DesignatorStmt(
                        DesignatorStatmentNoError(
                          SingleDesignator(
                           pom
                          ) [SingleDesignator]
                          DesignatorAssign(
                            Assignop(
                            ) [Assignop]
                            TermExpression(
                              SingleFactor(
                                NumConstFactor(
                                 1
                                ) [NumConstFactor]
                              ) [SingleFactor]
                            ) [TermExpression]
                          ) [DesignatorAssign]
                        ) [DesignatorStatmentNoError]
                      ) [DesignatorStmt]
                    ) [SingleStatementNoLabel]
                    Else(
                    ) [Else]
                    SingleStatementNoLabel(
                      UnmatchedStatement(
                        If(
                        ) [If]
                        SingleCondTerm(
                          SingleCondFact(
                            ConditionFact(
                              TermExpression(
                                SingleFactor(
                                  VarFactor(
                                    SingleDesignator(
                                     inc
                                    ) [SingleDesignator]
                                  ) [VarFactor]
                                ) [SingleFactor]
                              ) [TermExpression]
                              RelopEqual(
                              ) [RelopEqual]
                              TermExpression(
                                SingleFactor(
                                  NumConstFactor(
                                   2
                                  ) [NumConstFactor]
                                ) [SingleFactor]
                              ) [TermExpression]
                            ) [ConditionFact]
                          ) [SingleCondFact]
                        ) [SingleCondTerm]
                        SingleStatementNoLabel(
                          DesignatorStmt(
                            DesignatorStatmentNoError(
                              SingleDesignator(
                               pom
                              ) [SingleDesignator]
                              DesignatorAssign(
                                Assignop(
                                ) [Assignop]
                                TermExpression(
                                  SingleFactor(
                                    VarFactor(
                                      SingleDesignator(
                                       a
                                      ) [SingleDesignator]
                                    ) [VarFactor]
                                  ) [SingleFactor]
                                ) [TermExpression]
                              ) [DesignatorAssign]
                            ) [DesignatorStatmentNoError]
                          ) [DesignatorStmt]
                        ) [SingleStatementNoLabel]
                      ) [UnmatchedStatement]
                    ) [SingleStatementNoLabel]
                  ) [MatchedStatement]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              SingleStatementNoLabel(
                ReturnExprStmt(
                  TermExpression(
                    SingleFactor(
                      FunctionCall(
                        SingleDesignator(
                         sum
                        ) [SingleDesignator]
                        FactorActPars(
                          ActualParsList(
                            ActualPars(
                              SingleExpr(
                                TermExpression(
                                  SingleFactor(
                                    VarFactor(
                                      SingleDesignator(
                                       a
                                      ) [SingleDesignator]
                                    ) [VarFactor]
                                  ) [SingleFactor]
                                ) [TermExpression]
                              ) [SingleExpr]
                              TermExpression(
                                SingleFactor(
                                  VarFactor(
                                    SingleDesignator(
                                     pom
                                    ) [SingleDesignator]
                                  ) [VarFactor]
                                ) [SingleFactor]
                              ) [TermExpression]
                            ) [ActualPars]
                          ) [ActualParsList]
                        ) [FactorActPars]
                      ) [FunctionCall]
                    ) [SingleFactor]
                  ) [TermExpression]
                ) [ReturnExprStmt]
              ) [SingleStatementNoLabel]
            ) [StatementListNotEmpty]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodDeclType(
          Type(
           bool
          ) [Type]
         verify
        ) [MethodDeclType]
        NoFormParams(
        ) [NoFormParams]
        NoVarDecls(
        ) [NoVarDecls]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          StatementListNotEmpty(
            StatementListNotEmpty(
              NoStatements(
              ) [NoStatements]
              SingleStatementNoLabel(
                PrintStmt(
                  TermExpression(
                    SingleFactor(
                      CharConstFactor(
                       v
                      ) [CharConstFactor]
                    ) [SingleFactor]
                  ) [TermExpression]
                  NoNumConstPrint(
                  ) [NoNumConstPrint]
                ) [PrintStmt]
              ) [SingleStatementNoLabel]
            ) [StatementListNotEmpty]
            SingleStatementNoLabel(
              ReturnExprStmt(
                TermExpression(
                  SingleFactor(
                    BoolConstFactor(
                     false
                    ) [BoolConstFactor]
                  ) [SingleFactor]
                ) [TermExpression]
              ) [ReturnExprStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       main
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      NoVarDecls(
      ) [NoVarDecls]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        StatementListNotEmpty(
          StatementListNotEmpty(
            NoStatements(
            ) [NoStatements]
            SingleStatementNoLabel(
              DesignatorStmt(
                DesignatorStatmentNoError(
                  SingleDesignator(
                   c
                  ) [SingleDesignator]
                  DesignatorAssign(
                    Assignop(
                    ) [Assignop]
                    TermExpression(
                      SingleFactor(
                        NumConstFactor(
                         0
                        ) [NumConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [DesignatorAssign]
                ) [DesignatorStatmentNoError]
              ) [DesignatorStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          SingleStatementNoLabel(
            DoWhileStmt(
              Do(
              ) [Do]
              Stmts(
                MultipleStatements(
                  NotSuperStmt(
                  ) [NotSuperStmt]
                  StatementListNotEmpty(
                    StatementListNotEmpty(
                      NoStatements(
                      ) [NoStatements]
                      SingleStatementNoLabel(
                        DesignatorStmt(
                          DesignatorStatmentNoError(
                            SingleDesignator(
                             c
                            ) [SingleDesignator]
                            DesignatorDecrement(
                            ) [DesignatorDecrement]
                          ) [DesignatorStatmentNoError]
                        ) [DesignatorStmt]
                      ) [SingleStatementNoLabel]
                    ) [StatementListNotEmpty]
                    SingleStatementNoLabel(
                      PrintStmt(
                        TermExpression(
                          SingleFactor(
                            VarFactor(
                              SingleDesignator(
                               c
                              ) [SingleDesignator]
                            ) [VarFactor]
                          ) [SingleFactor]
                        ) [TermExpression]
                        NoNumConstPrint(
                        ) [NoNumConstPrint]
                      ) [PrintStmt]
                    ) [SingleStatementNoLabel]
                  ) [StatementListNotEmpty]
                  RbraceStatements(
                  ) [RbraceStatements]
                ) [MultipleStatements]
              ) [Stmts]
              While(
              ) [While]
              SingleCondTerm(
                SingleCondFact(
                  CondFactExpr(
                    TermExpression(
                      SingleFactor(
                        BoolConstFactor(
                         true
                        ) [BoolConstFactor]
                      ) [SingleFactor]
                    ) [TermExpression]
                  ) [CondFactExpr]
                ) [SingleCondFact]
              ) [SingleCondTerm]
            ) [DoWhileStmt]
          ) [SingleStatementNoLabel]
        ) [StatementListNotEmpty]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  22:45:25,487 - ===================================
INFO  22:45:25,491 - Deklarisana konstanta jedan na liniji 5
INFO  22:45:25,491 - Deklarisana promenljiva i na liniji 7
INFO  22:45:25,491 - Deklarisana promenljiva ibool na liniji 8
INFO  22:45:25,492 - Deklarisana promenljiva niz2 na liniji 10
INFO  22:45:25,492 - Deklarisan rekord Test na liniji 12
INFO  22:45:25,492 - Deklarisana niz promenljiva niz na liniji 13
INFO  22:45:25,492 - Deklarisana promenljiva a na liniji 14
INFO  22:45:25,492 - Deklarisana promenljiva t1 na liniji 17
INFO  22:45:25,492 - Deklarisana promenljiva t2 na liniji 17
INFO  22:45:25,492 - Deklarisana promenljiva c na liniji 18
INFO  22:45:25,492 - Obradjuje se funkcija sum na liniji 22
INFO  22:45:25,492 - Deklarisana parameter funkcije z na liniji 22
INFO  22:45:25,492 - Deklarisana parameter funkcije d na liniji 22
INFO  22:45:25,492 - Pristupa se promenljivoj z na liniji 24
INFO  22:45:25,492 - Pristupa se promenljivoj d na liniji 24
INFO  22:45:25,492 - Obradjuje se funkcija inkrement na liniji 27
INFO  22:45:25,493 - Deklarisana parameter funkcije a na liniji 27
INFO  22:45:25,493 - Deklarisana parameter funkcije inc na liniji 27
INFO  22:45:25,493 - Deklarisana promenljiva pom na liniji 28
INFO  22:45:25,493 - Pristupa se promenljivoj inc na liniji 30
INFO  22:45:25,493 - Pristupa se promenljivoj jedan na liniji 30
INFO  22:45:25,493 - Pristupa se promenljivoj pom na liniji 30
INFO  22:45:25,493 - Pristupa se promenljivoj inc na liniji 31
INFO  22:45:25,493 - Pristupa se promenljivoj pom na liniji 31
INFO  22:45:25,493 - Pristupa se promenljivoj a na liniji 31
INFO  22:45:25,493 - Pristupa se promenljivoj a na liniji 33
INFO  22:45:25,493 - Pristupa se promenljivoj pom na liniji 33
INFO  22:45:25,493 - Pronadjen poziv funkcije sum na liniji 33
INFO  22:45:25,493 - Obradjuje se funkcija verify na liniji 36
INFO  22:45:25,493 - Obradjuje se funkcija main na liniji 41
INFO  22:45:25,493 - Pristupa se promenljivoj c na liniji 43
INFO  22:45:25,494 - Pristupa se promenljivoj c na liniji 45
INFO  22:45:25,494 - Pristupa se promenljivoj c na liniji 46
INFO  22:45:25,494 -  Deklarisanih promenljivih ima = 8
INFO  22:45:25,494 - ===================================
INFO  22:45:25,499 - Parsiranje uspesno zavrseno!
