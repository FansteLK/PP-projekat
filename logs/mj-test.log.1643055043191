INFO  21:10:29,161 - Compiling source file: C:\Users\stefa\Desktop\Izvorni kod\MjCompiler\test\functionsAndStatementsErrors.mj
INFO  21:10:29,240 - #2 program
INFO  21:10:29,240 - #48 p
INFO  21:10:29,240 - #8 const
INFO  21:10:29,242 - #48 int
INFO  21:10:29,242 - #48 size
INFO  21:10:29,243 - #35 =
INFO  21:10:29,244 - #50 10
INFO  21:10:29,244 - #38 ;
INFO  21:10:29,245 - #5 class
INFO  21:10:29,246 - #48 Table
INFO  21:10:29,246 - #16 extends
INFO  21:10:29,247 - #48 Table
INFO  21:10:29,247 - #46 {
INFO  21:10:29,247 - #48 int
INFO  21:10:29,248 - #48 pos
INFO  21:10:29,248 - #44 [
INFO  21:10:29,248 - #45 ]
INFO  21:10:29,248 - #40 ,
INFO  21:10:29,250 - #48 neg
INFO  21:10:29,250 - #44 [
INFO  21:10:29,250 - #45 ]
INFO  21:10:29,258 - #38 ;
INFO  21:10:29,258 - #46 {
INFO  21:10:29,258 - #48 Table
INFO  21:10:29,259 - #42 (
INFO  21:10:29,259 - #43 )
INFO  21:10:29,259 - #46 {
INFO  21:10:29,260 - #19 super
INFO  21:10:29,260 - #42 (
INFO  21:10:29,260 - #43 )
INFO  21:10:29,260 - #38 ;
INFO  21:10:29,260 - #15 return
INFO  21:10:29,263 - #38 ;
INFO  21:10:29,263 - #47 }
INFO  21:10:29,264 - #3 void
INFO  21:10:29,266 - #48 putp
INFO  21:10:29,266 - #42 (
INFO  21:10:29,266 - #48 int
INFO  21:10:29,266 - #48 a
INFO  21:10:29,267 - #40 ,
INFO  21:10:29,267 - #48 int
INFO  21:10:29,268 - #48 idx
INFO  21:10:29,268 - #43 )
INFO  21:10:29,268 - #46 {
INFO  21:10:29,268 - #48 pos
INFO  21:10:29,269 - #44 [
INFO  21:10:29,269 - #48 idx
INFO  21:10:29,269 - #45 ]
INFO  21:10:29,270 - #35 =
INFO  21:10:29,270 - #48 a
INFO  21:10:29,271 - #38 ;
INFO  21:10:29,271 - #47 }
INFO  21:10:29,272 - #3 void
INFO  21:10:29,273 - #48 putn
INFO  21:10:29,273 - #42 (
INFO  21:10:29,274 - #48 int
INFO  21:10:29,274 - #48 a
INFO  21:10:29,274 - #40 ,
INFO  21:10:29,274 - #48 int
INFO  21:10:29,274 - #48 idx
INFO  21:10:29,274 - #43 )
INFO  21:10:29,274 - #46 {
INFO  21:10:29,274 - #48 neg
INFO  21:10:29,275 - #44 [
INFO  21:10:29,275 - #48 C
INFO  21:10:29,275 - #45 ]
INFO  21:10:29,275 - #35 =
INFO  21:10:29,276 - #48 a
INFO  21:10:29,276 - #38 ;
INFO  21:10:29,276 - #47 }
INFO  21:10:29,276 - #48 int
INFO  21:10:29,276 - #48 getp
INFO  21:10:29,276 - #42 (
INFO  21:10:29,277 - #48 int
INFO  21:10:29,277 - #48 idx
INFO  21:10:29,277 - #43 )
INFO  21:10:29,277 - #46 {
INFO  21:10:29,277 - #15 return
INFO  21:10:29,277 - #48 idx
INFO  21:10:29,277 - #38 ;
INFO  21:10:29,277 - #47 }
INFO  21:10:29,278 - #48 int
INFO  21:10:29,278 - #48 getn
INFO  21:10:29,278 - #42 (
INFO  21:10:29,278 - #48 int
INFO  21:10:29,278 - #48 idx
INFO  21:10:29,278 - #43 )
INFO  21:10:29,278 - #46 {
INFO  21:10:29,278 - #15 return
INFO  21:10:29,278 - #48 neg
INFO  21:10:29,279 - #44 [
INFO  21:10:29,279 - #48 idx
INFO  21:10:29,279 - #45 ]
INFO  21:10:29,279 - #38 ;
INFO  21:10:29,279 - #47 }
INFO  21:10:29,279 - #47 }
INFO  21:10:29,279 - #47 }
INFO  21:10:29,280 - #21 record
INFO  21:10:29,280 - #48 Board
INFO  21:10:29,280 - #46 {
INFO  21:10:29,283 - #48 int
INFO  21:10:29,284 - #48 rows
INFO  21:10:29,284 - #40 ,
INFO  21:10:29,284 - #48 columns
INFO  21:10:29,284 - #38 ;
INFO  21:10:29,284 - #47 }
INFO  21:10:29,285 - #48 Table
INFO  21:10:29,286 - #48 val
INFO  21:10:29,286 - #38 ;
INFO  21:10:29,286 - #48 Board
INFO  21:10:29,286 - #48 board
INFO  21:10:29,286 - #38 ;
INFO  21:10:29,286 - #46 {
INFO  21:10:29,286 - #3 void
INFO  21:10:29,287 - #48 f
INFO  21:10:29,287 - #42 (
INFO  21:10:29,287 - #48 char
INFO  21:10:29,288 - #48 ch
INFO  21:10:29,288 - #40 ,
INFO  21:10:29,288 - #48 int
INFO  21:10:29,288 - #48 a
INFO  21:10:29,288 - #40 ,
INFO  21:10:29,288 - #48 int
INFO  21:10:29,289 - #48 arg
INFO  21:10:29,289 - #43 )
INFO  21:10:29,289 - #48 int
INFO  21:10:29,289 - #48 x
INFO  21:10:29,289 - #38 ;
INFO  21:10:29,289 - #46 {
INFO  21:10:29,289 - #48 x
INFO  21:10:29,289 - #35 =
INFO  21:10:29,289 - #48 arg
INFO  21:10:29,290 - #38 ;
INFO  21:10:29,290 - #47 }
INFO  21:10:29,290 - #3 void
INFO  21:10:29,290 - #48 mains
INFO  21:10:29,290 - #42 (
INFO  21:10:29,290 - #43 )
INFO  21:10:29,291 - #48 int
INFO  21:10:29,291 - #48 x
INFO  21:10:29,291 - #40 ,
INFO  21:10:29,292 - #48 i
INFO  21:10:29,292 - #38 ;
INFO  21:10:29,292 - #48 char
INFO  21:10:29,292 - #48 c
INFO  21:10:29,292 - #38 ;
INFO  21:10:29,292 - #46 {
INFO  21:10:29,292 - #48 val
INFO  21:10:29,292 - #35 =
INFO  21:10:29,292 - #12 new
INFO  21:10:29,293 - #48 Table
INFO  21:10:29,293 - #38 ;
INFO  21:10:29,294 - #48 val
INFO  21:10:29,294 - #41 .
INFO  21:10:29,294 - #48 pos
INFO  21:10:29,294 - #35 =
INFO  21:10:29,295 - #12 new
INFO  21:10:29,295 - #48 int
INFO  21:10:29,295 - #44 [
INFO  21:10:29,295 - #48 size
INFO  21:10:29,295 - #45 ]
INFO  21:10:29,295 - #38 ;
INFO  21:10:29,295 - #48 val
INFO  21:10:29,295 - #41 .
INFO  21:10:29,295 - #48 neg
INFO  21:10:29,295 - #35 =
INFO  21:10:29,296 - #12 new
INFO  21:10:29,296 - #48 int
INFO  21:10:29,296 - #44 [
INFO  21:10:29,296 - #48 size
INFO  21:10:29,296 - #45 ]
INFO  21:10:29,296 - #38 ;
INFO  21:10:29,296 - #14 read
INFO  21:10:29,296 - #42 (
INFO  21:10:29,296 - #48 x
INFO  21:10:29,296 - #43 )
INFO  21:10:29,296 - #38 ;
INFO  21:10:29,297 - #9 if
INFO  21:10:29,297 - #42 (
INFO  21:10:29,298 - #48 x
INFO  21:10:29,298 - #29 >
INFO  21:10:29,298 - #50 5
INFO  21:10:29,299 - #43 )
INFO  21:10:29,300 - #46 {
INFO  21:10:29,300 - #20 goto
INFO  21:10:29,300 - #48 skip
INFO  21:10:29,300 - #38 ;
INFO  21:10:29,301 - #47 }
INFO  21:10:29,301 - #48 i
INFO  21:10:29,301 - #35 =
INFO  21:10:29,302 - #50 0
INFO  21:10:29,302 - #38 ;
INFO  21:10:29,302 - #17 continue
INFO  21:10:29,302 - #38 ;
INFO  21:10:29,302 - #10 do
INFO  21:10:29,303 - #46 {
INFO  21:10:29,304 - #48 val
INFO  21:10:29,304 - #41 .
INFO  21:10:29,304 - #48 putp
INFO  21:10:29,304 - #42 (
INFO  21:10:29,304 - #50 0
INFO  21:10:29,304 - #40 ,
INFO  21:10:29,305 - #48 i
INFO  21:10:29,305 - #43 )
INFO  21:10:29,305 - #38 ;
INFO  21:10:29,305 - #48 val
INFO  21:10:29,305 - #41 .
INFO  21:10:29,305 - #48 putn
INFO  21:10:29,306 - #42 (
INFO  21:10:29,306 - #50 0
INFO  21:10:29,306 - #40 ,
INFO  21:10:29,306 - #48 i
INFO  21:10:29,306 - #43 )
INFO  21:10:29,306 - #38 ;
INFO  21:10:29,306 - #48 i
INFO  21:10:29,306 - #36 ++
INFO  21:10:29,306 - #38 ;
INFO  21:10:29,307 - #47 }
INFO  21:10:29,307 - #11 while
INFO  21:10:29,307 - #42 (
INFO  21:10:29,308 - #48 i
INFO  21:10:29,309 - #31 <
INFO  21:10:29,309 - #48 size
INFO  21:10:29,310 - #43 )
INFO  21:10:29,310 - #38 ;
INFO  21:10:29,310 - #48 skip2
INFO  21:10:29,310 - #39 :
INFO  21:10:29,310 - #48 f
INFO  21:10:29,310 - #42 (
INFO  21:10:29,311 - #48 c
INFO  21:10:29,311 - #40 ,
INFO  21:10:29,311 - #48 x
INFO  21:10:29,311 - #40 ,
INFO  21:10:29,311 - #48 i
INFO  21:10:29,311 - #43 )
INFO  21:10:29,311 - #38 ;
INFO  21:10:29,311 - #48 board
INFO  21:10:29,311 - #35 =
INFO  21:10:29,312 - #12 new
INFO  21:10:29,312 - #48 Board
INFO  21:10:29,312 - #38 ;
INFO  21:10:29,312 - #14 read
INFO  21:10:29,312 - #42 (
INFO  21:10:29,312 - #48 board
INFO  21:10:29,312 - #41 .
INFO  21:10:29,312 - #48 rows
INFO  21:10:29,312 - #43 )
INFO  21:10:29,312 - #38 ;
INFO  21:10:29,313 - #48 x
INFO  21:10:29,313 - #35 =
INFO  21:10:29,313 - #48 board
INFO  21:10:29,313 - #41 .
INFO  21:10:29,313 - #48 rows
INFO  21:10:29,313 - #38 ;
INFO  21:10:29,313 - #10 do
INFO  21:10:29,313 - #46 {
INFO  21:10:29,314 - #9 if
INFO  21:10:29,314 - #42 (
INFO  21:10:29,314 - #48 x
INFO  21:10:29,314 - #32 <=
INFO  21:10:29,314 - #50 0
INFO  21:10:29,315 - #43 )
INFO  21:10:29,315 - #4 break
INFO  21:10:29,315 - #38 ;
INFO  21:10:29,315 - #9 if
INFO  21:10:29,316 - #42 (
INFO  21:10:29,316 - #48 board
INFO  21:10:29,316 - #32 <=
INFO  21:10:29,316 - #48 board
INFO  21:10:29,317 - #34 ||
INFO  21:10:29,317 - #48 x
INFO  21:10:29,318 - #31 <
INFO  21:10:29,318 - #48 size
INFO  21:10:29,318 - #33 &&
INFO  21:10:29,318 - #48 board
INFO  21:10:29,319 - #31 <
INFO  21:10:29,319 - #48 size
INFO  21:10:29,319 - #43 )
INFO  21:10:29,319 - #46 {
INFO  21:10:29,320 - #48 val
INFO  21:10:29,320 - #41 .
INFO  21:10:29,320 - #48 putp
INFO  21:10:29,320 - #42 (
INFO  21:10:29,320 - #48 val
INFO  21:10:29,320 - #41 .
INFO  21:10:29,320 - #48 getp
INFO  21:10:29,320 - #42 (
INFO  21:10:29,320 - #48 x
INFO  21:10:29,320 - #43 )
INFO  21:10:29,320 - #22 +
INFO  21:10:29,321 - #50 1
INFO  21:10:29,322 - #40 ,
INFO  21:10:29,322 - #50 2
INFO  21:10:29,322 - #43 )
INFO  21:10:29,322 - #38 ;
INFO  21:10:29,323 - #47 }
INFO  21:10:29,323 - #7 else
INFO  21:10:29,323 - #9 if
INFO  21:10:29,323 - #42 (
INFO  21:10:29,323 - #23 -
INFO  21:10:29,323 - #48 size
INFO  21:10:29,323 - #31 <
INFO  21:10:29,324 - #48 x
INFO  21:10:29,324 - #33 &&
INFO  21:10:29,324 - #48 x
INFO  21:10:29,324 - #31 <
INFO  21:10:29,324 - #50 0
INFO  21:10:29,324 - #43 )
INFO  21:10:29,324 - #46 {
INFO  21:10:29,324 - #48 val
INFO  21:10:29,324 - #41 .
INFO  21:10:29,324 - #48 putn
INFO  21:10:29,324 - #42 (
INFO  21:10:29,324 - #48 val
INFO  21:10:29,324 - #41 .
INFO  21:10:29,324 - #48 getn
INFO  21:10:29,324 - #42 (
INFO  21:10:29,324 - #23 -
INFO  21:10:29,324 - #48 x
INFO  21:10:29,325 - #43 )
INFO  21:10:29,325 - #40 ,
INFO  21:10:29,325 - #50 2
INFO  21:10:29,325 - #43 )
INFO  21:10:29,325 - #38 ;
INFO  21:10:29,325 - #47 }
INFO  21:10:29,325 - #48 x
INFO  21:10:29,326 - #44 [
INFO  21:10:29,326 - #50 3
INFO  21:10:29,326 - #45 ]
INFO  21:10:29,326 - #35 =
INFO  21:10:29,326 - #50 5
INFO  21:10:29,326 - #38 ;
INFO  21:10:29,326 - #48 x
INFO  21:10:29,326 - #35 =
INFO  21:10:29,327 - #12 new
INFO  21:10:29,327 - #48 x
INFO  21:10:29,327 - #44 [
INFO  21:10:29,327 - #50 3
INFO  21:10:29,327 - #45 ]
INFO  21:10:29,327 - #38 ;
INFO  21:10:29,327 - #48 putp
INFO  21:10:29,327 - #42 (
INFO  21:10:29,327 - #43 )
INFO  21:10:29,328 - #38 ;
INFO  21:10:29,328 - #13 print
INFO  21:10:29,328 - #42 (
INFO  21:10:29,328 - #50 3
INFO  21:10:29,328 - #43 )
INFO  21:10:29,329 - #38 ;
INFO  21:10:29,330 - #14 read
INFO  21:10:29,330 - #42 (
INFO  21:10:29,330 - #48 x
INFO  21:10:29,330 - #43 )
INFO  21:10:29,330 - #38 ;
INFO  21:10:29,330 - #47 }
INFO  21:10:29,330 - #11 while
INFO  21:10:29,330 - #42 (
INFO  21:10:29,330 - #49 true
INFO  21:10:29,330 - #43 )
INFO  21:10:29,330 - #38 ;
INFO  21:10:29,330 - #47 }
INFO  21:10:29,330 - #3 void
INFO  21:10:29,330 - #48 mains
INFO  21:10:29,331 - #42 (
INFO  21:10:29,331 - #43 )
INFO  21:10:29,331 - #46 {
INFO  21:10:29,331 - #47 }
INFO  21:10:29,331 - #47 }
INFO  21:10:29,344 - Program(
  ProgName(
   p
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDeclListDerived1(
                  SingleConstDeclaration(
                    ConstName(
                     size
                    ) [ConstName]
                    NumConst(
                     10
                    ) [NumConst]
                  ) [SingleConstDeclaration]
                ) [ConstDeclListDerived1]
              ) [ConstDecl]
            ) [ConstDeclaration]
          ) [Declarations]
          ClassDeclaration(
            ClassDecl1(
              ClassName(
                Type(
                 Table
                ) [Type]
              ) [ClassName]
              ExtendClass(
                ExtendedClassType(
                  Type(
                   Table
                  ) [Type]
                ) [ExtendedClassType]
              ) [ExtendClass]
              SingleClassDecl(
                ClassVarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarDeclarationClassList(
                    SingleClassVar(
                      SingleClassVarDeclaration(
                       pos
                        WithBrackets(
                        ) [WithBrackets]
                      ) [SingleClassVarDeclaration]
                    ) [SingleClassVar]
                    SingleClassVarDeclaration(
                     neg
                      WithBrackets(
                      ) [WithBrackets]
                    ) [SingleClassVarDeclaration]
                  ) [VarDeclarationClassList]
                ) [ClassVarDeclaration]
              ) [SingleClassDecl]
              ClassBody2WithConstructorVoids(
                ConstructorDecl(
                  Type(
                   Table
                  ) [Type]
                  NoVarDecls(
                  ) [NoVarDecls]
                  MultipleStatements(
                    SuperStmt(
                    ) [SuperStmt]
                    StatementListNotEmpty(
                      NoStatements(
                      ) [NoStatements]
                      SingleStatementNoLabel(
                        ReturnNoExprStmt(
                        ) [ReturnNoExprStmt]
                      ) [SingleStatementNoLabel]
                    ) [StatementListNotEmpty]
                    RbraceStatements(
                    ) [RbraceStatements]
                  ) [MultipleStatements]
                ) [ConstructorDecl]
                MethodDeclarationsVoid(
                  MethodDeclarationsVoidList(
                    MethodDeclarationsVoidList(
                      MethodDeclarationsVoidList(
                        SingleMethodVoidDeclaration(
                          MethodDeclVoid(
                            MethodVoidName(
                             putp
                            ) [MethodVoidName]
                            FormParamLs(
                              FormParams(
                                SingleFormParam(
                                  FormParameter(
                                    Type(
                                     int
                                    ) [Type]
                                   a
                                    NoBrackets(
                                    ) [NoBrackets]
                                  ) [FormParameter]
                                ) [SingleFormParam]
                                FormParameter(
                                  Type(
                                   int
                                  ) [Type]
                                 idx
                                  NoBrackets(
                                  ) [NoBrackets]
                                ) [FormParameter]
                              ) [FormParams]
                            ) [FormParamLs]
                            NoVarDecls(
                            ) [NoVarDecls]
                            MultipleStatements(
                              NotSuperStmt(
                              ) [NotSuperStmt]
                              StatementListNotEmpty(
                                NoStatements(
                                ) [NoStatements]
                                SingleStatementNoLabel(
                                  DesignatorStmt(
                                    DesignatorStatmentNoError(
                                      DesignatorArray(
                                        SingleDesignator(
                                         pos
                                        ) [SingleDesignator]
                                        TermExpression(
                                          SingleFactor(
                                            VarFactor(
                                              SingleDesignator(
                                               idx
                                              ) [SingleDesignator]
                                            ) [VarFactor]
                                          ) [SingleFactor]
                                        ) [TermExpression]
                                      ) [DesignatorArray]
                                      DesignatorAssign(
                                        Assignop(
                                        ) [Assignop]
                                        TermExpression(
                                          SingleFactor(
                                            VarFactor(
                                              SingleDesignator(
                                               a
                                              ) [SingleDesignator]
                                            ) [VarFactor]
                                          ) [SingleFactor]
                                        ) [TermExpression]
                                      ) [DesignatorAssign]
                                    ) [DesignatorStatmentNoError]
                                  ) [DesignatorStmt]
                                ) [SingleStatementNoLabel]
                              ) [StatementListNotEmpty]
                              RbraceStatements(
                              ) [RbraceStatements]
                            ) [MultipleStatements]
                          ) [MethodDeclVoid]
                        ) [SingleMethodVoidDeclaration]
                        MethodDeclaration(
                          MethodVoidType(
                           putn
                          ) [MethodVoidType]
                          FormParamLs(
                            FormParams(
                              SingleFormParam(
                                FormParameter(
                                  Type(
                                   int
                                  ) [Type]
                                 a
                                  NoBrackets(
                                  ) [NoBrackets]
                                ) [FormParameter]
                              ) [SingleFormParam]
                              FormParameter(
                                Type(
                                 int
                                ) [Type]
                               idx
                                NoBrackets(
                                ) [NoBrackets]
                              ) [FormParameter]
                            ) [FormParams]
                          ) [FormParamLs]
                          NoVarDecls(
                          ) [NoVarDecls]
                          MultipleStatements(
                            NotSuperStmt(
                            ) [NotSuperStmt]
                            StatementListNotEmpty(
                              NoStatements(
                              ) [NoStatements]
                              SingleStatementNoLabel(
                                DesignatorStmt(
                                  DesignatorStatmentNoError(
                                    DesignatorArray(
                                      SingleDesignator(
                                       neg
                                      ) [SingleDesignator]
                                      TermExpression(
                                        SingleFactor(
                                          VarFactor(
                                            SingleDesignator(
                                             C
                                            ) [SingleDesignator]
                                          ) [VarFactor]
                                        ) [SingleFactor]
                                      ) [TermExpression]
                                    ) [DesignatorArray]
                                    DesignatorAssign(
                                      Assignop(
                                      ) [Assignop]
                                      TermExpression(
                                        SingleFactor(
                                          VarFactor(
                                            SingleDesignator(
                                             a
                                            ) [SingleDesignator]
                                          ) [VarFactor]
                                        ) [SingleFactor]
                                      ) [TermExpression]
                                    ) [DesignatorAssign]
                                  ) [DesignatorStatmentNoError]
                                ) [DesignatorStmt]
                              ) [SingleStatementNoLabel]
                            ) [StatementListNotEmpty]
                            RbraceStatements(
                            ) [RbraceStatements]
                          ) [MultipleStatements]
                        ) [MethodDeclaration]
                      ) [MethodDeclarationsVoidList]
                      MethodDeclaration(
                        MethodDeclType(
                          Type(
                           int
                          ) [Type]
                         getp
                        ) [MethodDeclType]
                        FormParamLs(
                          SingleFormParam(
                            FormParameter(
                              Type(
                               int
                              ) [Type]
                             idx
                              NoBrackets(
                              ) [NoBrackets]
                            ) [FormParameter]
                          ) [SingleFormParam]
                        ) [FormParamLs]
                        NoVarDecls(
                        ) [NoVarDecls]
                        MultipleStatements(
                          NotSuperStmt(
                          ) [NotSuperStmt]
                          StatementListNotEmpty(
                            NoStatements(
                            ) [NoStatements]
                            SingleStatementNoLabel(
                              ReturnExprStmt(
                                TermExpression(
                                  SingleFactor(
                                    VarFactor(
                                      SingleDesignator(
                                       idx
                                      ) [SingleDesignator]
                                    ) [VarFactor]
                                  ) [SingleFactor]
                                ) [TermExpression]
                              ) [ReturnExprStmt]
                            ) [SingleStatementNoLabel]
                          ) [StatementListNotEmpty]
                          RbraceStatements(
                          ) [RbraceStatements]
                        ) [MultipleStatements]
                      ) [MethodDeclaration]
                    ) [MethodDeclarationsVoidList]
                    MethodDeclaration(
                      MethodDeclType(
                        Type(
                         int
                        ) [Type]
                       getn
                      ) [MethodDeclType]
                      FormParamLs(
                        SingleFormParam(
                          FormParameter(
                            Type(
                             int
                            ) [Type]
                           idx
                            NoBrackets(
                            ) [NoBrackets]
                          ) [FormParameter]
                        ) [SingleFormParam]
                      ) [FormParamLs]
                      NoVarDecls(
                      ) [NoVarDecls]
                      MultipleStatements(
                        NotSuperStmt(
                        ) [NotSuperStmt]
                        StatementListNotEmpty(
                          NoStatements(
                          ) [NoStatements]
                          SingleStatementNoLabel(
                            ReturnExprStmt(
                              TermExpression(
                                SingleFactor(
                                  VarFactor(
                                    DesignatorArray(
                                      SingleDesignator(
                                       neg
                                      ) [SingleDesignator]
                                      TermExpression(
                                        SingleFactor(
                                          VarFactor(
                                            SingleDesignator(
                                             idx
                                            ) [SingleDesignator]
                                          ) [VarFactor]
                                        ) [SingleFactor]
                                      ) [TermExpression]
                                    ) [DesignatorArray]
                                  ) [VarFactor]
                                ) [SingleFactor]
                              ) [TermExpression]
                            ) [ReturnExprStmt]
                          ) [SingleStatementNoLabel]
                        ) [StatementListNotEmpty]
                        RbraceStatements(
                        ) [RbraceStatements]
                      ) [MultipleStatements]
                    ) [MethodDeclaration]
                  ) [MethodDeclarationsVoidList]
                ) [MethodDeclarationsVoid]
              ) [ClassBody2WithConstructorVoids]
            ) [ClassDecl1]
          ) [ClassDeclaration]
        ) [Declarations]
        RecordDeclaration(
          RecordDecl(
            RecordName(
              Type(
               Board
              ) [Type]
            ) [RecordName]
            VarDeclarations(
              NoVarDecls(
              ) [NoVarDecls]
              VariableDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationList(
                  SingleVar(
                    SingleVarDeclaration(
                     rows
                      NoBrackets(
                      ) [NoBrackets]
                    ) [SingleVarDeclaration]
                  ) [SingleVar]
                  SingleVarDeclaration(
                   columns
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [VarDeclarationList]
              ) [VariableDeclaration]
            ) [VarDeclarations]
          ) [RecordDecl]
        ) [RecordDeclaration]
      ) [Declarations]
      VarDeclaration(
        VariableDeclaration(
          Type(
           Table
          ) [Type]
          SingleVar(
            SingleVarDeclaration(
             val
              NoBrackets(
              ) [NoBrackets]
            ) [SingleVarDeclaration]
          ) [SingleVar]
        ) [VariableDeclaration]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VariableDeclaration(
        Type(
         Board
        ) [Type]
        SingleVar(
          SingleVarDeclaration(
           board
            NoBrackets(
            ) [NoBrackets]
          ) [SingleVarDeclaration]
        ) [SingleVar]
      ) [VariableDeclaration]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        NoMethodDecls(
        ) [NoMethodDecls]
        MethodDeclaration(
          MethodVoidType(
           f
          ) [MethodVoidType]
          FormParamLs(
            FormParams(
              FormParams(
                SingleFormParam(
                  FormParameter(
                    Type(
                     char
                    ) [Type]
                   ch
                    NoBrackets(
                    ) [NoBrackets]
                  ) [FormParameter]
                ) [SingleFormParam]
                FormParameter(
                  Type(
                   int
                  ) [Type]
                 a
                  NoBrackets(
                  ) [NoBrackets]
                ) [FormParameter]
              ) [FormParams]
              FormParameter(
                Type(
                 int
                ) [Type]
               arg
                NoBrackets(
                ) [NoBrackets]
              ) [FormParameter]
            ) [FormParams]
          ) [FormParamLs]
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                SingleVarDeclaration(
                 x
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [SingleVar]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          MultipleStatements(
            NotSuperStmt(
            ) [NotSuperStmt]
            StatementListNotEmpty(
              NoStatements(
              ) [NoStatements]
              SingleStatementNoLabel(
                DesignatorStmt(
                  DesignatorStatmentNoError(
                    SingleDesignator(
                     x
                    ) [SingleDesignator]
                    DesignatorAssign(
                      Assignop(
                      ) [Assignop]
                      TermExpression(
                        SingleFactor(
                          VarFactor(
                            SingleDesignator(
                             arg
                            ) [SingleDesignator]
                          ) [VarFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [DesignatorAssign]
                  ) [DesignatorStatmentNoError]
                ) [DesignatorStmt]
              ) [SingleStatementNoLabel]
            ) [StatementListNotEmpty]
            RbraceStatements(
            ) [RbraceStatements]
          ) [MultipleStatements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MethodVoidType(
         mains
        ) [MethodVoidType]
        NoFormParams(
        ) [NoFormParams]
        VarDeclarations(
          VarDeclarations(
            NoVarDecls(
            ) [NoVarDecls]
            VariableDeclaration(
              Type(
               int
              ) [Type]
              VarDeclarationList(
                SingleVar(
                  SingleVarDeclaration(
                   x
                    NoBrackets(
                    ) [NoBrackets]
                  ) [SingleVarDeclaration]
                ) [SingleVar]
                SingleVarDeclaration(
                 i
                  NoBrackets(
                  ) [NoBrackets]
                ) [SingleVarDeclaration]
              ) [VarDeclarationList]
            ) [VariableDeclaration]
          ) [VarDeclarations]
          VariableDeclaration(
            Type(
             char
            ) [Type]
            SingleVar(
              SingleVarDeclaration(
               c
                NoBrackets(
                ) [NoBrackets]
              ) [SingleVarDeclaration]
            ) [SingleVar]
          ) [VariableDeclaration]
        ) [VarDeclarations]
        MultipleStatements(
          NotSuperStmt(
          ) [NotSuperStmt]
          StatementListNotEmpty(
            StatementListNotEmpty(
              StatementListNotEmpty(
                StatementListNotEmpty(
                  StatementListNotEmpty(
                    StatementListNotEmpty(
                      StatementListNotEmpty(
                        StatementListNotEmpty(
                          StatementListNotEmpty(
                            StatementListNotEmpty(
                              StatementListNotEmpty(
                                StatementListNotEmpty(
                                  StatementListNotEmpty(
                                    NoStatements(
                                    ) [NoStatements]
                                    SingleStatementNoLabel(
                                      DesignatorStmt(
                                        DesignatorStatmentNoError(
                                          SingleDesignator(
                                           val
                                          ) [SingleDesignator]
                                          DesignatorAssign(
                                            Assignop(
                                            ) [Assignop]
                                            TermExpression(
                                              SingleFactor(
                                                NewFactor(
                                                  ClassName(
                                                    Type(
                                                     Table
                                                    ) [Type]
                                                  ) [ClassName]
                                                  FactorNewNoExpr(
                                                  ) [FactorNewNoExpr]
                                                ) [NewFactor]
                                              ) [SingleFactor]
                                            ) [TermExpression]
                                          ) [DesignatorAssign]
                                        ) [DesignatorStatmentNoError]
                                      ) [DesignatorStmt]
                                    ) [SingleStatementNoLabel]
                                  ) [StatementListNotEmpty]
                                  SingleStatementNoLabel(
                                    DesignatorStmt(
                                      DesignatorStatmentNoError(
                                        DesignatorDot(
                                          SingleDesignator(
                                           val
                                          ) [SingleDesignator]
                                         pos
                                        ) [DesignatorDot]
                                        DesignatorAssign(
                                          Assignop(
                                          ) [Assignop]
                                          TermExpression(
                                            SingleFactor(
                                              NewFactor(
                                                ClassName(
                                                  Type(
                                                   int
                                                  ) [Type]
                                                ) [ClassName]
                                                FactorNewExpr(
                                                  TermExpression(
                                                    SingleFactor(
                                                      VarFactor(
                                                        SingleDesignator(
                                                         size
                                                        ) [SingleDesignator]
                                                      ) [VarFactor]
                                                    ) [SingleFactor]
                                                  ) [TermExpression]
                                                ) [FactorNewExpr]
                                              ) [NewFactor]
                                            ) [SingleFactor]
                                          ) [TermExpression]
                                        ) [DesignatorAssign]
                                      ) [DesignatorStatmentNoError]
                                    ) [DesignatorStmt]
                                  ) [SingleStatementNoLabel]
                                ) [StatementListNotEmpty]
                                SingleStatementNoLabel(
                                  DesignatorStmt(
                                    DesignatorStatmentNoError(
                                      DesignatorDot(
                                        SingleDesignator(
                                         val
                                        ) [SingleDesignator]
                                       neg
                                      ) [DesignatorDot]
                                      DesignatorAssign(
                                        Assignop(
                                        ) [Assignop]
                                        TermExpression(
                                          SingleFactor(
                                            NewFactor(
                                              ClassName(
                                                Type(
                                                 int
                                                ) [Type]
                                              ) [ClassName]
                                              FactorNewExpr(
                                                TermExpression(
                                                  SingleFactor(
                                                    VarFactor(
                                                      SingleDesignator(
                                                       size
                                                      ) [SingleDesignator]
                                                    ) [VarFactor]
                                                  ) [SingleFactor]
                                                ) [TermExpression]
                                              ) [FactorNewExpr]
                                            ) [NewFactor]
                                          ) [SingleFactor]
                                        ) [TermExpression]
                                      ) [DesignatorAssign]
                                    ) [DesignatorStatmentNoError]
                                  ) [DesignatorStmt]
                                ) [SingleStatementNoLabel]
                              ) [StatementListNotEmpty]
                              SingleStatementNoLabel(
                                ReadStmt(
                                  SingleDesignator(
                                   x
                                  ) [SingleDesignator]
                                ) [ReadStmt]
                              ) [SingleStatementNoLabel]
                            ) [StatementListNotEmpty]
                            SingleStatementNoLabel(
                              UnmatchedStatement(
                                If(
                                ) [If]
                                SingleCondTerm(
                                  SingleCondFact(
                                    ConditionFact(
                                      TermExpression(
                                        SingleFactor(
                                          VarFactor(
                                            SingleDesignator(
                                             x
                                            ) [SingleDesignator]
                                          ) [VarFactor]
                                        ) [SingleFactor]
                                      ) [TermExpression]
                                      RelopGreater(
                                      ) [RelopGreater]
                                      TermExpression(
                                        SingleFactor(
                                          NumConstFactor(
                                           5
                                          ) [NumConstFactor]
                                        ) [SingleFactor]
                                      ) [TermExpression]
                                    ) [ConditionFact]
                                  ) [SingleCondFact]
                                ) [SingleCondTerm]
                                Stmts(
                                  MultipleStatements(
                                    NotSuperStmt(
                                    ) [NotSuperStmt]
                                    StatementListNotEmpty(
                                      NoStatements(
                                      ) [NoStatements]
                                      SingleStatementNoLabel(
                                        GoToStmt(
                                          Label(
                                           skip
                                          ) [Label]
                                        ) [GoToStmt]
                                      ) [SingleStatementNoLabel]
                                    ) [StatementListNotEmpty]
                                    RbraceStatements(
                                    ) [RbraceStatements]
                                  ) [MultipleStatements]
                                ) [Stmts]
                              ) [UnmatchedStatement]
                            ) [SingleStatementNoLabel]
                          ) [StatementListNotEmpty]
                          SingleStatementNoLabel(
                            DesignatorStmt(
                              DesignatorStatmentNoError(
                                SingleDesignator(
                                 i
                                ) [SingleDesignator]
                                DesignatorAssign(
                                  Assignop(
                                  ) [Assignop]
                                  TermExpression(
                                    SingleFactor(
                                      NumConstFactor(
                                       0
                                      ) [NumConstFactor]
                                    ) [SingleFactor]
                                  ) [TermExpression]
                                ) [DesignatorAssign]
                              ) [DesignatorStatmentNoError]
                            ) [DesignatorStmt]
                          ) [SingleStatementNoLabel]
                        ) [StatementListNotEmpty]
                        SingleStatementNoLabel(
                          ContinueStmt(
                          ) [ContinueStmt]
                        ) [SingleStatementNoLabel]
                      ) [StatementListNotEmpty]
                      SingleStatementNoLabel(
                        DoWhileStmt(
                          Do(
                          ) [Do]
                          Stmts(
                            MultipleStatements(
                              NotSuperStmt(
                              ) [NotSuperStmt]
                              StatementListNotEmpty(
                                StatementListNotEmpty(
                                  StatementListNotEmpty(
                                    NoStatements(
                                    ) [NoStatements]
                                    SingleStatementNoLabel(
                                      DesignatorStmt(
                                        DesignatorStatmentNoError(
                                          DesignatorDot(
                                            SingleDesignator(
                                             val
                                            ) [SingleDesignator]
                                           putp
                                          ) [DesignatorDot]
                                          DesignatorFuncCall(
                                            ActualParsList(
                                              ActualPars(
                                                SingleExpr(
                                                  TermExpression(
                                                    SingleFactor(
                                                      NumConstFactor(
                                                       0
                                                      ) [NumConstFactor]
                                                    ) [SingleFactor]
                                                  ) [TermExpression]
                                                ) [SingleExpr]
                                                TermExpression(
                                                  SingleFactor(
                                                    VarFactor(
                                                      SingleDesignator(
                                                       i
                                                      ) [SingleDesignator]
                                                    ) [VarFactor]
                                                  ) [SingleFactor]
                                                ) [TermExpression]
                                              ) [ActualPars]
                                            ) [ActualParsList]
                                          ) [DesignatorFuncCall]
                                        ) [DesignatorStatmentNoError]
                                      ) [DesignatorStmt]
                                    ) [SingleStatementNoLabel]
                                  ) [StatementListNotEmpty]
                                  SingleStatementNoLabel(
                                    DesignatorStmt(
                                      DesignatorStatmentNoError(
                                        DesignatorDot(
                                          SingleDesignator(
                                           val
                                          ) [SingleDesignator]
                                         putn
                                        ) [DesignatorDot]
                                        DesignatorFuncCall(
                                          ActualParsList(
                                            ActualPars(
                                              SingleExpr(
                                                TermExpression(
                                                  SingleFactor(
                                                    NumConstFactor(
                                                     0
                                                    ) [NumConstFactor]
                                                  ) [SingleFactor]
                                                ) [TermExpression]
                                              ) [SingleExpr]
                                              TermExpression(
                                                SingleFactor(
                                                  VarFactor(
                                                    SingleDesignator(
                                                     i
                                                    ) [SingleDesignator]
                                                  ) [VarFactor]
                                                ) [SingleFactor]
                                              ) [TermExpression]
                                            ) [ActualPars]
                                          ) [ActualParsList]
                                        ) [DesignatorFuncCall]
                                      ) [DesignatorStatmentNoError]
                                    ) [DesignatorStmt]
                                  ) [SingleStatementNoLabel]
                                ) [StatementListNotEmpty]
                                SingleStatementNoLabel(
                                  DesignatorStmt(
                                    DesignatorStatmentNoError(
                                      SingleDesignator(
                                       i
                                      ) [SingleDesignator]
                                      DesignatorIncrement(
                                      ) [DesignatorIncrement]
                                    ) [DesignatorStatmentNoError]
                                  ) [DesignatorStmt]
                                ) [SingleStatementNoLabel]
                              ) [StatementListNotEmpty]
                              RbraceStatements(
                              ) [RbraceStatements]
                            ) [MultipleStatements]
                          ) [Stmts]
                          While(
                          ) [While]
                          SingleCondTerm(
                            SingleCondFact(
                              ConditionFact(
                                TermExpression(
                                  SingleFactor(
                                    VarFactor(
                                      SingleDesignator(
                                       i
                                      ) [SingleDesignator]
                                    ) [VarFactor]
                                  ) [SingleFactor]
                                ) [TermExpression]
                                RelopLess(
                                ) [RelopLess]
                                TermExpression(
                                  SingleFactor(
                                    VarFactor(
                                      SingleDesignator(
                                       size
                                      ) [SingleDesignator]
                                    ) [VarFactor]
                                  ) [SingleFactor]
                                ) [TermExpression]
                              ) [ConditionFact]
                            ) [SingleCondFact]
                          ) [SingleCondTerm]
                        ) [DoWhileStmt]
                      ) [SingleStatementNoLabel]
                    ) [StatementListNotEmpty]
                    SingleStatementWithIdent(
                      Label(
                       skip2
                      ) [Label]
                      DesignatorStmt(
                        DesignatorStatmentNoError(
                          SingleDesignator(
                           f
                          ) [SingleDesignator]
                          DesignatorFuncCall(
                            ActualParsList(
                              ActualPars(
                                ActualPars(
                                  SingleExpr(
                                    TermExpression(
                                      SingleFactor(
                                        VarFactor(
                                          SingleDesignator(
                                           c
                                          ) [SingleDesignator]
                                        ) [VarFactor]
                                      ) [SingleFactor]
                                    ) [TermExpression]
                                  ) [SingleExpr]
                                  TermExpression(
                                    SingleFactor(
                                      VarFactor(
                                        SingleDesignator(
                                         x
                                        ) [SingleDesignator]
                                      ) [VarFactor]
                                    ) [SingleFactor]
                                  ) [TermExpression]
                                ) [ActualPars]
                                TermExpression(
                                  SingleFactor(
                                    VarFactor(
                                      SingleDesignator(
                                       i
                                      ) [SingleDesignator]
                                    ) [VarFactor]
                                  ) [SingleFactor]
                                ) [TermExpression]
                              ) [ActualPars]
                            ) [ActualParsList]
                          ) [DesignatorFuncCall]
                        ) [DesignatorStatmentNoError]
                      ) [DesignatorStmt]
                    ) [SingleStatementWithIdent]
                  ) [StatementListNotEmpty]
                  SingleStatementNoLabel(
                    DesignatorStmt(
                      DesignatorStatmentNoError(
                        SingleDesignator(
                         board
                        ) [SingleDesignator]
                        DesignatorAssign(
                          Assignop(
                          ) [Assignop]
                          TermExpression(
                            SingleFactor(
                              NewFactor(
                                ClassName(
                                  Type(
                                   Board
                                  ) [Type]
                                ) [ClassName]
                                FactorNewNoExpr(
                                ) [FactorNewNoExpr]
                              ) [NewFactor]
                            ) [SingleFactor]
                          ) [TermExpression]
                        ) [DesignatorAssign]
                      ) [DesignatorStatmentNoError]
                    ) [DesignatorStmt]
                  ) [SingleStatementNoLabel]
                ) [StatementListNotEmpty]
                SingleStatementNoLabel(
                  ReadStmt(
                    DesignatorDot(
                      SingleDesignator(
                       board
                      ) [SingleDesignator]
                     rows
                    ) [DesignatorDot]
                  ) [ReadStmt]
                ) [SingleStatementNoLabel]
              ) [StatementListNotEmpty]
              SingleStatementNoLabel(
                DesignatorStmt(
                  DesignatorStatmentNoError(
                    SingleDesignator(
                     x
                    ) [SingleDesignator]
                    DesignatorAssign(
                      Assignop(
                      ) [Assignop]
                      TermExpression(
                        SingleFactor(
                          VarFactor(
                            DesignatorDot(
                              SingleDesignator(
                               board
                              ) [SingleDesignator]
                             rows
                            ) [DesignatorDot]
                          ) [VarFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [DesignatorAssign]
                  ) [DesignatorStatmentNoError]
                ) [DesignatorStmt]
              ) [SingleStatementNoLabel]
            ) [StatementListNotEmpty]
            SingleStatementNoLabel(
              DoWhileStmt(
                Do(
                ) [Do]
                Stmts(
                  MultipleStatements(
                    NotSuperStmt(
                    ) [NotSuperStmt]
                    StatementListNotEmpty(
                      StatementListNotEmpty(
                        StatementListNotEmpty(
                          StatementListNotEmpty(
                            StatementListNotEmpty(
                              StatementListNotEmpty(
                                StatementListNotEmpty(
                                  NoStatements(
                                  ) [NoStatements]
                                  SingleStatementNoLabel(
                                    UnmatchedStatement(
                                      If(
                                      ) [If]
                                      SingleCondTerm(
                                        SingleCondFact(
                                          ConditionFact(
                                            TermExpression(
                                              SingleFactor(
                                                VarFactor(
                                                  SingleDesignator(
                                                   x
                                                  ) [SingleDesignator]
                                                ) [VarFactor]
                                              ) [SingleFactor]
                                            ) [TermExpression]
                                            RelopLTE(
                                            ) [RelopLTE]
                                            TermExpression(
                                              SingleFactor(
                                                NumConstFactor(
                                                 0
                                                ) [NumConstFactor]
                                              ) [SingleFactor]
                                            ) [TermExpression]
                                          ) [ConditionFact]
                                        ) [SingleCondFact]
                                      ) [SingleCondTerm]
                                      SingleStatementNoLabel(
                                        BreakStmt(
                                        ) [BreakStmt]
                                      ) [SingleStatementNoLabel]
                                    ) [UnmatchedStatement]
                                  ) [SingleStatementNoLabel]
                                ) [StatementListNotEmpty]
                                SingleStatementNoLabel(
                                  MatchedStatement(
                                    If(
                                    ) [If]
                                    ConditionTerms(
                                      SingleCondTerm(
                                        SingleCondFact(
                                          ConditionFact(
                                            TermExpression(
                                              SingleFactor(
                                                VarFactor(
                                                  SingleDesignator(
                                                   board
                                                  ) [SingleDesignator]
                                                ) [VarFactor]
                                              ) [SingleFactor]
                                            ) [TermExpression]
                                            RelopLTE(
                                            ) [RelopLTE]
                                            TermExpression(
                                              SingleFactor(
                                                VarFactor(
                                                  SingleDesignator(
                                                   board
                                                  ) [SingleDesignator]
                                                ) [VarFactor]
                                              ) [SingleFactor]
                                            ) [TermExpression]
                                          ) [ConditionFact]
                                        ) [SingleCondFact]
                                      ) [SingleCondTerm]
                                      Or(
                                      ) [Or]
                                      ConditionTerm(
                                        SingleCondFact(
                                          ConditionFact(
                                            TermExpression(
                                              SingleFactor(
                                                VarFactor(
                                                  SingleDesignator(
                                                   x
                                                  ) [SingleDesignator]
                                                ) [VarFactor]
                                              ) [SingleFactor]
                                            ) [TermExpression]
                                            RelopLess(
                                            ) [RelopLess]
                                            TermExpression(
                                              SingleFactor(
                                                VarFactor(
                                                  SingleDesignator(
                                                   size
                                                  ) [SingleDesignator]
                                                ) [VarFactor]
                                              ) [SingleFactor]
                                            ) [TermExpression]
                                          ) [ConditionFact]
                                        ) [SingleCondFact]
                                        And(
                                        ) [And]
                                        ConditionFact(
                                          TermExpression(
                                            SingleFactor(
                                              VarFactor(
                                                SingleDesignator(
                                                 board
                                                ) [SingleDesignator]
                                              ) [VarFactor]
                                            ) [SingleFactor]
                                          ) [TermExpression]
                                          RelopLess(
                                          ) [RelopLess]
                                          TermExpression(
                                            SingleFactor(
                                              VarFactor(
                                                SingleDesignator(
                                                 size
                                                ) [SingleDesignator]
                                              ) [VarFactor]
                                            ) [SingleFactor]
                                          ) [TermExpression]
                                        ) [ConditionFact]
                                      ) [ConditionTerm]
                                    ) [ConditionTerms]
                                    Stmts(
                                      MultipleStatements(
                                        NotSuperStmt(
                                        ) [NotSuperStmt]
                                        StatementListNotEmpty(
                                          NoStatements(
                                          ) [NoStatements]
                                          SingleStatementNoLabel(
                                            DesignatorStmt(
                                              DesignatorStatmentNoError(
                                                DesignatorDot(
                                                  SingleDesignator(
                                                   val
                                                  ) [SingleDesignator]
                                                 putp
                                                ) [DesignatorDot]
                                                DesignatorFuncCall(
                                                  ActualParsList(
                                                    ActualPars(
                                                      SingleExpr(
                                                        Expression(
                                                          TermExpression(
                                                            SingleFactor(
                                                              FunctionCall(
                                                                DesignatorDot(
                                                                  SingleDesignator(
                                                                   val
                                                                  ) [SingleDesignator]
                                                                 getp
                                                                ) [DesignatorDot]
                                                                FactorActPars(
                                                                  ActualParsList(
                                                                    SingleExpr(
                                                                      TermExpression(
                                                                        SingleFactor(
                                                                          VarFactor(
                                                                            SingleDesignator(
                                                                             x
                                                                            ) [SingleDesignator]
                                                                          ) [VarFactor]
                                                                        ) [SingleFactor]
                                                                      ) [TermExpression]
                                                                    ) [SingleExpr]
                                                                  ) [ActualParsList]
                                                                ) [FactorActPars]
                                                              ) [FunctionCall]
                                                            ) [SingleFactor]
                                                          ) [TermExpression]
                                                          AddopPlus(
                                                          ) [AddopPlus]
                                                          SingleFactor(
                                                            NumConstFactor(
                                                             1
                                                            ) [NumConstFactor]
                                                          ) [SingleFactor]
                                                        ) [Expression]
                                                      ) [SingleExpr]
                                                      TermExpression(
                                                        SingleFactor(
                                                          NumConstFactor(
                                                           2
                                                          ) [NumConstFactor]
                                                        ) [SingleFactor]
                                                      ) [TermExpression]
                                                    ) [ActualPars]
                                                  ) [ActualParsList]
                                                ) [DesignatorFuncCall]
                                              ) [DesignatorStatmentNoError]
                                            ) [DesignatorStmt]
                                          ) [SingleStatementNoLabel]
                                        ) [StatementListNotEmpty]
                                        RbraceStatements(
                                        ) [RbraceStatements]
                                      ) [MultipleStatements]
                                    ) [Stmts]
                                    Else(
                                    ) [Else]
                                    SingleStatementNoLabel(
                                      UnmatchedStatement(
                                        If(
                                        ) [If]
                                        SingleCondTerm(
                                          ConditionTerm(
                                            SingleCondFact(
                                              ConditionFact(
                                                MinusTermExpression(
                                                  SingleFactor(
                                                    VarFactor(
                                                      SingleDesignator(
                                                       size
                                                      ) [SingleDesignator]
                                                    ) [VarFactor]
                                                  ) [SingleFactor]
                                                ) [MinusTermExpression]
                                                RelopLess(
                                                ) [RelopLess]
                                                TermExpression(
                                                  SingleFactor(
                                                    VarFactor(
                                                      SingleDesignator(
                                                       x
                                                      ) [SingleDesignator]
                                                    ) [VarFactor]
                                                  ) [SingleFactor]
                                                ) [TermExpression]
                                              ) [ConditionFact]
                                            ) [SingleCondFact]
                                            And(
                                            ) [And]
                                            ConditionFact(
                                              TermExpression(
                                                SingleFactor(
                                                  VarFactor(
                                                    SingleDesignator(
                                                     x
                                                    ) [SingleDesignator]
                                                  ) [VarFactor]
                                                ) [SingleFactor]
                                              ) [TermExpression]
                                              RelopLess(
                                              ) [RelopLess]
                                              TermExpression(
                                                SingleFactor(
                                                  NumConstFactor(
                                                   0
                                                  ) [NumConstFactor]
                                                ) [SingleFactor]
                                              ) [TermExpression]
                                            ) [ConditionFact]
                                          ) [ConditionTerm]
                                        ) [SingleCondTerm]
                                        Stmts(
                                          MultipleStatements(
                                            NotSuperStmt(
                                            ) [NotSuperStmt]
                                            StatementListNotEmpty(
                                              NoStatements(
                                              ) [NoStatements]
                                              SingleStatementNoLabel(
                                                DesignatorStmt(
                                                  DesignatorStatmentNoError(
                                                    DesignatorDot(
                                                      SingleDesignator(
                                                       val
                                                      ) [SingleDesignator]
                                                     putn
                                                    ) [DesignatorDot]
                                                    DesignatorFuncCall(
                                                      ActualParsList(
                                                        ActualPars(
                                                          SingleExpr(
                                                            TermExpression(
                                                              SingleFactor(
                                                                FunctionCall(
                                                                  DesignatorDot(
                                                                    SingleDesignator(
                                                                     val
                                                                    ) [SingleDesignator]
                                                                   getn
                                                                  ) [DesignatorDot]
                                                                  FactorActPars(
                                                                    ActualParsList(
                                                                      SingleExpr(
                                                                        MinusTermExpression(
                                                                          SingleFactor(
                                                                            VarFactor(
                                                                              SingleDesignator(
                                                                               x
                                                                              ) [SingleDesignator]
                                                                            ) [VarFactor]
                                                                          ) [SingleFactor]
                                                                        ) [MinusTermExpression]
                                                                      ) [SingleExpr]
                                                                    ) [ActualParsList]
                                                                  ) [FactorActPars]
                                                                ) [FunctionCall]
                                                              ) [SingleFactor]
                                                            ) [TermExpression]
                                                          ) [SingleExpr]
                                                          TermExpression(
                                                            SingleFactor(
                                                              NumConstFactor(
                                                               2
                                                              ) [NumConstFactor]
                                                            ) [SingleFactor]
                                                          ) [TermExpression]
                                                        ) [ActualPars]
                                                      ) [ActualParsList]
                                                    ) [DesignatorFuncCall]
                                                  ) [DesignatorStatmentNoError]
                                                ) [DesignatorStmt]
                                              ) [SingleStatementNoLabel]
                                            ) [StatementListNotEmpty]
                                            RbraceStatements(
                                            ) [RbraceStatements]
                                          ) [MultipleStatements]
                                        ) [Stmts]
                                      ) [UnmatchedStatement]
                                    ) [SingleStatementNoLabel]
                                  ) [MatchedStatement]
                                ) [SingleStatementNoLabel]
                              ) [StatementListNotEmpty]
                              SingleStatementNoLabel(
                                DesignatorStmt(
                                  DesignatorStatmentNoError(
                                    DesignatorArray(
                                      SingleDesignator(
                                       x
                                      ) [SingleDesignator]
                                      TermExpression(
                                        SingleFactor(
                                          NumConstFactor(
                                           3
                                          ) [NumConstFactor]
                                        ) [SingleFactor]
                                      ) [TermExpression]
                                    ) [DesignatorArray]
                                    DesignatorAssign(
                                      Assignop(
                                      ) [Assignop]
                                      TermExpression(
                                        SingleFactor(
                                          NumConstFactor(
                                           5
                                          ) [NumConstFactor]
                                        ) [SingleFactor]
                                      ) [TermExpression]
                                    ) [DesignatorAssign]
                                  ) [DesignatorStatmentNoError]
                                ) [DesignatorStmt]
                              ) [SingleStatementNoLabel]
                            ) [StatementListNotEmpty]
                            SingleStatementNoLabel(
                              DesignatorStmt(
                                DesignatorStatmentNoError(
                                  SingleDesignator(
                                   x
                                  ) [SingleDesignator]
                                  DesignatorAssign(
                                    Assignop(
                                    ) [Assignop]
                                    TermExpression(
                                      SingleFactor(
                                        NewFactor(
                                          ClassName(
                                            Type(
                                             x
                                            ) [Type]
                                          ) [ClassName]
                                          FactorNewExpr(
                                            TermExpression(
                                              SingleFactor(
                                                NumConstFactor(
                                                 3
                                                ) [NumConstFactor]
                                              ) [SingleFactor]
                                            ) [TermExpression]
                                          ) [FactorNewExpr]
                                        ) [NewFactor]
                                      ) [SingleFactor]
                                    ) [TermExpression]
                                  ) [DesignatorAssign]
                                ) [DesignatorStatmentNoError]
                              ) [DesignatorStmt]
                            ) [SingleStatementNoLabel]
                          ) [StatementListNotEmpty]
                          SingleStatementNoLabel(
                            DesignatorStmt(
                              DesignatorStatmentNoError(
                                SingleDesignator(
                                 putp
                                ) [SingleDesignator]
                                DesignatorFuncCall(
                                  EmptyActualParsList(
                                  ) [EmptyActualParsList]
                                ) [DesignatorFuncCall]
                              ) [DesignatorStatmentNoError]
                            ) [DesignatorStmt]
                          ) [SingleStatementNoLabel]
                        ) [StatementListNotEmpty]
                        SingleStatementNoLabel(
                          PrintStmt(
                            TermExpression(
                              SingleFactor(
                                NumConstFactor(
                                 3
                                ) [NumConstFactor]
                              ) [SingleFactor]
                            ) [TermExpression]
                            NoNumConstPrint(
                            ) [NoNumConstPrint]
                          ) [PrintStmt]
                        ) [SingleStatementNoLabel]
                      ) [StatementListNotEmpty]
                      SingleStatementNoLabel(
                        ReadStmt(
                          SingleDesignator(
                           x
                          ) [SingleDesignator]
                        ) [ReadStmt]
                      ) [SingleStatementNoLabel]
                    ) [StatementListNotEmpty]
                    RbraceStatements(
                    ) [RbraceStatements]
                  ) [MultipleStatements]
                ) [Stmts]
                While(
                ) [While]
                SingleCondTerm(
                  SingleCondFact(
                    CondFactExpr(
                      TermExpression(
                        SingleFactor(
                          BoolConstFactor(
                           true
                          ) [BoolConstFactor]
                        ) [SingleFactor]
                      ) [TermExpression]
                    ) [CondFactExpr]
                  ) [SingleCondFact]
                ) [SingleCondTerm]
              ) [DoWhileStmt]
            ) [SingleStatementNoLabel]
          ) [StatementListNotEmpty]
          RbraceStatements(
          ) [RbraceStatements]
        ) [MultipleStatements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MethodVoidType(
       mains
      ) [MethodVoidType]
      NoFormParams(
      ) [NoFormParams]
      NoVarDecls(
      ) [NoVarDecls]
      MultipleStatements(
        NotSuperStmt(
        ) [NotSuperStmt]
        NoStatements(
        ) [NoStatements]
        RbraceStatements(
        ) [RbraceStatements]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  21:10:29,347 - ===================================
INFO  21:10:29,353 - Deklarisana konstanta size na liniji 2
INFO  21:10:29,353 - Deklarisana  klasa Table na liniji 3
INFO  21:10:29,353 - Deklarisano nizovsko polje pos na liniji 4
INFO  21:10:29,353 - Deklarisano nizovsko polje neg na liniji 4
INFO  21:10:29,354 - Pozvan je super konstruktor klase Table na liniji: 10
ERROR 21:10:29,354 - Greska na liniji:0 return naredba se mora nalaziti u okviru odgovarajuce metode!
INFO  21:10:29,354 - Obradjuje se funkcija putp na liniji 11
INFO  21:10:29,354 - Deklarisana parameter funkcije a na liniji 11
INFO  21:10:29,355 - Deklarisana parameter funkcije idx na liniji 11
INFO  21:10:29,355 - Pristupa se promenljivoj idx na liniji 11
INFO  21:10:29,355 - Pristupa se elementu niza pos na liniji 11
INFO  21:10:29,355 - Pristupa se promenljivoj a na liniji 11
INFO  21:10:29,355 - Obradjuje se funkcija putn na liniji 12
INFO  21:10:29,355 - Deklarisana parameter funkcije a na liniji 12
INFO  21:10:29,355 - Deklarisana parameter funkcije idx na liniji 12
ERROR 21:10:29,355 - Greska na liniji 12 :ime C nije deklarisano!
INFO  21:10:29,355 - Pristupa se elementu niza neg na liniji 12
ERROR 21:10:29,355 - Greska na liniji 12 index nije celobrojna vrednost! 
INFO  21:10:29,355 - Pristupa se promenljivoj a na liniji 12
INFO  21:10:29,356 - Obradjuje se funkcija getp na liniji 13
INFO  21:10:29,356 - Deklarisana parameter funkcije idx na liniji 13
INFO  21:10:29,356 - Pristupa se promenljivoj idx na liniji 13
INFO  21:10:29,356 - Obradjuje se funkcija getn na liniji 14
INFO  21:10:29,356 - Deklarisana parameter funkcije idx na liniji 14
INFO  21:10:29,356 - Pristupa se promenljivoj idx na liniji 14
INFO  21:10:29,356 - Pristupa se elementu niza neg na liniji 14
INFO  21:10:29,356 - Deklarisan rekord Board na liniji 17
INFO  21:10:29,356 - Deklarisana promenljiva rows na liniji 18
INFO  21:10:29,356 - Deklarisana promenljiva columns na liniji 18
INFO  21:10:29,356 - Deklarisana promenljiva val na liniji 20
INFO  21:10:29,356 - Deklarisana promenljiva board na liniji 21
INFO  21:10:29,357 - Obradjuje se funkcija f na liniji 23
INFO  21:10:29,357 - Deklarisana parameter funkcije ch na liniji 23
INFO  21:10:29,357 - Deklarisana parameter funkcije a na liniji 23
INFO  21:10:29,357 - Deklarisana parameter funkcije arg na liniji 23
INFO  21:10:29,357 - Deklarisana promenljiva x na liniji 24
INFO  21:10:29,357 - Pristupa se promenljivoj x na liniji 26
INFO  21:10:29,357 - Pristupa se promenljivoj arg na liniji 26
INFO  21:10:29,357 - Obradjuje se funkcija mains na liniji 28
INFO  21:10:29,357 - Deklarisana promenljiva x na liniji 28
INFO  21:10:29,357 - Deklarisana promenljiva i na liniji 28
INFO  21:10:29,357 - Deklarisana promenljiva c na liniji 28
INFO  21:10:29,357 - Pristupa se promenljivoj val na liniji 30
INFO  21:10:29,357 - Kreiran objekat klase Table na liniji 30
INFO  21:10:29,357 - Pristupa se polju pos klase val na liniji 31
INFO  21:10:29,357 - Pristupa se promenljivoj size na liniji 31
INFO  21:10:29,358 - Kreiran niz objekata klase int na liniji 31
INFO  21:10:29,358 - Pristupa se polju neg klase val na liniji 32
INFO  21:10:29,358 - Pristupa se promenljivoj size na liniji 32
INFO  21:10:29,358 - Kreiran niz objekata klase int na liniji 32
INFO  21:10:29,358 - Pristupa se promenljivoj x na liniji 33
INFO  21:10:29,358 - Pristupa se promenljivoj x na liniji 34
INFO  21:10:29,359 - Pristupa se promenljivoj i na liniji 38
ERROR 21:10:29,360 - Greska na liniji:0 naredba continue se mora nalaziti u okruzujucem do-while statement-u! 
INFO  21:10:29,360 - Pristupa se promenljivoj i na liniji 41
INFO  21:10:29,360 - Pronadjen poziv funkcije putp na liniji 41
INFO  21:10:29,360 - Pristupa se promenljivoj i na liniji 42
INFO  21:10:29,360 - Pronadjen poziv funkcije putn na liniji 42
INFO  21:10:29,360 - Pristupa se promenljivoj i na liniji 43
INFO  21:10:29,360 - Pristupa se promenljivoj i na liniji 44
INFO  21:10:29,360 - Pristupa se promenljivoj size na liniji 44
INFO  21:10:29,360 - Deklarisana labela skip2 na liniji 45
INFO  21:10:29,360 - Pristupa se promenljivoj c na liniji 45
INFO  21:10:29,360 - Pristupa se promenljivoj x na liniji 45
INFO  21:10:29,360 - Pristupa se promenljivoj i na liniji 45
INFO  21:10:29,360 - -------------------------------------------------f
INFO  21:10:29,360 - Pronadjen poziv funkcije f na liniji 45
INFO  21:10:29,360 - Pristupa se promenljivoj board na liniji 46
INFO  21:10:29,360 - Kreiran objekat klase Board na liniji 46
INFO  21:10:29,360 - Pristupa se polju rows klase board na liniji 47
INFO  21:10:29,360 - Pristupa se promenljivoj x na liniji 48
INFO  21:10:29,361 - Pristupa se polju rows klase board na liniji 48
INFO  21:10:29,361 - Pristupa se promenljivoj x na liniji 50
INFO  21:10:29,361 - Pristupa se promenljivoj board na liniji 51
INFO  21:10:29,361 - Pristupa se promenljivoj board na liniji 51
ERROR 21:10:29,361 - Greska na liniji:51 nekompatibilan relacioni operater za tipove klase i niza!
INFO  21:10:29,361 - Pristupa se promenljivoj x na liniji 51
INFO  21:10:29,361 - Pristupa se promenljivoj size na liniji 51
INFO  21:10:29,361 - Pristupa se promenljivoj board na liniji 51
INFO  21:10:29,361 - Pristupa se promenljivoj size na liniji 51
ERROR 21:10:29,361 - Greska na liniji:51 nekompatibilni tipovi u izrazu za relacije!
ERROR 21:10:29,361 - Greska na liniji:51 parametri konjukcije nisu logickog tipa!
ERROR 21:10:29,361 - Greska na liniji:51 parametri disjunkcije nisu logickog tipa!
INFO  21:10:29,361 - Pristupa se promenljivoj x na liniji 53
INFO  21:10:29,361 - Pronadjen poziv funkcije getp na liniji 53
INFO  21:10:29,361 - Pronadjen poziv funkcije putp na liniji 53
INFO  21:10:29,361 - Pristupa se promenljivoj size na liniji 55
INFO  21:10:29,361 - Pristupa se promenljivoj x na liniji 55
INFO  21:10:29,362 - Pristupa se promenljivoj x na liniji 55
INFO  21:10:29,362 - Pristupa se promenljivoj x na liniji 57
INFO  21:10:29,362 - Pronadjen poziv funkcije getn na liniji 57
INFO  21:10:29,362 - Pronadjen poziv funkcije putn na liniji 57
ERROR 21:10:29,362 - Greska na liniji:51 condition mora biti logickog tipa! 
ERROR 21:10:29,362 - Greska na liniji 60 promenljiva x nije nizovnog tipa!
ERROR 21:10:29,362 - Greska na liniji:60 leva strana assign naredbe mora biti definisana! 
INFO  21:10:29,362 - Pristupa se promenljivoj x na liniji 61
ERROR 21:10:29,362 - Greska: Ime x ne predstavlja klasni tip! na liniji 61
ERROR 21:10:29,362 - Greska na liniji:61 argumenti assign naredbe moraju biti kompatibilni! 
ERROR 21:10:29,362 - Greska na liniji 62 :ime putp nije deklarisano!
ERROR 21:10:29,362 - Greska na liniji 5 ime: putp nije funkcija!
INFO  21:10:29,362 - Pristupa se promenljivoj x na liniji 64
ERROR 21:10:29,362 - Semanticka greska metoda mains ne sadrzi labelu skip
INFO  21:10:29,362 - Obradjuje se funkcija mains na liniji 68
ERROR 21:10:29,362 - Greska nije pronadjena funkcija main!
INFO  21:10:29,362 - ===================================
