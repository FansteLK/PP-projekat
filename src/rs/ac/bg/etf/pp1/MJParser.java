
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Mon Jan 24 17:21:17 CET 2022
//----------------------------------------------------

package rs.ac.bg.etf.pp1;

import java_cup.runtime.*;
import org.apache.log4j.*;
import rs.ac.bg.etf.pp1.ast.*;

/** CUP v0.10k generated parser.
  * @version Mon Jan 24 17:21:17 CET 2022
  */
public class MJParser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public MJParser() {super();}

  /** Constructor which sets the default scanner. */
  public MJParser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\230\000\002\045\010\000\002\002\004\000\002\044" +
    "\003\000\002\003\004\000\002\003\002\000\002\004\003" +
    "\000\002\004\003\000\002\004\003\000\002\004\003\000" +
    "\002\116\006\000\002\117\005\000\002\117\003\000\002" +
    "\114\005\000\002\057\003\000\002\115\003\000\002\115" +
    "\003\000\002\115\003\000\002\034\004\000\002\034\003" +
    "\000\002\064\005\000\002\064\004\000\002\036\005\000" +
    "\002\036\003\000\002\063\004\000\002\035\005\000\002" +
    "\035\005\000\002\035\004\000\002\035\003\000\002\040" +
    "\004\000\002\040\002\000\002\041\005\000\002\042\005" +
    "\000\002\042\003\000\002\043\004\000\002\043\003\000" +
    "\002\074\012\000\002\074\010\000\002\073\003\000\002" +
    "\024\004\000\002\024\002\000\002\033\003\000\002\033" +
    "\003\000\002\005\006\000\002\005\006\000\002\005\005" +
    "\000\002\005\002\000\002\031\005\000\002\031\003\000" +
    "\002\066\007\000\002\065\003\000\002\077\007\000\002" +
    "\101\006\000\002\046\010\000\002\047\004\000\002\047" +
    "\004\000\002\006\004\000\002\006\002\000\002\051\011" +
    "\000\002\061\003\000\002\050\003\000\002\032\004\000" +
    "\002\032\003\000\002\011\003\000\002\060\010\000\002" +
    "\010\004\000\002\010\003\000\002\007\004\000\002\007" +
    "\002\000\002\025\003\000\002\025\002\000\002\100\005" +
    "\000\002\100\003\000\002\071\005\000\002\071\003\000" +
    "\002\107\003\000\002\102\004\000\002\102\002\000\002" +
    "\075\006\000\002\075\002\000\002\103\003\000\002\103" +
    "\005\000\002\103\003\000\002\104\003\000\002\104\011" +
    "\000\002\104\004\000\002\104\004\000\002\104\005\000" +
    "\002\104\004\000\002\104\010\000\002\104\007\000\002" +
    "\104\005\000\002\104\011\000\002\104\007\000\002\056" +
    "\003\000\002\052\003\000\002\053\003\000\002\054\003" +
    "\000\002\014\003\000\002\023\004\000\002\023\002\000" +
    "\002\105\006\000\002\055\003\000\002\012\005\000\002" +
    "\012\004\000\002\113\004\000\002\113\005\000\002\113" +
    "\003\000\002\113\003\000\002\026\003\000\002\026\002" +
    "\000\002\013\005\000\002\013\003\000\002\121\005\000" +
    "\002\121\003\000\002\016\003\000\002\122\005\000\002" +
    "\122\003\000\002\015\003\000\002\120\005\000\002\120" +
    "\003\000\002\110\005\000\002\110\004\000\002\110\003" +
    "\000\002\112\005\000\002\112\003\000\002\111\004\000" +
    "\002\111\003\000\002\111\003\000\002\111\003\000\002" +
    "\111\003\000\002\111\005\000\002\111\005\000\002\111" +
    "\003\000\002\030\005\000\002\027\005\000\002\027\002" +
    "\000\002\106\003\000\002\106\006\000\002\106\005\000" +
    "\002\076\003\000\002\017\003\000\002\021\003\000\002" +
    "\021\003\000\002\021\003\000\002\021\003\000\002\021" +
    "\003\000\002\021\003\000\002\022\003\000\002\022\003" +
    "\000\002\020\003\000\002\020\003\000\002\020\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u010f\000\004\004\005\001\002\000\004\002\u0111\001" +
    "\002\000\004\062\006\001\002\000\014\007\uffff\012\uffff" +
    "\027\uffff\060\uffff\062\uffff\001\002\000\014\007\ufffd\012" +
    "\ufffd\027\ufffd\060\ufffd\062\ufffd\001\002\000\014\007\023" +
    "\012\022\027\016\060\013\062\014\001\002\000\006\003" +
    "\u010a\062\u010c\001\002\000\014\007\ufffe\012\ufffe\027\ufffe" +
    "\060\ufffe\062\ufffe\001\002\000\010\005\uffc9\061\uffc9\062" +
    "\uffc9\001\002\000\060\003\uffb7\022\uffb7\030\uffb7\031\uffb7" +
    "\032\uffb7\033\uffb7\034\uffb7\035\uffb7\036\uffb7\037\uffb7\040" +
    "\uffb7\041\uffb7\042\uffb7\043\uffb7\044\uffb7\050\uffb7\052\uffb7" +
    "\054\uffb7\055\uffb7\056\uffb7\057\uffb7\060\uffb7\062\uffb7\001" +
    "\002\000\014\007\ufff9\012\ufff9\027\ufff9\060\ufff9\062\ufff9" +
    "\001\002\000\004\062\014\001\002\000\014\007\ufffb\012" +
    "\ufffb\027\ufffb\060\ufffb\062\ufffb\001\002\000\014\007\ufffa" +
    "\012\ufffa\027\ufffa\060\ufffa\062\ufffa\001\002\000\014\007" +
    "\ufffc\012\ufffc\027\ufffc\060\ufffc\062\ufffc\001\002\000\004" +
    "\062\014\001\002\000\004\062\014\001\002\000\052\022" +
    "\uffdc\030\uffdc\031\uffdc\032\uffdc\033\uffdc\034\uffdc\035\uffdc" +
    "\036\uffdc\037\uffdc\040\uffdc\041\uffdc\042\uffdc\043\uffdc\044" +
    "\uffdc\050\uffdc\052\uffdc\055\uffdc\056\uffdc\057\uffdc\060\uffdc" +
    "\001\002\000\006\022\026\060\uffda\001\002\000\006\003" +
    "\362\062\014\001\002\000\004\060\030\001\002\000\012" +
    "\003\035\060\031\061\uffd4\062\014\001\002\000\006\005" +
    "\043\062\014\001\002\000\004\062\344\001\002\000\004" +
    "\061\341\001\002\000\010\003\uffef\060\uffef\062\uffef\001" +
    "\002\000\004\050\340\001\002\000\010\003\035\060\037" +
    "\062\014\001\002\000\010\005\043\061\047\062\014\001" +
    "\002\000\010\003\ufff0\060\ufff0\062\ufff0\001\002\000\006" +
    "\054\321\062\320\001\002\000\004\061\314\001\002\000" +
    "\004\062\306\001\002\000\004\061\304\001\002\000\010" +
    "\005\uffc4\061\uffc4\062\uffc4\001\002\000\010\005\056\061" +
    "\uffc3\062\014\001\002\000\004\061\uffe6\001\002\000\004" +
    "\005\043\001\002\000\004\061\052\001\002\000\004\061" +
    "\uffe8\001\002\000\004\062\303\001\002\000\010\005\uffc5" +
    "\061\uffc5\062\uffc5\001\002\000\004\054\060\001\002\000" +
    "\004\062\057\001\002\000\004\054\uffcb\001\002\000\010" +
    "\003\063\055\uffbc\062\014\001\002\000\004\055\074\001" +
    "\002\000\004\062\070\001\002\000\006\052\uffb8\055\uffb8" +
    "\001\002\000\006\052\066\055\uffbd\001\002\000\006\052" +
    "\uffba\055\uffba\001\002\000\006\003\063\062\014\001\002" +
    "\000\006\052\uffbb\055\uffbb\001\002\000\010\052\uffbe\055" +
    "\uffbe\056\072\001\002\000\006\052\uffb9\055\uffb9\001\002" +
    "\000\004\057\073\001\002\000\010\050\uffbf\052\uffbf\055" +
    "\uffbf\001\002\000\006\060\uffe4\062\uffe4\001\002\000\006" +
    "\060\076\062\014\001\002\000\034\003\uffb3\006\uffb3\013" +
    "\uffb3\014\uffb3\017\uffb3\020\uffb3\021\uffb3\023\uffb3\025\101" +
    "\026\uffb3\060\uffb3\061\uffb3\062\uffb3\001\002\000\010\060" +
    "\uffe5\061\uffe5\062\uffe5\001\002\000\010\005\uffcd\061\uffcd" +
    "\062\uffcd\001\002\000\004\054\300\001\002\000\032\003" +
    "\uffb5\006\uffb5\013\uffb5\014\uffb5\017\uffb5\020\uffb5\021\uffb5" +
    "\023\uffb5\026\uffb5\060\uffb5\061\uffb5\062\uffb5\001\002\000" +
    "\032\003\124\006\120\013\115\014\116\017\123\020\105" +
    "\021\114\023\106\026\112\060\076\061\110\062\107\001" +
    "\002\000\016\045\270\046\271\047\266\053\200\054\273" +
    "\056\176\001\002\000\004\054\262\001\002\000\004\050" +
    "\261\001\002\000\020\045\uff79\046\uff79\047\uff79\051\uff76" +
    "\053\uff79\054\uff79\056\uff79\001\002\000\040\003\uff9c\005" +
    "\uff9c\006\uff9c\011\uff9c\013\uff9c\014\uff9c\015\uff9c\017\uff9c" +
    "\020\uff9c\021\uff9c\023\uff9c\026\uff9c\060\uff9c\061\uff9c\062" +
    "\uff9c\001\002\000\036\003\uffaf\006\uffaf\011\uffaf\013\uffaf" +
    "\014\uffaf\015\uffaf\017\uffaf\020\uffaf\021\uffaf\023\uffaf\026" +
    "\uffaf\060\uffaf\061\uffaf\062\uffaf\001\002\000\004\062\256" +
    "\001\002\000\036\003\uffb0\006\uffb0\011\uffb0\013\uffb0\014" +
    "\uffb0\015\uffb0\017\uffb0\020\uffb0\021\uffb0\023\uffb0\026\uffb0" +
    "\060\uffb0\061\uffb0\062\uffb0\001\002\000\024\003\147\016" +
    "\136\031\134\050\254\054\152\062\135\063\144\064\146" +
    "\065\143\001\002\000\004\054\uffa2\001\002\000\030\003" +
    "\uffa3\006\uffa3\013\uffa3\014\uffa3\017\uffa3\020\uffa3\021\uffa3" +
    "\023\uffa3\026\uffa3\060\uffa3\062\uffa3\001\002\000\036\003" +
    "\uffb2\006\uffb2\011\uffb2\013\uffb2\014\uffb2\015\uffb2\017\uffb2" +
    "\020\uffb2\021\uffb2\023\uffb2\026\uffb2\060\uffb2\061\uffb2\062" +
    "\uffb2\001\002\000\004\050\252\001\002\000\004\051\250" +
    "\001\002\000\004\054\241\001\002\000\004\054\232\001" +
    "\002\000\004\050\231\001\002\000\032\003\uffb6\006\uffb6" +
    "\013\uffb6\014\uffb6\017\uffb6\020\uffb6\021\uffb6\023\uffb6\026" +
    "\uffb6\060\uffb6\061\uffb6\062\uffb6\001\002\000\030\003\124" +
    "\006\120\013\115\014\116\017\123\020\105\021\114\023" +
    "\106\026\112\060\076\062\107\001\002\000\040\003\uff9d" +
    "\005\uff9d\006\uff9d\011\uff9d\013\uff9d\014\uff9d\015\uff9d\017" +
    "\uff9d\020\uff9d\021\uff9d\023\uff9d\026\uff9d\060\uff9d\061\uff9d" +
    "\062\uff9d\001\002\000\004\015\132\001\002\000\004\054" +
    "\133\001\002\000\004\054\uffa4\001\002\000\022\003\147" +
    "\016\136\031\134\054\152\062\135\063\144\064\146\065" +
    "\143\001\002\000\020\003\147\016\136\054\152\062\135" +
    "\063\144\064\146\065\143\001\002\000\060\030\uff79\031" +
    "\uff79\032\uff79\033\uff79\034\uff79\035\uff79\036\uff79\037\uff79" +
    "\040\uff79\041\uff79\042\uff79\043\uff79\044\uff79\045\uff79\046" +
    "\uff79\047\uff79\050\uff79\052\uff79\053\uff79\054\uff79\055\uff79" +
    "\056\uff79\057\uff79\001\002\000\004\062\014\001\002\000" +
    "\030\030\155\031\156\035\217\036\213\037\216\040\214" +
    "\041\221\042\215\043\uff8a\044\uff8a\055\uff8a\001\002\000" +
    "\052\030\uff83\031\uff83\032\uff83\033\uff83\034\uff83\035\uff83" +
    "\036\uff83\037\uff83\040\uff83\041\uff83\042\uff83\043\uff83\044" +
    "\uff83\050\uff83\052\uff83\053\200\054\177\055\uff83\056\176" +
    "\057\uff83\001\002\000\006\044\172\055\171\001\002\000" +
    "\010\043\uff8d\044\uff8d\055\uff8d\001\002\000\044\030\uff81" +
    "\031\uff81\032\uff81\033\uff81\034\uff81\035\uff81\036\uff81\037" +
    "\uff81\040\uff81\041\uff81\042\uff81\043\uff81\044\uff81\050\uff81" +
    "\052\uff81\055\uff81\057\uff81\001\002\000\044\030\uff80\031" +
    "\uff80\032\uff80\033\uff80\034\uff80\035\uff80\036\uff80\037\uff80" +
    "\040\uff80\041\uff80\042\uff80\043\uff80\044\uff80\050\uff80\052" +
    "\uff80\055\uff80\057\uff80\001\002\000\044\030\uff87\031\uff87" +
    "\032\164\033\162\034\161\035\uff87\036\uff87\037\uff87\040" +
    "\uff87\041\uff87\042\uff87\043\uff87\044\uff87\050\uff87\052\uff87" +
    "\055\uff87\057\uff87\001\002\000\044\030\uff82\031\uff82\032" +
    "\uff82\033\uff82\034\uff82\035\uff82\036\uff82\037\uff82\040\uff82" +
    "\041\uff82\042\uff82\043\uff82\044\uff82\050\uff82\052\uff82\055" +
    "\uff82\057\uff82\001\002\000\044\030\uff7d\031\uff7d\032\uff7d" +
    "\033\uff7d\034\uff7d\035\uff7d\036\uff7d\037\uff7d\040\uff7d\041" +
    "\uff7d\042\uff7d\043\uff7d\044\uff7d\050\uff7d\052\uff7d\055\uff7d" +
    "\057\uff7d\001\002\000\044\030\uff85\031\uff85\032\uff85\033" +
    "\uff85\034\uff85\035\uff85\036\uff85\037\uff85\040\uff85\041\uff85" +
    "\042\uff85\043\uff85\044\uff85\050\uff85\052\uff85\055\uff85\057" +
    "\uff85\001\002\000\010\043\167\044\uff90\055\uff90\001\002" +
    "\000\022\003\147\016\136\031\134\054\152\062\135\063" +
    "\144\064\146\065\143\001\002\000\010\030\155\031\156" +
    "\055\154\001\002\000\044\030\uff7e\031\uff7e\032\uff7e\033" +
    "\uff7e\034\uff7e\035\uff7e\036\uff7e\037\uff7e\040\uff7e\041\uff7e" +
    "\042\uff7e\043\uff7e\044\uff7e\050\uff7e\052\uff7e\055\uff7e\057" +
    "\uff7e\001\002\000\020\003\uff6e\016\uff6e\054\uff6e\062\uff6e" +
    "\063\uff6e\064\uff6e\065\uff6e\001\002\000\020\003\uff6d\016" +
    "\uff6d\054\uff6d\062\uff6d\063\uff6d\064\uff6d\065\uff6d\001\002" +
    "\000\020\003\147\016\136\054\152\062\135\063\144\064" +
    "\146\065\143\001\002\000\044\030\uff89\031\uff89\032\164" +
    "\033\162\034\161\035\uff89\036\uff89\037\uff89\040\uff89\041" +
    "\uff89\042\uff89\043\uff89\044\uff89\050\uff89\052\uff89\055\uff89" +
    "\057\uff89\001\002\000\020\003\uff6a\016\uff6a\054\uff6a\062" +
    "\uff6a\063\uff6a\064\uff6a\065\uff6a\001\002\000\020\003\uff6b" +
    "\016\uff6b\054\uff6b\062\uff6b\063\uff6b\064\uff6b\065\uff6b\001" +
    "\002\000\020\003\147\016\136\054\152\062\135\063\144" +
    "\064\146\065\143\001\002\000\020\003\uff6c\016\uff6c\054" +
    "\uff6c\062\uff6c\063\uff6c\064\uff6c\065\uff6c\001\002\000\044" +
    "\030\uff86\031\uff86\032\uff86\033\uff86\034\uff86\035\uff86\036" +
    "\uff86\037\uff86\040\uff86\041\uff86\042\uff86\043\uff86\044\uff86" +
    "\050\uff86\052\uff86\055\uff86\057\uff86\001\002\000\022\003" +
    "\147\016\136\031\134\054\152\062\135\063\144\064\146" +
    "\065\143\001\002\000\022\003\uff8c\016\uff8c\031\uff8c\054" +
    "\uff8c\062\uff8c\063\uff8c\064\uff8c\065\uff8c\001\002\000\010" +
    "\043\uff8e\044\uff8e\055\uff8e\001\002\000\004\050\175\001" +
    "\002\000\022\003\uff8f\016\uff8f\031\uff8f\054\uff8f\062\uff8f" +
    "\063\uff8f\064\uff8f\065\uff8f\001\002\000\022\003\147\016" +
    "\136\031\134\054\152\062\135\063\144\064\146\065\143" +
    "\001\002\000\010\043\167\044\uff91\055\uff91\001\002\000" +
    "\036\003\uffae\006\uffae\011\uffae\013\uffae\014\uffae\015\uffae" +
    "\017\uffae\020\uffae\021\uffae\023\uffae\026\uffae\060\uffae\061" +
    "\uffae\062\uffae\001\002\000\022\003\147\016\136\031\134" +
    "\054\152\062\135\063\144\064\146\065\143\001\002\000" +
    "\024\003\147\016\136\031\134\054\152\055\uff94\062\135" +
    "\063\144\064\146\065\143\001\002\000\004\062\202\001" +
    "\002\000\044\030\uff84\031\uff84\032\uff84\033\uff84\034\uff84" +
    "\035\uff84\036\uff84\037\uff84\040\uff84\041\uff84\042\uff84\043" +
    "\uff84\044\uff84\050\uff84\052\uff84\055\uff84\057\uff84\001\002" +
    "\000\060\030\uff77\031\uff77\032\uff77\033\uff77\034\uff77\035" +
    "\uff77\036\uff77\037\uff77\040\uff77\041\uff77\042\uff77\043\uff77" +
    "\044\uff77\045\uff77\046\uff77\047\uff77\050\uff77\052\uff77\053" +
    "\uff77\054\uff77\055\uff77\056\uff77\057\uff77\001\002\000\004" +
    "\055\210\001\002\000\012\030\155\031\156\052\uff92\055" +
    "\uff92\001\002\000\006\052\206\055\uff95\001\002\000\022" +
    "\003\147\016\136\031\134\054\152\062\135\063\144\064" +
    "\146\065\143\001\002\000\012\030\155\031\156\052\uff93" +
    "\055\uff93\001\002\000\044\030\uff7c\031\uff7c\032\uff7c\033" +
    "\uff7c\034\uff7c\035\uff7c\036\uff7c\037\uff7c\040\uff7c\041\uff7c" +
    "\042\uff7c\043\uff7c\044\uff7c\050\uff7c\052\uff7c\055\uff7c\057" +
    "\uff7c\001\002\000\010\030\155\031\156\057\212\001\002" +
    "\000\060\030\uff78\031\uff78\032\uff78\033\uff78\034\uff78\035" +
    "\uff78\036\uff78\037\uff78\040\uff78\041\uff78\042\uff78\043\uff78" +
    "\044\uff78\045\uff78\046\uff78\047\uff78\050\uff78\052\uff78\053" +
    "\uff78\054\uff78\055\uff78\056\uff78\057\uff78\001\002\000\022" +
    "\003\uff73\016\uff73\031\uff73\054\uff73\062\uff73\063\uff73\064" +
    "\uff73\065\uff73\001\002\000\022\003\uff71\016\uff71\031\uff71" +
    "\054\uff71\062\uff71\063\uff71\064\uff71\065\uff71\001\002\000" +
    "\022\003\uff6f\016\uff6f\031\uff6f\054\uff6f\062\uff6f\063\uff6f" +
    "\064\uff6f\065\uff6f\001\002\000\022\003\uff72\016\uff72\031" +
    "\uff72\054\uff72\062\uff72\063\uff72\064\uff72\065\uff72\001\002" +
    "\000\022\003\uff74\016\uff74\031\uff74\054\uff74\062\uff74\063" +
    "\uff74\064\uff74\065\uff74\001\002\000\022\003\147\016\136" +
    "\031\134\054\152\062\135\063\144\064\146\065\143\001" +
    "\002\000\022\003\uff70\016\uff70\031\uff70\054\uff70\062\uff70" +
    "\063\uff70\064\uff70\065\uff70\001\002\000\014\030\155\031" +
    "\156\043\uff8b\044\uff8b\055\uff8b\001\002\000\046\030\uff7a" +
    "\031\uff7a\032\uff7a\033\uff7a\034\uff7a\035\uff7a\036\uff7a\037" +
    "\uff7a\040\uff7a\041\uff7a\042\uff7a\043\uff7a\044\uff7a\050\uff7a" +
    "\052\uff7a\055\uff7a\056\225\057\uff7a\001\002\000\044\030" +
    "\uff7f\031\uff7f\032\uff7f\033\uff7f\034\uff7f\035\uff7f\036\uff7f" +
    "\037\uff7f\040\uff7f\041\uff7f\042\uff7f\043\uff7f\044\uff7f\050" +
    "\uff7f\052\uff7f\055\uff7f\057\uff7f\001\002\000\022\003\147" +
    "\016\136\031\134\054\152\062\135\063\144\064\146\065" +
    "\143\001\002\000\010\030\155\031\156\057\227\001\002" +
    "\000\044\030\uff7b\031\uff7b\032\uff7b\033\uff7b\034\uff7b\035" +
    "\uff7b\036\uff7b\037\uff7b\040\uff7b\041\uff7b\042\uff7b\043\uff7b" +
    "\044\uff7b\050\uff7b\052\uff7b\055\uff7b\057\uff7b\001\002\000" +
    "\044\030\uff88\031\uff88\032\164\033\162\034\161\035\uff88" +
    "\036\uff88\037\uff88\040\uff88\041\uff88\042\uff88\043\uff88\044" +
    "\uff88\050\uff88\052\uff88\055\uff88\057\uff88\001\002\000\036" +
    "\003\uff9a\006\uff9a\011\uff9a\013\uff9a\014\uff9a\015\uff9a\017" +
    "\uff9a\020\uff9a\021\uff9a\023\uff9a\026\uff9a\060\uff9a\061\uff9a" +
    "\062\uff9a\001\002\000\022\003\147\016\136\031\134\054" +
    "\152\062\135\063\144\064\146\065\143\001\002\000\012" +
    "\030\155\031\156\052\234\055\uff9e\001\002\000\004\064" +
    "\240\001\002\000\004\055\236\001\002\000\004\050\237" +
    "\001\002\000\036\003\uffa9\006\uffa9\011\uffa9\013\uffa9\014" +
    "\uffa9\015\uffa9\017\uffa9\020\uffa9\021\uffa9\023\uffa9\026\uffa9" +
    "\060\uffa9\061\uffa9\062\uffa9\001\002\000\004\055\uff9f\001" +
    "\002\000\022\003\147\016\136\031\134\054\152\062\135" +
    "\063\144\064\146\065\143\001\002\000\006\044\172\055" +
    "\243\001\002\000\030\003\124\006\120\013\115\014\116" +
    "\017\123\020\105\021\114\023\106\026\112\060\076\062" +
    "\107\001\002\000\036\003\uffa5\006\uffa5\011\245\013\uffa5" +
    "\014\uffa5\015\uffa5\017\uffa5\020\uffa5\021\uffa5\023\uffa5\026" +
    "\uffa5\060\uffa5\061\uffa5\062\uffa5\001\002\000\030\003\uffa1" +
    "\006\uffa1\013\uffa1\014\uffa1\017\uffa1\020\uffa1\021\uffa1\023" +
    "\uffa1\026\uffa1\060\uffa1\062\uffa1\001\002\000\030\003\124" +
    "\006\120\013\115\014\116\017\123\020\105\021\114\023" +
    "\106\026\112\060\076\062\107\001\002\000\036\003\uffa6" +
    "\006\uffa6\011\uffa6\013\uffa6\014\uffa6\015\uffa6\017\uffa6\020" +
    "\uffa6\021\uffa6\023\uffa6\026\uffa6\060\uffa6\061\uffa6\062\uffa6" +
    "\001\002\000\026\003\124\006\120\013\115\014\116\017" +
    "\123\020\105\021\114\023\106\026\112\062\135\001\002" +
    "\000\036\003\uffb1\006\uffb1\011\uffb1\013\uffb1\014\uffb1\015" +
    "\uffb1\017\uffb1\020\uffb1\021\uffb1\023\uffb1\026\uffb1\060\uffb1" +
    "\061\uffb1\062\uffb1\001\002\000\036\003\uffad\006\uffad\011" +
    "\uffad\013\uffad\014\uffad\015\uffad\017\uffad\020\uffad\021\uffad" +
    "\023\uffad\026\uffad\060\uffad\061\uffad\062\uffad\001\002\000" +
    "\010\030\155\031\156\050\255\001\002\000\036\003\uffaa" +
    "\006\uffaa\011\uffaa\013\uffaa\014\uffaa\015\uffaa\017\uffaa\020" +
    "\uffaa\021\uffaa\023\uffaa\026\uffaa\060\uffaa\061\uffaa\062\uffaa" +
    "\001\002\000\036\003\uffab\006\uffab\011\uffab\013\uffab\014" +
    "\uffab\015\uffab\017\uffab\020\uffab\021\uffab\023\uffab\026\uffab" +
    "\060\uffab\061\uffab\062\uffab\001\002\000\004\050\uff76\001" +
    "\002\000\004\050\260\001\002\000\036\003\uffa7\006\uffa7" +
    "\011\uffa7\013\uffa7\014\uffa7\015\uffa7\017\uffa7\020\uffa7\021" +
    "\uffa7\023\uffa7\026\uffa7\060\uffa7\061\uffa7\062\uffa7\001\002" +
    "\000\036\003\uffac\006\uffac\011\uffac\013\uffac\014\uffac\015" +
    "\uffac\017\uffac\020\uffac\021\uffac\023\uffac\026\uffac\060\uffac" +
    "\061\uffac\062\uffac\001\002\000\004\062\135\001\002\000" +
    "\010\053\200\055\264\056\176\001\002\000\004\050\265" +
    "\001\002\000\036\003\uffa8\006\uffa8\011\uffa8\013\uffa8\014" +
    "\uffa8\015\uffa8\017\uffa8\020\uffa8\021\uffa8\023\uffa8\026\uffa8" +
    "\060\uffa8\061\uffa8\062\uffa8\001\002\000\004\050\uff96\001" +
    "\002\000\022\003\147\016\136\031\134\054\152\062\135" +
    "\063\144\064\146\065\143\001\002\000\022\003\uff75\016" +
    "\uff75\031\uff75\054\uff75\062\uff75\063\uff75\064\uff75\065\uff75" +
    "\001\002\000\004\050\uff97\001\002\000\004\050\276\001" +
    "\002\000\024\003\147\016\136\031\134\054\152\055\uff94" +
    "\062\135\063\144\064\146\065\143\001\002\000\004\055" +
    "\275\001\002\000\004\050\uff98\001\002\000\036\003\uff9b" +
    "\006\uff9b\011\uff9b\013\uff9b\014\uff9b\015\uff9b\017\uff9b\020" +
    "\uff9b\021\uff9b\023\uff9b\026\uff9b\060\uff9b\061\uff9b\062\uff9b" +
    "\001\002\000\010\030\155\031\156\050\uff99\001\002\000" +
    "\004\055\301\001\002\000\004\050\302\001\002\000\032" +
    "\003\uffb4\006\uffb4\013\uffb4\014\uffb4\017\uffb4\020\uffb4\021" +
    "\uffb4\023\uffb4\026\uffb4\060\uffb4\061\uffb4\062\uffb4\001\002" +
    "\000\004\054\uffcc\001\002\000\004\061\uffe7\001\002\000" +
    "\004\054\307\001\002\000\004\054\uffc7\001\002\000\010" +
    "\003\063\055\uffbc\062\014\001\002\000\004\055\311\001" +
    "\002\000\006\060\uffe4\062\uffe4\001\002\000\006\060\076" +
    "\062\014\001\002\000\010\005\uffc8\061\uffc8\062\uffc8\001" +
    "\002\000\014\007\uffde\012\uffde\027\uffde\060\uffde\062\uffde" +
    "\001\002\000\004\061\337\001\002\000\004\062\014\001" +
    "\002\000\010\005\056\061\uffd2\062\014\001\002\000\004" +
    "\054\uffc6\001\002\000\004\055\331\001\002\000\010\005" +
    "\uffc0\061\uffc0\062\uffc0\001\002\000\004\054\324\001\002" +
    "\000\010\003\063\055\uffbc\062\014\001\002\000\004\055" +
    "\326\001\002\000\006\060\uffe4\062\uffe4\001\002\000\006" +
    "\060\076\062\014\001\002\000\010\005\uffc2\061\uffc2\062" +
    "\uffc2\001\002\000\006\060\uffe4\062\uffe4\001\002\000\006" +
    "\060\076\062\014\001\002\000\006\005\uffcf\062\uffce\001" +
    "\002\000\010\005\uffc1\061\uffc1\062\uffc1\001\002\000\004" +
    "\062\320\001\002\000\010\005\056\061\uffd3\062\014\001" +
    "\002\000\004\061\uffe9\001\002\000\010\003\uffed\060\uffed" +
    "\062\uffed\001\002\000\014\007\uffdd\012\uffdd\027\uffdd\060" +
    "\uffdd\062\uffdd\001\002\000\006\050\347\052\346\001\002" +
    "\000\006\050\uffeb\052\uffeb\001\002\000\010\050\uffbe\052" +
    "\uffbe\056\072\001\002\000\006\050\uffea\052\uffea\001\002" +
    "\000\004\062\344\001\002\000\010\003\uffee\060\uffee\062" +
    "\uffee\001\002\000\006\050\uffec\052\uffec\001\002\000\006" +
    "\054\321\062\320\001\002\000\004\061\356\001\002\000" +
    "\004\005\043\001\002\000\004\061\355\001\002\000\004" +
    "\061\uffd6\001\002\000\004\061\uffd5\001\002\000\004\061" +
    "\360\001\002\000\004\061\uffd7\001\002\000\004\060\uffd9" +
    "\001\002\000\004\060\uffd8\001\002\000\004\060\uffdb\001" +
    "\002\000\004\062\370\001\002\000\006\050\377\052\376" +
    "\001\002\000\004\045\371\001\002\000\006\050\ufff6\052" +
    "\ufff6\001\002\000\004\045\ufff4\001\002\000\010\063\374" +
    "\064\372\065\375\001\002\000\006\050\ufff3\052\ufff3\001" +
    "\002\000\006\050\ufff5\052\ufff5\001\002\000\006\050\ufff1" +
    "\052\ufff1\001\002\000\006\050\ufff2\052\ufff2\001\002\000" +
    "\004\062\370\001\002\000\014\007\ufff8\012\ufff8\027\ufff8" +
    "\060\ufff8\062\ufff8\001\002\000\006\050\ufff7\052\ufff7\001" +
    "\002\000\004\060\uffd0\001\002\000\004\060\u0103\001\002" +
    "\000\006\061\uffe4\062\uffe4\001\002\000\006\061\u0105\062" +
    "\014\001\002\000\014\007\uffd1\012\uffd1\027\uffd1\060\uffd1" +
    "\062\uffd1\001\002\000\010\005\056\061\u0107\062\014\001" +
    "\002\000\004\002\001\001\002\000\010\005\uffca\061\uffca" +
    "\062\uffca\001\002\000\006\050\u010f\052\u010e\001\002\000" +
    "\006\050\uffdf\052\uffdf\001\002\000\006\050\uffe1\052\uffe1" +
    "\001\002\000\010\050\uffbe\052\uffbe\056\072\001\002\000" +
    "\006\050\uffe0\052\uffe0\001\002\000\006\003\u010a\062\u010c" +
    "\001\002\000\016\007\uffe3\012\uffe3\027\uffe3\060\uffe3\061" +
    "\uffe3\062\uffe3\001\002\000\006\050\uffe2\052\uffe2\001\002" +
    "\000\004\002\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u010f\000\004\045\003\001\001\000\002\001\001\000" +
    "\004\044\006\001\001\000\002\001\001\000\004\003\007" +
    "\001\001\000\016\004\011\041\016\066\014\074\017\107" +
    "\010\116\020\001\001\000\006\042\u0108\043\u010a\001\001" +
    "\000\002\001\001\000\004\006\u0105\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\065\u0101\107\u0100\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\107\363\001\001\000\006\073\024\107\023\001\001" +
    "\000\002\001\001\000\004\024\026\001\001\000\006\033" +
    "\362\107\360\001\001\000\002\001\001\000\012\005\032" +
    "\034\035\064\033\107\031\001\001\000\014\011\351\032" +
    "\045\051\044\077\352\107\350\001\001\000\006\036\341" +
    "\063\342\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\064\037\107\031\001\001\000\016" +
    "\011\043\032\045\035\041\051\044\077\047\107\040\001" +
    "\001\000\002\001\001\000\014\010\316\031\314\050\322" +
    "\060\321\101\315\001\001\000\002\001\001\000\004\061" +
    "\304\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\046\053\047\054\107\052\001\001\000\002\001\001\000" +
    "\010\011\050\032\045\051\044\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\025\060\071\064\100\063\107\061\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\071\066\107\061\001\001\000" +
    "\002\001\001\000\004\007\070\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\040\074\001" +
    "\001\000\010\041\076\105\077\107\010\001\001\000\004" +
    "\075\101\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\102\102\001\001\000\024\012\110" +
    "\052\125\053\121\055\126\076\120\103\124\104\116\105" +
    "\112\106\103\001\001\000\006\017\266\113\271\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\076\256\001\001" +
    "\000\002\001\001\000\012\106\137\110\252\111\147\112" +
    "\144\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\022\012\110\052\125\053\121\076\120\103\127\104" +
    "\116\105\112\106\103\001\001\000\002\001\001\000\004" +
    "\056\130\001\001\000\002\001\001\000\002\001\001\000" +
    "\020\106\137\110\136\111\147\112\144\120\141\121\140" +
    "\122\150\001\001\000\010\106\137\111\147\112\227\001" +
    "\001\000\002\001\001\000\006\073\222\107\023\001\001" +
    "\000\006\021\217\022\156\001\001\000\004\030\200\001" +
    "\001\000\004\016\172\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\020\162\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\015\165\001\001\000\012\106\137\110\152\111\147\112" +
    "\144\001\001\000\004\022\156\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\106\137\111" +
    "\147\112\157\001\001\000\004\020\162\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\106\137\111\164\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\106\137" +
    "\110\136\111\147\112\144\120\167\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\016\106\137\110\136\111\147\112\144\120\141\122" +
    "\173\001\001\000\004\015\165\001\001\000\002\001\001" +
    "\000\012\106\137\110\210\111\147\112\144\001\001\000" +
    "\016\013\204\026\202\106\137\110\203\111\147\112\144" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\022\156\001\001\000\002" +
    "\001\001\000\012\106\137\110\206\111\147\112\144\001" +
    "\001\000\004\022\156\001\001\000\002\001\001\000\004" +
    "\022\156\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\106\137\110\221\111\147\112\144\001" +
    "\001\000\002\001\001\000\004\022\156\001\001\000\004" +
    "\027\223\001\001\000\002\001\001\000\012\106\137\110" +
    "\225\111\147\112\144\001\001\000\004\022\156\001\001" +
    "\000\002\001\001\000\004\020\162\001\001\000\002\001" +
    "\001\000\012\106\137\110\232\111\147\112\144\001\001" +
    "\000\006\022\156\023\234\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\020\106\137\110\136\111\147\112\144\120" +
    "\141\121\241\122\150\001\001\000\004\016\172\001\001" +
    "\000\022\012\110\052\125\053\121\076\120\103\243\104" +
    "\116\105\112\106\103\001\001\000\004\054\245\001\001" +
    "\000\002\001\001\000\022\012\110\052\125\053\121\076" +
    "\120\103\246\104\116\105\112\106\103\001\001\000\002" +
    "\001\001\000\014\012\110\052\125\053\121\104\250\106" +
    "\103\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\022\156\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\106\262\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\106\137\110\276\111\147\112\144\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\016\013\204" +
    "\026\273\106\137\110\203\111\147\112\144\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\022\156\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\025\307\071\064\100" +
    "\063\107\061\001\001\000\002\001\001\000\004\040\311" +
    "\001\001\000\010\041\076\105\312\107\010\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\107\334\001\001\000\010\046\333\047\054\107\052\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\025\324\071\064\100\063\107" +
    "\061\001\001\000\002\001\001\000\004\040\326\001\001" +
    "\000\010\041\076\105\327\107\010\001\001\000\002\001" +
    "\001\000\004\040\331\001\001\000\010\041\076\105\332" +
    "\107\010\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\010\335\050\322\060\321\001\001\000\010\046\333" +
    "\047\054\107\052\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\007\344\001\001\000\002\001\001\000\004\063" +
    "\347\001\001\000\002\001\001\000\002\001\001\000\014" +
    "\010\316\031\356\050\322\060\321\101\315\001\001\000" +
    "\002\001\001\000\010\011\353\032\045\051\044\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\057\365\114\366\117" +
    "\364\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\115\372\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\057\365\114\377\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\040\u0103\001\001\000\006\041\076\107\010\001" +
    "\001\000\002\001\001\000\010\046\u0107\047\054\107\052" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\007\u010c" +
    "\001\001\000\002\001\001\000\004\043\u010f\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$MJParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$MJParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$MJParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** User initialization code. */
  public void user_init() throws java.lang.Exception
    {

errorDetected = false;

    }

  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {

	Symbol s = this.getScanner().next_token();
	if (s != null && s.value != null) 
		log.info(s.toString() + " " + s.value.toString());
	return s;

    }


	boolean errorDetected;
	Logger log = Logger.getLogger(getClass());
   
   
    // slede redefinisani metodi za prijavu gresaka radi izmene teksta poruke
     
    public void report_fatal_error(String message, Object info) throws java.lang.Exception {
      done_parsing();
      report_error(message, info);
    }
  
    public void syntax_error(Symbol cur_token) {
        report_error("\nSintaksna greska", cur_token);
    }
  
    public void unrecovered_syntax_error(Symbol cur_token) throws java.lang.Exception {
        report_fatal_error("Fatalna greska, parsiranje se ne moze nastaviti", cur_token);
    }

    public void report_error(String message, Object info) {
    	errorDetected = true;
    	StringBuilder msg = new StringBuilder(message); 
    	if (info instanceof Symbol)
            msg.append (" na liniji ").append(((Symbol)info).left);
        log.error(msg.toString());
    }



}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$MJParser$actions {
  private final MJParser parser;

  /** Constructor */
  CUP$MJParser$actions(MJParser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$MJParser$do_action(
    int                        CUP$MJParser$act_num,
    java_cup.runtime.lr_parser CUP$MJParser$parser,
    java.util.Stack            CUP$MJParser$stack,
    int                        CUP$MJParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$MJParser$result;

      /* select the action based on the action number */
      switch (CUP$MJParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // Mulop ::= MOD 
            {
              Mulop RESULT = null;
		 RESULT=new MulopMod(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(14/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // Mulop ::= DIV 
            {
              Mulop RESULT = null;
		 RESULT=new MulopDiv(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(14/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // Mulop ::= TIMES 
            {
              Mulop RESULT = null;
		 RESULT=new MulopTimes(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(14/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // Addop ::= MINUS 
            {
              Addop RESULT = null;
		 RESULT=new AddopMinus(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*Addop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // Addop ::= PLUS 
            {
              Addop RESULT = null;
		 RESULT=new AddopPlus(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*Addop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // Relop ::= LTE 
            {
              Relop RESULT = null;
		 RESULT=new RelopLTE(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(15/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // Relop ::= LESS 
            {
              Relop RESULT = null;
		 RESULT=new RelopLess(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(15/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // Relop ::= GTE 
            {
              Relop RESULT = null;
		 RESULT=new RelopGTE(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(15/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // Relop ::= GREATER 
            {
              Relop RESULT = null;
		 RESULT=new RelopGreater(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(15/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // Relop ::= NOTEQUAL 
            {
              Relop RESULT = null;
		 RESULT=new RelopNotEqual(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(15/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // Relop ::= EQUAL 
            {
              Relop RESULT = null;
		 RESULT=new RelopEqual(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(15/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // Assignop ::= ASSIGNMENT 
            {
              Assignop RESULT = null;
		 RESULT=new Assignop(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(13/*Assignop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // Label ::= IDENT 
            {
              Label RESULT = null;
		int labelNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int labelNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String labelName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new Label(labelName); RESULT.setLine(labelNameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(60/*Label*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // Designator ::= Designator DOT IDENT 
            {
              Designator RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Designator D1 = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int nameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new DesignatorDot(D1, name); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(68/*Designator*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // Designator ::= Designator LBRACK Expr RBRACK 
            {
              Designator RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Designator D1 = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int E2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int E2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Expr E2 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new DesignatorArray(D1, E2); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(68/*Designator*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // Designator ::= IDENT 
            {
              Designator RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new SingleDesignator(name); RESULT.setLine(nameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(68/*Designator*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // FactorNew ::= 
            {
              FactorNew RESULT = null;
		 RESULT=new FactorNewNoExpr(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*FactorNew*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // FactorNew ::= LBRACK Expr RBRACK 
            {
              FactorNew RESULT = null;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Expr E1 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new FactorNewExpr(E1); RESULT.setLine(E1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*FactorNew*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // FactorPars ::= LPAREN ActParsList RPAREN 
            {
              FactorPars RESULT = null;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ActParsList A1 = (ActParsList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new FactorActPars(A1); RESULT.setLine(A1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(22/*FactorPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // Factor ::= error 
            {
              Factor RESULT = null;
		int l6left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int l6right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object l6 = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 parser.report_error("Izvrsen oporavak logickog izraza unutar if-a u liniji " + l6left, null);   RESULT=new ErrorFactor(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(71/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // Factor ::= LPAREN Expr RPAREN 
            {
              Factor RESULT = null;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Expr E1 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new FactorExpr(E1); RESULT.setLine(E1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(71/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // Factor ::= NEW ClassName FactorNew 
            {
              Factor RESULT = null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ClassName className = (ClassName)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int Fnleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int Fnright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		FactorNew Fn = (FactorNew)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new NewFactor(className, Fn); RESULT.setLine(classNameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(71/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // Factor ::= BOOLCONST 
            {
              Factor RESULT = null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new BoolConstFactor(value); RESULT.setLine(valueleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(71/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // Factor ::= CHARCONST 
            {
              Factor RESULT = null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Character value = (Character)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new CharConstFactor(value); RESULT.setLine(valueleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(71/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // Factor ::= NUMCONST 
            {
              Factor RESULT = null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Integer value = (Integer)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new NumConstFactor(value); RESULT.setLine(valueleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(71/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // Factor ::= Designator 
            {
              Factor RESULT = null;
		int dleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int dright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Designator d = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new VarFactor(d); RESULT.setLine(dleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(71/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // Factor ::= Designator FactorPars 
            {
              Factor RESULT = null;
		int funcleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int funcright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Designator func = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int F1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int F1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		FactorPars F1 = (FactorPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new FunctionCall(func, F1); RESULT.setLine(funcleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(71/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // Term ::= Factor 
            {
              Term RESULT = null;
		int tleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Factor t = (Factor)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new SingleFactor(t); RESULT.setLine(tleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(72/*Term*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // Term ::= Term Mulop Factor 
            {
              Term RESULT = null;
		int tfleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int tfright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Term tf = (Term)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Mulop M1 = (Mulop)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Factor t = (Factor)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new TermMul(tf, M1, t); RESULT.setLine(tfleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(72/*Term*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // Expr ::= Term 
            {
              Expr RESULT = null;
		int tleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Term t = (Term)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new TermExpression(t); RESULT.setLine(tleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(70/*Expr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // Expr ::= MINUS Term 
            {
              Expr RESULT = null;
		int tleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Term t = (Term)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MinusTermExpression(t); RESULT.setLine(tleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(70/*Expr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // Expr ::= Expr Addop Term 
            {
              Expr RESULT = null;
		int teleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int teright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Expr te = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Addop A1 = (Addop)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Term t = (Term)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new Expression(te, A1, t); RESULT.setLine(teleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(70/*Expr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // CondFact ::= Expr 
            {
              CondFact RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new CondFactExpr(e); RESULT.setLine(eleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(78/*CondFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // CondFact ::= Expr Relop Expr 
            {
              CondFact RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int R1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int R1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Relop R1 = (Relop)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ConditionFact(e1, R1, e2); RESULT.setLine(e1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(78/*CondFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // And ::= AND 
            {
              And RESULT = null;
		 RESULT=new And(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(11/*And*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // CondTerm ::= CondFact 
            {
              CondTerm RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		CondFact C1 = (CondFact)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new SingleCondFact(C1); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(80/*CondTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // CondTerm ::= CondTerm And CondFact 
            {
              CondTerm RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		CondTerm C1 = (CondTerm)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int A2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int A2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		And A2 = (And)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int C3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		CondFact C3 = (CondFact)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ConditionTerm(C1, A2, C3); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(80/*CondTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // Or ::= OR 
            {
              Or RESULT = null;
		 RESULT=new Or(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(12/*Or*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // Condition ::= CondTerm 
            {
              Condition RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		CondTerm C1 = (CondTerm)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new SingleCondTerm(C1); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(79/*Condition*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // Condition ::= Condition Or CondTerm 
            {
              Condition RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Condition C1 = (Condition)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int O2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int O2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Or O2 = (Or)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int C3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		CondTerm C3 = (CondTerm)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ConditionTerms(C1, O2, C3); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(79/*Condition*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // ActPars ::= Expr 
            {
              ActPars RESULT = null;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Expr E1 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new SingleExpr(E1); RESULT.setLine(E1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(9/*ActPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // ActPars ::= ActPars COMMA Expr 
            {
              ActPars RESULT = null;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		ActPars A1 = (ActPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ActualPars(A1, e); RESULT.setLine(A1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(9/*ActPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // ActParsList ::= 
            {
              ActParsList RESULT = null;
		 RESULT=new EmptyActualParsList(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(20/*ActParsList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // ActParsList ::= ActPars 
            {
              ActParsList RESULT = null;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ActPars A1 = (ActPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ActualParsList(A1); RESULT.setLine(A1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(20/*ActParsList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // DesignatorOperation ::= DECR 
            {
              DesignatorOperation RESULT = null;
		 RESULT=new DesignatorDecrement(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(73/*DesignatorOperation*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // DesignatorOperation ::= INCR 
            {
              DesignatorOperation RESULT = null;
		 RESULT=new DesignatorIncrement(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(73/*DesignatorOperation*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // DesignatorOperation ::= LPAREN ActParsList RPAREN 
            {
              DesignatorOperation RESULT = null;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ActParsList A1 = (ActParsList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new DesignatorFuncCall(A1); RESULT.setLine(A1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(73/*DesignatorOperation*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // DesignatorOperation ::= Assignop Expr 
            {
              DesignatorOperation RESULT = null;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Assignop A1 = (Assignop)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new DesignatorAssign(A1, e); RESULT.setLine(A1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(73/*DesignatorOperation*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // DesignatorStatement ::= error SEMI 
            {
              DesignatorStatement RESULT = null;
		int l3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int l3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object l3 = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 parser.report_error("Izvrsen oporavak konstrukcije dodele u liniji " + l3left, null);   RESULT=new ErrorDesignatorStatement(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(8/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // DesignatorStatement ::= Designator DesignatorOperation SEMI 
            {
              DesignatorStatement RESULT = null;
		int dleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int dright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Designator d = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		DesignatorOperation D1 = (DesignatorOperation)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new DesignatorStatmentNoError(d, D1); RESULT.setLine(dleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(8/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // RbraceStatements ::= RBRACE 
            {
              RbraceStatements RESULT = null;
		 RESULT=new RbraceStatements(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(43/*RbraceStatements*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // Statements ::= LBRACE SuperStatement StatementList RbraceStatements 
            {
              Statements RESULT = null;
		int ssleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int ssright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		SuperStatement ss = (SuperStatement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int slleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int slright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		StatementList sl = (StatementList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int R1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int R1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		RbraceStatements R1 = (RbraceStatements)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MultipleStatements(ss, sl, R1); RESULT.setLine(ssleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(67/*Statements*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // NumConstPrint ::= 
            {
              NumConstPrint RESULT = null;
		 RESULT=new NoNumConstPrint(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*NumConstPrint*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // NumConstPrint ::= COMMA NUMCONST 
            {
              NumConstPrint RESULT = null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Integer value = (Integer)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new NumConstant(value); RESULT.setLine(valueleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*NumConstPrint*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // Semi ::= SEMI 
            {
              Semi RESULT = null;
		 RESULT=new Semi(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(10/*Semi*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // Else ::= ELSE 
            {
              Else RESULT = null;
		 RESULT=new Else(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(42/*Else*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // If ::= IF 
            {
              If RESULT = null;
		 RESULT=new If(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(41/*If*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // Do ::= DO 
            {
              Do RESULT = null;
		 RESULT=new Do(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*Do*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // While ::= WHILE 
            {
              While RESULT = null;
		 RESULT=new While(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(44/*While*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // SingleStatement ::= If LPAREN Condition RPAREN Statement 
            {
              SingleStatement RESULT = null;
		int I1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int I1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		If I1 = (If)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Condition C2 = (Condition)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int S3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Statement S3 = (Statement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new UnmatchedStatement(I1, C2, S3); RESULT.setLine(I1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(66/*SingleStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // SingleStatement ::= If LPAREN Condition RPAREN Statement Else Statement 
            {
              SingleStatement RESULT = null;
		int I1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left;
		int I1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).right;
		If I1 = (If)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		Condition C2 = (Condition)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int S3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int S3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Statement S3 = (Statement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int E4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int E4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Else E4 = (Else)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int S5left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S5right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Statement S5 = (Statement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MatchedStatement(I1, C2, S3, E4, S5); RESULT.setLine(I1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(66/*SingleStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // SingleStatement ::= GOTO Label SEMI 
            {
              SingleStatement RESULT = null;
		int labelNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int labelNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Label labelName = (Label)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new GoToStmt(labelName); RESULT.setLine(labelNameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(66/*SingleStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // SingleStatement ::= READ LPAREN Designator RPAREN SEMI 
            {
              SingleStatement RESULT = null;
		int dleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int dright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Designator d = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		 RESULT=new ReadStmt(d); RESULT.setLine(dleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(66/*SingleStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // SingleStatement ::= PRINT LPAREN Expr NumConstPrint RPAREN SEMI 
            {
              SingleStatement RESULT = null;
		int tleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Expr t = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int N1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int N1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		NumConstPrint N1 = (NumConstPrint)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		 RESULT=new PrintStmt(t, N1); RESULT.setLine(tleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(66/*SingleStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // SingleStatement ::= RETURN SEMI 
            {
              SingleStatement RESULT = null;
		 RESULT=new ReturnNoExprStmt(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(66/*SingleStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // SingleStatement ::= RETURN Expr SEMI 
            {
              SingleStatement RESULT = null;
		int tleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Expr t = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ReturnExprStmt(t); RESULT.setLine(tleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(66/*SingleStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // SingleStatement ::= CONTINUE SEMI 
            {
              SingleStatement RESULT = null;
		 RESULT=new ContinueStmt(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(66/*SingleStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // SingleStatement ::= BREAK SEMI 
            {
              SingleStatement RESULT = null;
		 RESULT=new BreakStmt(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(66/*SingleStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // SingleStatement ::= Do Statement While LPAREN Condition RPAREN SEMI 
            {
              SingleStatement RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).right;
		Do D1 = (Do)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).value;
		int S2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int S2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		Statement S2 = (Statement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int W3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int W3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		While W3 = (While)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int C4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int C4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Condition C4 = (Condition)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		 RESULT=new DoWhileStmt(D1, S2, W3, C4); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(66/*SingleStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // SingleStatement ::= DesignatorStatement 
            {
              SingleStatement RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		DesignatorStatement D1 = (DesignatorStatement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new DesignatorStmt(D1); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(66/*SingleStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // Statement ::= Statements 
            {
              Statement RESULT = null;
		int S1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Statements S1 = (Statements)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new Stmts(S1); RESULT.setLine(S1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(65/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // Statement ::= Label COLON SingleStatement 
            {
              Statement RESULT = null;
		int lleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Label l = (Label)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int S1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		SingleStatement S1 = (SingleStatement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new SingleStatementWithIdent(l, S1); RESULT.setLine(lleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(65/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // Statement ::= SingleStatement 
            {
              Statement RESULT = null;
		int S1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		SingleStatement S1 = (SingleStatement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new SingleStatementNoLabel(S1); RESULT.setLine(S1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(65/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // SuperStatement ::= 
            {
              SuperStatement RESULT = null;
		 RESULT=new NotSuperStmt(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(59/*SuperStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // SuperStatement ::= SUPER LPAREN RPAREN SEMI 
            {
              SuperStatement RESULT = null;
		 RESULT=new SuperStmt(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(59/*SuperStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // StatementList ::= 
            {
              StatementList RESULT = null;
		 RESULT=new NoStatements(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(64/*StatementList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // StatementList ::= StatementList Statement 
            {
              StatementList RESULT = null;
		int S1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int S1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		StatementList S1 = (StatementList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int S2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Statement S2 = (Statement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new StatementListNotEmpty(S1, S2); RESULT.setLine(S1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(64/*StatementList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // Type ::= IDENT 
            {
              Type RESULT = null;
		int typeNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int typeNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String typeName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new Type(typeName); RESULT.setLine(typeNameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(69/*Type*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // FormParam ::= error 
            {
              FormParam RESULT = null;
		int l4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int l4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object l4 = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 parser.report_error("Izvrsen oporavak parametara funkcije u liniji " + l4left, null);   RESULT=new ErrorFormParameter(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(55/*FormParam*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // FormParam ::= Type IDENT Brackets 
            {
              FormParam RESULT = null;
		int typeleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int typeright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Type type = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int paramNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int paramNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		String paramName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int bracketsleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int bracketsright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Brackets brackets = (Brackets)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new FormParameter(type, paramName, brackets); RESULT.setLine(typeleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(55/*FormParam*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // FormPars ::= FormParam 
            {
              FormPars RESULT = null;
		int F1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int F1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		FormParam F1 = (FormParam)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new SingleFormParam(F1); RESULT.setLine(F1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(62/*FormPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // FormPars ::= FormPars COMMA FormParam 
            {
              FormPars RESULT = null;
		int F1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int F1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		FormPars F1 = (FormPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int F2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int F2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		FormParam F2 = (FormParam)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new FormParams(F1, F2); RESULT.setLine(F1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(62/*FormPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // FormParamList ::= 
            {
              FormParamList RESULT = null;
		 RESULT=new NoFormParams(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(19/*FormParamList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // FormParamList ::= FormPars 
            {
              FormParamList RESULT = null;
		int fleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int fright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		FormPars f = (FormPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new FormParamLs(f); RESULT.setLine(fleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(19/*FormParamList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // Brackets ::= 
            {
              Brackets RESULT = null;
		 RESULT=new NoBrackets(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(5/*Brackets*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // Brackets ::= LBRACK RBRACK 
            {
              Brackets RESULT = null;
		 RESULT=new WithBrackets(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(5/*Brackets*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // MethodDeclsNoIdent ::= MethodDeclNoIdent 
            {
              MethodDeclsNoIdent RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		MethodDeclNoIdent M1 = (MethodDeclNoIdent)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new SingleMethodDeclarationNoId(M1); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(6/*MethodDeclsNoIdent*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // MethodDeclsNoIdent ::= MethodDeclsNoIdent MethodDecl 
            {
              MethodDeclsNoIdent RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		MethodDeclsNoIdent M1 = (MethodDeclsNoIdent)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int M2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		MethodDecl M2 = (MethodDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MethodDeclarationsNoId(M1, M2); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(6/*MethodDeclsNoIdent*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // MethodDeclNoIdent ::= MethodName LPAREN FormParamList RPAREN VarDecls Statements 
            {
              MethodDeclNoIdent RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		MethodName M1 = (MethodName)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int F2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int F2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		FormParamList F2 = (FormParamList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int V3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int V3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		VarDecls V3 = (VarDecls)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int S4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Statements S4 = (Statements)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MethodDeclNoId(M1, F2, V3, S4); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(46/*MethodDeclNoIdent*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // MethodDeclsVoid ::= MethodDeclsVoidList 
            {
              MethodDeclsVoid RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		MethodDeclsVoidList M1 = (MethodDeclsVoidList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MethodDeclarationsVoid(M1); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(7/*MethodDeclsVoid*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // MethodDeclsVoidList ::= MethodDeclVoid 
            {
              MethodDeclsVoidList RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		MethodDeclVoid M1 = (MethodDeclVoid)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new SingleMethodVoidDeclaration(M1); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(24/*MethodDeclsVoidList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // MethodDeclsVoidList ::= MethodDeclsVoidList MethodDecl 
            {
              MethodDeclsVoidList RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		MethodDeclsVoidList M1 = (MethodDeclsVoidList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int M2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		MethodDecl M2 = (MethodDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MethodDeclarationsVoidList(M1, M2); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(24/*MethodDeclsVoidList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // MethodName ::= IDENT 
            {
              MethodName RESULT = null;
		int methodNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int methodNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String methodName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MethodName(methodName); RESULT.setLine(methodNameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(38/*MethodName*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // MethodVoidName ::= IDENT 
            {
              MethodVoidName RESULT = null;
		int methodNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int methodNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String methodName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MethodVoidName(methodName); RESULT.setLine(methodNameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(47/*MethodVoidName*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // MethodDeclVoid ::= VOID MethodVoidName LPAREN FormParamList RPAREN VarDecls Statements 
            {
              MethodDeclVoid RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		MethodVoidName M1 = (MethodVoidName)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int F2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int F2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		FormParamList F2 = (FormParamList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int V3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int V3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		VarDecls V3 = (VarDecls)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int S4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Statements S4 = (Statements)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MethodDeclVoid(M1, F2, V3, S4); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(39/*MethodDeclVoid*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // MethodDecls ::= 
            {
              MethodDecls RESULT = null;
		 RESULT=new NoMethodDecls(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(4/*MethodDecls*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // MethodDecls ::= MethodDecls MethodDecl 
            {
              MethodDecls RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		MethodDecls M1 = (MethodDecls)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int M2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		MethodDecl M2 = (MethodDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MethodDeclarations(M1, M2); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(4/*MethodDecls*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // MethodTypeName ::= VOID IDENT 
            {
              MethodTypeName RESULT = null;
		int methodNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int methodNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String methodName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MethodVoidType(methodName); RESULT.setLine(methodNameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(37/*MethodTypeName*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // MethodTypeName ::= Type IDENT 
            {
              MethodTypeName RESULT = null;
		int retTypeleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int retTyperight = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Type retType = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int methodNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int methodNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String methodName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MethodDeclType(retType, methodName); RESULT.setLine(retTypeleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(37/*MethodTypeName*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // MethodDecl ::= MethodTypeName LPAREN FormParamList RPAREN VarDecls Statements 
            {
              MethodDecl RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		MethodTypeName m = (MethodTypeName)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int F1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int F1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		FormParamList F1 = (FormParamList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int V2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int V2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		VarDecls V2 = (VarDecls)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int S3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Statements S3 = (Statements)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MethodDeclaration(m, F1, V2, S3); RESULT.setLine(mleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(36/*MethodDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // ConstructorDeclNoIdent ::= LPAREN RPAREN VarDecls Statements 
            {
              ConstructorDeclNoIdent RESULT = null;
		int V1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int V1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		VarDecls V1 = (VarDecls)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int S2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Statements S2 = (Statements)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ConstructorDeclNoIdent(V1, S2); RESULT.setLine(V1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(63/*ConstructorDeclNoIdent*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // ConstructorDecl ::= Type LPAREN RPAREN VarDecls Statements 
            {
              ConstructorDecl RESULT = null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		Type className = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int V1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int V1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		VarDecls V1 = (VarDecls)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int S2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Statements S2 = (Statements)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ConstructorDecl(className, V1, S2); RESULT.setLine(classNameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(61/*ConstructorDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // RecordName ::= Type 
            {
              RecordName RESULT = null;
		int recordNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int recordNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Type recordName = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new RecordName(recordName); RESULT.setLine(recordNameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(51/*RecordName*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // RecordDecl ::= RECORD RecordName LBRACE VarDecls RBRACE 
            {
              RecordDecl RESULT = null;
		int R1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int R1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		RecordName R1 = (RecordName)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int V2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int V2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		VarDecls V2 = (VarDecls)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new RecordDecl(R1, V2); RESULT.setLine(R1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(52/*RecordDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // ClassBodyInternal ::= MethodDeclsNoIdent 
            {
              ClassBodyInternal RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		MethodDeclsNoIdent M1 = (MethodDeclsNoIdent)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ClassBodyNoConstructor(M1); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(23/*ClassBodyInternal*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // ClassBodyInternal ::= ConstructorDeclNoIdent Type MethodDeclsNoIdent 
            {
              ClassBodyInternal RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		ConstructorDeclNoIdent C1 = (ConstructorDeclNoIdent)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int typeleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int typeright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Type type = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int M2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		MethodDeclsNoIdent M2 = (MethodDeclsNoIdent)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ClassBodyWithConstructor(C1, type, M2); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(23/*ClassBodyInternal*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // ClassBody ::= 
            {
              ClassBody RESULT = null;
		 RESULT=new EmptyClassBody(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(3/*ClassBody*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // ClassBody ::= LBRACE MethodDeclsVoid RBRACE 
            {
              ClassBody RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		MethodDeclsVoid M1 = (MethodDeclsVoid)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ClassBodyNoConstructorVoid(M1); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(3/*ClassBody*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // ClassBody ::= LBRACE ConstructorDecl MethodDeclsVoid RBRACE 
            {
              ClassBody RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		ConstructorDecl C1 = (ConstructorDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int M2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		MethodDeclsVoid M2 = (MethodDeclsVoid)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ClassBodyWithConstructorVoid(C1, M2); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(3/*ClassBody*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // ClassBody ::= LBRACE Type ClassBodyInternal RBRACE 
            {
              ClassBody RESULT = null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Type className = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ClassBodyInternal C1 = (ClassBodyInternal)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ClassBodyNotEmpty(className, C1); RESULT.setLine(classNameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(3/*ClassBody*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // ExtendsType ::= error 
            {
              ExtendsType RESULT = null;
		int l7left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int l7right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object l7 = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 parser.report_error("Izvrsen oporavak deklaracije prosirenja natklase u liniji " + l7left, null);   RESULT=new ErrorExtends(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*ExtendsType*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // ExtendsType ::= Type 
            {
              ExtendsType RESULT = null;
		int extendedClassTypeleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int extendedClassTyperight = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Type extendedClassType = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ExtendedClassType(extendedClassType); RESULT.setLine(extendedClassTypeleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*ExtendsType*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // Extends ::= 
            {
              Extends RESULT = null;
		 RESULT=new DoesntExtendsClass(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(18/*Extends*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // Extends ::= EXTENDS ExtendsType 
            {
              Extends RESULT = null;
		int tleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ExtendsType t = (ExtendsType)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ExtendClass(t); RESULT.setLine(tleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(18/*Extends*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // ClassName ::= Type 
            {
              ClassName RESULT = null;
		int classTypeleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int classTyperight = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Type classType = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ClassName(classType); RESULT.setLine(classTypeleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(57/*ClassName*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // ClassDecl ::= CLASS ClassName Extends LBRACE ClassBody RBRACE 
            {
              ClassDecl RESULT = null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		ClassName className = (ClassName)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Extends E1 = (Extends)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ClassBody C2 = (ClassBody)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ClassDecl2(className, E1, C2); RESULT.setLine(classNameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(58/*ClassDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // ClassDecl ::= CLASS ClassName Extends LBRACE VarDeclsClass LBRACE ClassBody2 RBRACE 
            {
              ClassDecl RESULT = null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).right;
		ClassName className = (ClassName)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).value;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		Extends E1 = (Extends)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int V2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int V2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		VarDeclsClass V2 = (VarDeclsClass)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int C3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int C3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ClassBody2 C3 = (ClassBody2)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ClassDecl1(className, E1, V2, C3); RESULT.setLine(classNameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(58/*ClassDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // SingleVarDecl ::= error 
            {
              SingleVarDecl RESULT = null;
		int lleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object l = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 parser.report_error("Izvrsen oporavak globalne promenljive u liniji " + lleft, null);   RESULT=new ErrorDecl(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(33/*SingleVarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // SingleVarDecl ::= IDENT Brackets 
            {
              SingleVarDecl RESULT = null;
		int varNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int varNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		String varName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int B1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int B1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Brackets B1 = (Brackets)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new SingleVarDeclaration(varName, B1); RESULT.setLine(varNameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(33/*SingleVarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // VarDeclList ::= SingleVarDecl 
            {
              VarDeclList RESULT = null;
		int S1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		SingleVarDecl S1 = (SingleVarDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new SingleVar(S1); RESULT.setLine(S1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(32/*VarDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // VarDeclList ::= VarDeclList COMMA SingleVarDecl 
            {
              VarDeclList RESULT = null;
		int V1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int V1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		VarDeclList V1 = (VarDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int S2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		SingleVarDecl S2 = (SingleVarDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new VarDeclarationList(V1, S2); RESULT.setLine(V1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(32/*VarDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // VarDecl ::= Type VarDeclList SEMI 
            {
              VarDecl RESULT = null;
		int varTypeleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int varTyperight = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Type varType = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int V1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int V1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		VarDeclList V1 = (VarDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new VariableDeclaration(varType, V1); RESULT.setLine(varTypeleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(31/*VarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // VarDecls ::= 
            {
              VarDecls RESULT = null;
		 RESULT=new NoVarDecls(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(30/*VarDecls*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // VarDecls ::= VarDecls VarDecl 
            {
              VarDecls RESULT = null;
		int V1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int V1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		VarDecls V1 = (VarDecls)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int V2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int V2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		VarDecl V2 = (VarDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new VarDeclarations(V1, V2); RESULT.setLine(V1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(30/*VarDecls*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // ClassBody2 ::= RBRACE 
            {
              ClassBody2 RESULT = null;
		 RESULT=new EmptyClassBody2(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*ClassBody2*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // ClassBody2 ::= MethodDeclsVoid RBRACE 
            {
              ClassBody2 RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		MethodDeclsVoid M1 = (MethodDeclsVoid)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ClassBody2NoConstructorVoid(M1); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*ClassBody2*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // ClassBody2 ::= ConstructorDecl MethodDeclsVoid RBRACE 
            {
              ClassBody2 RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		ConstructorDecl C1 = (ConstructorDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int M2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		MethodDeclsVoid M2 = (MethodDeclsVoid)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ClassBody2WithConstructorVoids(C1, M2); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*ClassBody2*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // ClassBody2 ::= Type ClassBodyInternal RBRACE 
            {
              ClassBody2 RESULT = null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Type className = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ClassBodyInternal C1 = (ClassBodyInternal)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new Class2BodyNotEmpty(className, C1); RESULT.setLine(classNameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*ClassBody2*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // SingleClassVarDecl ::= IDENT Brackets 
            {
              SingleClassVarDecl RESULT = null;
		int varNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int varNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		String varName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int B1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int B1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Brackets B1 = (Brackets)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new SingleClassVarDeclaration(varName, B1); RESULT.setLine(varNameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(49/*SingleClassVarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // VarDeclClassList ::= SingleClassVarDecl 
            {
              VarDeclClassList RESULT = null;
		int S1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		SingleClassVarDecl S1 = (SingleClassVarDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new SingleClassVar(S1); RESULT.setLine(S1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(28/*VarDeclClassList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // VarDeclClassList ::= VarDeclClassList COMMA SingleClassVarDecl 
            {
              VarDeclClassList RESULT = null;
		int V1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int V1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		VarDeclClassList V1 = (VarDeclClassList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int S2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		SingleClassVarDecl S2 = (SingleClassVarDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new VarDeclarationClassList(V1, S2); RESULT.setLine(V1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(28/*VarDeclClassList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // VarDeclClass ::= error SEMI 
            {
              VarDeclClass RESULT = null;
		int l15left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int l15right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Object l15 = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		 parser.report_error("Izvrsen oporavak klasne promenljive do ; u liniji " + l15left, null);   RESULT=new SingleVarError(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(50/*VarDeclClass*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // VarDeclClass ::= Type VarDeclClassList SEMI 
            {
              VarDeclClass RESULT = null;
		int varTypeleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int varTyperight = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Type varType = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int V1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int V1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		VarDeclClassList V1 = (VarDeclClassList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ClassVarDeclaration(varType, V1); RESULT.setLine(varTypeleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(50/*VarDeclClass*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // VarDeclsClass ::= VarDeclClass 
            {
              VarDeclsClass RESULT = null;
		int V1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int V1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		VarDeclClass V1 = (VarDeclClass)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new SingleClassDecl(V1); RESULT.setLine(V1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(26/*VarDeclsClass*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // VarDeclsClass ::= VarDeclsClass VarDeclClass 
            {
              VarDeclsClass RESULT = null;
		int V1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int V1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		VarDeclsClass V1 = (VarDeclsClass)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int V2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int V2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		VarDeclClass V2 = (VarDeclClass)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ClassVarDeclarations(V1, V2); RESULT.setLine(V1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(26/*VarDeclsClass*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // ConstType ::= BOOLCONST 
            {
              ConstType RESULT = null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new BoolConst(value); RESULT.setLine(valueleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(75/*ConstType*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // ConstType ::= CHARCONST 
            {
              ConstType RESULT = null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Character value = (Character)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new CharConst(value); RESULT.setLine(valueleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(75/*ConstType*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // ConstType ::= NUMCONST 
            {
              ConstType RESULT = null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Integer value = (Integer)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new NumConst(value); RESULT.setLine(valueleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(75/*ConstType*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // ConstName ::= IDENT 
            {
              ConstName RESULT = null;
		int constnameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int constnameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String constname = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ConstName(constname); RESULT.setLine(constnameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(45/*ConstName*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // SingleConstDecl ::= ConstName ASSIGNMENT ConstType 
            {
              SingleConstDecl RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		ConstName C1 = (ConstName)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int constValueleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int constValueright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ConstType constValue = (ConstType)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new SingleConstDeclaration(C1, constValue); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(74/*SingleConstDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // ConstDeclList ::= SingleConstDecl 
            {
              ConstDeclList RESULT = null;
		int S1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		SingleConstDecl S1 = (SingleConstDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ConstDeclListDerived1(S1); RESULT.setLine(S1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(77/*ConstDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // ConstDeclList ::= ConstDeclList COMMA SingleConstDecl 
            {
              ConstDeclList RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		ConstDeclList C1 = (ConstDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int S2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		SingleConstDecl S2 = (SingleConstDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ConstDeclarationList(C1, S2); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(77/*ConstDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // ConstDecl ::= CONST Type ConstDeclList SEMI 
            {
              ConstDecl RESULT = null;
		int constTypeleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int constTyperight = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Type constType = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ConstDeclList C1 = (ConstDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ConstDecl(constType, C1); RESULT.setLine(constTypeleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(76/*ConstDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // Decl ::= RecordDecl 
            {
              Decl RESULT = null;
		int R1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int R1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		RecordDecl R1 = (RecordDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new RecordDeclaration(R1); RESULT.setLine(R1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(2/*Decl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Decl ::= ClassDecl 
            {
              Decl RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ClassDecl C1 = (ClassDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ClassDeclaration(C1); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(2/*Decl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Decl ::= VarDecl 
            {
              Decl RESULT = null;
		int V1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int V1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		VarDecl V1 = (VarDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new VarDeclaration(V1); RESULT.setLine(V1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(2/*Decl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Decl ::= ConstDecl 
            {
              Decl RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ConstDecl C1 = (ConstDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ConstDeclaration(C1); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(2/*Decl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Decls ::= 
            {
              Decls RESULT = null;
		 RESULT=new NoDeclarations(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(1/*Decls*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // Decls ::= Decls Decl 
            {
              Decls RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Decls D1 = (Decls)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int D2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int D2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Decl D2 = (Decl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new Declarations(D1, D2); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(1/*Decls*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // ProgName ::= IDENT 
            {
              ProgName RESULT = null;
		int programNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int programNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String programName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ProgName(programName); RESULT.setLine(programNameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(34/*ProgName*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= Program EOF 
            {
              SyntaxNode RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Program start_val = (Program)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		RESULT = start_val;
              CUP$MJParser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$MJParser$parser.done_parsing();
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // Program ::= PROG ProgName Decls LBRACE MethodDecls RBRACE 
            {
              Program RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		ProgName p = (ProgName)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Decls D1 = (Decls)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int M2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		MethodDecls M2 = (MethodDecls)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new Program(p, D1, M2); RESULT.setLine(pleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(35/*Program*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

